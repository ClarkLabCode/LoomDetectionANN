%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Looming detection -1.pdf)
%%Creator: (Adobe Acrobat 21.1.0)
%%For: bhzhou01
%%CreationDate: 3/2/21, 12:03 PM
%%BoundingBox: 0 0 112 104
%%HiResBoundingBox: 0 0 111.0099 103.3540
%%CropBox: 0 0 111.0099 103.3540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 566 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2021-03-02T17:47:33Z"
   xmp:ModifyDate="2021-03-02T17:47:33Z"
   pdf:Producer="iOS Version 14.4 (Build 18D52) Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -103.354 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 103.354 li
111.01 103.354 li
111.01 0 li
cp
clp
gsave
-199.334 404.338 mo
251.97 462.516 li
327.087 -120.181 li
-124.218 -178.359 li
-199.334 404.338 li
clp
-199.334 404.338 mo
251.97 462.516 li
327.087 -120.181 li
-124.218 -178.359 li
-199.334 404.338 li
false sop
0 0 0 0 cmyk
f
grestore
57.4212 50.9431 mo
57.3939 51.4679 57.6379 51.9995 58.1247 52.2356 cv
58.4805 52.4086 58.8869 52.3773 59.2341 52.2022 cv
59.6062 52.0142 59.7564 51.5607 59.5686 51.1876 cv
59.5086 51.0892 li
59.5095 51.0903 li
59.5606 50.5141 59.1352 50.0055 58.5599 49.9546 cv
57.9838 49.9025 57.4752 50.328 57.4244 50.9032 cv
57.4212 50.9431 li
57.4212 50.9431 mo
57.3912 51.52 57.8358 52.0129 58.4128 52.0419 cv
58.8806 52.066 59.3082 51.7762 59.4583 51.3317 cv
59.54 51.0892 59.4938 51.2284 59.4562 51.2689 cv
59.508 51.2424 li
60.0542 50.9871 60.2902 50.337 60.0349 49.7908 cv
59.7798 49.2438 59.1297 49.0076 58.5836 49.2629 cv
58.5556 49.2764 li
57.9109 49.6006 57.459 50.2119 57.4212 50.9431 cv
59.508 51.2424 mo
59.737 51.1559 li
60.345 51.2343 60.9015 50.8039 60.9799 50.196 cv
61.0583 49.588 60.6299 49.0317 60.022 48.9524 cv
59.5125 48.8856 59.0062 49.0503 58.5556 49.2764 cv
58.0165 49.5478 57.7987 50.2043 58.0701 50.7434 cv
58.3358 51.2708 58.9728 51.492 59.508 51.2424 cv
59.0273 50.764 mo
59.0304 50.8804 59.0285 50.9971 59.0226 51.1133 cv
59.0236 51.1134 li
58.9924 51.7385 59.4753 52.2706 60.1005 52.3018 cv
60.7267 52.3321 61.2589 51.8491 61.2891 51.224 cv
61.2906 51.1959 li
61.299 50.8178 61.2884 50.4313 61.1895 50.0646 cv
61.0376 49.5057 60.621 49.0305 60.022 48.9524 cv
59.4143 48.8729 58.8568 49.3022 58.7774 49.9101 cv
58.7368 50.2173 58.8268 50.5274 59.0252 50.7647 cv
59.0273 50.764 li
60.3901 53.4421 mo
61.1063 52.9386 61.271 52.0131 61.2906 51.1959 cv
61.3048 50.5695 60.8094 50.0489 60.1831 50.0338 cv
59.568 50.0189 59.0535 50.4982 59.0236 51.1134 cv
59.0145 51.2856 59.0015 51.4644 58.9527 51.6316 cv
58.9529 51.6306 li
58.4755 52.057 58.4354 52.7899 58.861 53.2662 cv
59.2532 53.7039 59.91 53.7796 60.3901 53.4421 cv
58.9256 53.9067 mo
59.4546 53.9336 59.9621 53.7429 60.3901 53.4421 cv
60.9134 53.0741 61.0397 52.3523 60.6728 51.8281 cv
60.3166 51.3214 59.6244 51.1848 59.1015 51.5177 cv
59.0223 51.5619 li
59.0225 51.5598 li
58.3747 51.5399 57.8322 52.0486 57.8121 52.6975 cv
57.7923 53.3362 58.2867 53.8738 58.9256 53.9067 cv
57.4335 51.716 mo
57.4434 52.1005 57.4803 52.4954 57.6116 52.8602 cv
57.8166 53.4291 58.3007 53.8746 58.9256 53.9067 cv
59.5728 53.9398 60.1248 53.4422 60.158 52.7942 cv
60.1762 52.4577 60.0471 52.1296 59.8062 51.8939 cv
59.7902 51.6507 li
59.7722 51.0001 59.2293 50.4875 58.5786 50.5065 cv
57.9289 50.5246 57.4165 51.0655 57.4335 51.716 cv
57.4335 51.716 mo
57.4504 52.3665 57.9922 52.88 58.6428 52.863 cv
59.2934 52.8451 59.8078 52.3044 59.79 51.6528 cv
59.7902 51.6507 li
59.7793 51.2582 59.7477 50.8457 59.7982 50.4541 cv
59.8809 49.8133 59.4282 49.2267 58.7884 49.1441 cv
58.1706 49.0645 57.5982 49.4838 57.488 50.0967 cv
57.3926 50.6258 57.4197 51.1818 57.4335 51.716 cv
59.5585 51.023 mo
59.5586 51.022 li
60.1923 50.9635 60.6579 50.4025 60.5994 49.7688 cv
60.5417 49.1372 59.9827 48.6709 59.3504 48.7266 cv
59.0057 48.7568 58.658 48.8258 58.3464 48.9833 cv
57.9074 49.2051 57.5763 49.607 57.488 50.0967 cv
57.3738 50.7323 57.7965 51.3403 58.4311 51.4544 cv
58.8588 51.5317 59.2925 51.3659 59.5594 51.0241 cv
59.5585 51.023 li
59.5761 51.0203 mo
59.6239 51.0163 li
59.6228 51.0172 li
60.069 51.467 60.7954 51.4708 61.2451 51.0247 cv
61.6116 50.6616 61.6912 50.099 61.4386 49.6492 cv
61.0165 48.896 60.1623 48.6548 59.3504 48.7266 cv
58.7171 48.7821 58.2477 49.3417 58.3041 49.9761 cv
58.3594 50.6103 58.9192 51.0788 59.5535 51.0233 cv
59.5761 51.0203 li
59.4328 50.7618 mo
59.5088 50.9006 59.4809 51.258 59.4714 51.4403 cv
59.437 52.0832 59.9309 52.6318 60.5737 52.6663 cv
61.2156 52.7006 61.7653 52.2069 61.7988 51.5639 cv
61.8003 51.5208 li
61.8105 50.8869 61.7542 50.2121 61.4387 49.6482 cv
61.4386 49.6492 li
61.1288 49.096 60.4292 48.8999 59.8769 49.2098 cv
59.3282 49.5172 59.1299 50.2106 59.4328 50.7618 cv
60.6998 53.6828 mo
61.4838 53.2484 61.7863 52.373 61.8003 51.5208 cv
61.8106 50.8778 61.2972 50.3468 60.6534 50.3364 cv
60.0264 50.3262 59.5037 50.8143 59.4714 51.4403 cv
59.4661 51.5364 59.4612 51.6447 59.4233 51.7355 cv
59.4392 51.6983 59.6024 51.5671 59.4298 51.693 cv
58.9023 52.0778 58.7867 52.8181 59.1724 53.3457 cv
59.5237 53.8265 60.1777 53.9714 60.6998 53.6828 cv
59.061 54.0301 mo
59.6306 54.1005 60.2005 53.9582 60.6998 53.6828 cv
61.2709 53.3672 61.4775 52.6477 61.1621 52.0757 cv
60.8463 51.5057 60.1292 51.2972 59.5573 51.6117 cv
59.365 51.6796 li
58.7159 51.5919 58.1197 52.0475 58.0321 52.6956 cv
57.9444 53.3447 58.3998 53.9419 59.0491 54.0285 cv
59.061 54.0301 li
57.5987 51.4671 mo
57.5912 51.9238 57.6101 52.3952 57.746 52.8351 cv
57.9347 53.4442 58.4051 53.9485 59.061 54.0301 cv
59.711 54.1108 60.3027 53.6497 60.3836 52.9997 cv
60.4317 52.6107 60.2841 52.2226 59.9897 51.9639 cv
59.975 51.8128 59.9723 51.6612 59.9749 51.5082 cv
59.9859 50.8522 59.4638 50.3111 58.8079 50.2992 cv
58.1519 50.2881 57.6107 50.8102 57.5988 51.4661 cv
57.5987 51.4671 li
57.5987 51.4671 mo
57.5876 52.1231 58.1107 52.6644 58.7668 52.6753 cv
59.4228 52.6864 59.9629 52.1641 59.9749 51.5082 cv
59.9796 51.2527 59.9904 50.9889 60.0527 50.7399 cv
60.0907 50.6258 li
60.0761 50.6532 59.9992 50.741 60.0999 50.6321 cv
60.5478 50.1533 60.5225 49.403 60.0438 48.9562 cv
59.6074 48.5479 58.9354 48.5279 58.4757 48.9102 cv
57.7406 49.5213 57.6143 50.5718 57.5987 51.4671 cv
59.9999 50.728 mo
60.1853 50.643 li
60.8389 50.6335 61.3617 50.0969 61.3522 49.4434 cv
61.3435 48.7909 60.8089 48.2693 60.1556 48.2768 cv
59.5385 48.2841 58.9489 48.5165 58.4757 48.9102 cv
57.9722 49.3283 57.9031 50.0756 58.322 50.5802 cv
58.74 51.0839 59.4884 51.1531 59.9921 50.734 cv
59.9999 50.728 li
59.9166 50.6155 mo
60.2832 51.1577 61.0201 51.3001 61.5624 50.9335 cv
62.0385 50.6117 62.2157 49.9953 61.982 49.4702 cv
61.6568 48.7386 60.9623 48.2678 60.1556 48.2768 cv
59.5032 48.2844 58.9794 48.8199 58.987 49.4732 cv
58.9926 50.0245 59.379 50.4988 59.9186 50.6157 cv
59.9166 50.6155 li
59.8095 50.4211 mo
59.9004 50.6316 59.8905 50.8883 59.8739 51.1111 cv
59.8233 51.7689 60.3159 52.3437 60.9739 52.3942 cv
61.6326 52.4458 62.2073 51.9533 62.258 51.2944 cv
62.2587 51.2724 li
62.2951 50.6619 62.2329 50.0338 61.982 49.4702 cv
61.7162 48.8723 61.016 48.6025 60.4171 48.8681 cv
59.8234 49.1323 59.5527 49.8245 59.8095 50.4211 cv
61.6154 53.1817 mo
62.015 52.6242 62.2193 51.9538 62.2587 51.2724 cv
62.2974 50.6128 61.7945 50.0479 61.135 50.0092 cv
60.4846 49.9718 59.9244 50.4612 59.8739 51.1111 cv
59.856 51.3426 59.8004 51.5795 59.662 51.7694 cv
59.2691 52.3065 59.3865 53.0608 59.9238 53.4537 cv
60.4619 53.8467 61.2161 53.7291 61.6091 53.191 cv
61.6154 53.1817 li
58.9068 52.9737 mo
59.1589 53.5134 59.6449 53.935 60.2654 53.9474 cv
60.8298 53.9576 61.2993 53.6239 61.6154 53.1817 cv
62.0027 52.6408 61.879 51.8878 61.3371 51.5004 cv
61.0601 51.3023 60.7124 51.2302 60.3795 51.3022 cv
60.3806 51.3015 li
59.7417 51.0961 59.0563 51.4463 58.8508 52.0862 cv
58.7567 52.3786 58.7762 52.6957 58.9068 52.9737 cv
58.6093 50.8704 mo
58.5583 51.5787 58.6016 52.3214 58.9068 52.9737 cv
59.1903 53.5819 59.9147 53.8447 60.522 53.5601 cv
61.1208 53.2802 61.3863 52.5735 61.1203 51.9695 cv
60.9994 51.6947 61.0283 51.3386 61.0503 51.05 cv
61.1009 50.3759 60.5959 49.7885 59.9218 49.7379 cv
59.2477 49.6874 58.6594 50.1923 58.6088 50.8663 cv
58.6093 50.8704 li
58.6093 50.8704 mo
58.5606 51.5447 59.0679 52.1303 59.7422 52.179 cv
60.4145 52.2274 61 51.722 61.0503 51.05 cv
61.0575 50.9552 61.0677 50.8606 61.0838 50.767 cv
61.0856 50.7682 li
61.5755 50.308 61.5982 49.5376 61.1369 49.0487 cv
60.8159 48.7078 60.328 48.5813 59.8822 48.7235 cv
58.9568 49.0187 58.6706 50.0041 58.6093 50.8704 cv
60.222 51.1005 mo
60.8029 51.4214 61.5337 51.2111 61.8544 50.6313 cv
62.0714 50.2388 62.0516 49.7584 61.8035 49.3845 cv
61.3802 48.7483 60.6056 48.4931 59.8822 48.7235 cv
59.2418 48.9273 58.8885 49.6118 59.0923 50.2521 cv
59.2503 50.7473 59.7045 51.0872 60.2231 51.0996 cv
60.222 51.1005 li
59.7508 50.6263 mo
59.804 50.7238 59.7966 50.6886 59.7822 50.6533 cv
59.7715 50.6269 59.7568 50.6006 59.7605 50.6296 cv
59.7568 50.8932 li
59.6982 51.5582 60.1892 52.1448 60.8532 52.2032 cv
61.5181 52.2628 62.1047 51.7717 62.1632 51.1068 cv
62.1669 51.0548 li
62.1925 50.4804 62.1295 49.8743 61.8035 49.3845 cv
61.436 48.8321 60.6911 48.6826 60.1385 49.05 cv
59.6202 49.3946 59.4513 50.0795 59.7508 50.6263 cv
60.8658 52.9822 mo
61.6858 52.6827 62.1288 51.8978 62.1669 51.0548 cv
62.1963 50.3881 61.6814 49.8236 61.0148 49.7931 cv
60.4072 49.7662 59.8741 50.1936 59.7698 50.7921 cv
59.7709 50.7913 li
59.2008 51.1624 59.0389 51.926 59.41 52.4961 cv
59.723 52.977 60.3262 53.1789 60.8658 52.9822 cv
59.4563 53.1615 mo
59.9322 53.2389 60.4172 53.1452 60.8658 52.9822 cv
61.5049 52.748 61.834 52.0413 61.5998 51.4021 cv
61.3735 50.7801 60.6952 50.4487 60.0661 50.6519 cv
59.9253 50.6962 59.8424 50.6977 59.6968 50.693 cv
59.0102 50.669 58.4349 51.2059 58.412 51.8925 cv
58.3898 52.5178 58.8379 53.0626 59.4563 53.1615 cv
58.1656 50.7527 mo
58.1403 51.1366 58.136 51.5303 58.2204 51.9072 cv
58.3604 52.5271 58.8052 53.0574 59.4563 53.1615 cv
60.1338 53.271 60.772 52.8098 60.8806 52.1322 cv
60.9354 51.7924 60.847 51.4462 60.637 51.1742 cv
60.6446 50.912 li
60.6875 50.2279 60.1676 49.6375 59.4826 49.5946 cv
58.7994 49.5519 58.2104 50.0698 58.1656 50.7527 cv
58.1656 50.7527 mo
58.1207 51.4376 58.6392 52.0297 59.3231 52.0746 cv
60.008 52.1195 60.6002 51.601 60.6451 50.9161 cv
60.6446 50.912 li
60.6562 50.7914 li
60.6579 50.7937 li
61.2713 50.5017 61.5322 49.7681 61.2402 49.1547 cv
61.0095 48.6682 60.489 48.3884 59.9558 48.4649 cv
59.3879 48.5458 58.8871 48.8715 58.5768 49.3538 cv
58.3104 49.7711 58.1973 50.2648 58.1656 50.7527 cv
60.0092 50.9057 mo
60.3611 51.4693 61.1032 51.6405 61.6669 51.2887 cv
62.1351 50.9952 62.3444 50.4213 62.1731 49.8961 cv
62.0279 49.4498 61.7639 49.0418 61.374 48.7737 cv
60.9601 48.4885 60.4489 48.3942 59.9558 48.4649 cv
59.2831 48.5606 58.8156 49.1829 58.9115 49.8557 cv
58.9913 50.4176 59.4456 50.8511 60.0101 50.9068 cv
60.0092 50.9057 li
59.9045 50.6935 mo
60.0284 51.0231 60.0766 51.3762 60.0696 51.7281 cv
60.0563 52.3787 60.5726 52.9172 61.2231 52.9316 cv
61.8667 52.945 62.4016 52.4402 62.4269 51.7982 cv
62.4514 51.1549 62.3724 50.5086 62.1731 49.8961 cv
61.9671 49.2645 61.2877 48.9188 60.6562 49.1248 cv
60.0247 49.3307 59.6801 50.0092 59.886 50.6408 cv
59.9045 50.6935 li
61.5629 53.7839 mo
62.1581 53.297 62.3974 52.5435 62.4269 51.7982 cv
62.4514 51.1469 61.9442 50.5995 61.2941 50.5742 cv
60.6429 50.5498 60.0956 51.057 60.0703 51.707 cv
60.0696 51.7281 li
60.0385 51.9853 li
60.0378 51.9832 li
59.5477 52.413 59.4989 53.159 59.9288 53.6489 cv
60.3481 54.1274 61.0715 54.1863 61.5629 53.7839 cv
59.8628 54.45 mo
60.4766 54.3819 61.0816 54.1786 61.5629 53.7839 cv
62.0678 53.3711 62.1415 52.6274 61.7288 52.1225 cv
61.3255 51.6299 60.6032 51.5458 60.0975 51.9344 cv
59.9755 52.0276 59.7937 52.0464 59.6471 52.0569 cv
58.9848 52.1026 58.4852 52.6774 58.5319 53.3398 cv
58.5776 54.0021 59.1526 54.5006 59.8149 54.4549 cv
59.8628 54.45 li
57.9713 53.9965 mo
58.4976 54.4354 59.2021 54.5232 59.8628 54.45 cv
60.5225 54.3777 60.9983 53.7838 60.9252 53.123 cv
60.8546 52.4827 60.2901 52.0117 59.6471 52.0569 cv
59.4077 52.0522 li
59.4117 52.0527 59.6035 52.1601 59.4079 52.035 cv
58.8416 51.6727 58.0883 51.8377 57.7249 52.4039 cv
57.3941 52.9209 57.4998 53.6029 57.9713 53.9965 cv
57.2494 51.1488 mo
57.2428 51.6461 57.2487 52.1479 57.3225 52.6394 cv
57.3986 53.1442 57.5663 53.658 57.9713 53.9965 cv
58.4875 54.427 59.2557 54.3577 59.6864 53.8405 cv
60.0381 53.419 60.0648 52.8134 59.7497 52.3635 cv
59.6777 51.976 59.6835 51.5715 59.6875 51.1799 cv
59.6957 50.5063 59.1559 49.9538 58.4825 49.9456 cv
57.81 49.9376 57.2585 50.4764 57.2494 51.1488 cv
57.2494 51.1488 mo
57.2404 51.8221 57.779 52.3755 58.4525 52.3838 cv
59.1258 52.393 59.6783 51.8542 59.6874 51.1808 cv
59.6875 51.1799 li
59.6919 50.8254 59.6966 50.445 59.807 50.1042 cv
59.8079 50.1054 li
60.3091 49.6587 60.3517 48.8899 59.9042 48.3886 cv
59.5077 47.9452 58.8489 47.8533 58.346 48.1726 cv
57.3774 48.7879 57.2623 50.1109 57.2494 51.1488 cv
59.658 50.2202 mo
59.8362 50.1049 60.0694 50.0866 60.2762 50.0861 cv
60.9509 50.0853 61.4983 49.5379 61.4976 48.8632 cv
61.4979 48.1877 60.9494 47.6401 60.2748 47.6408 cv
60.2466 47.6412 li
59.58 47.6572 58.9126 47.813 58.346 48.1726 cv
57.7793 48.5331 57.6118 49.2839 57.9714 49.8505 cv
58.3317 50.4182 59.0826 50.5855 59.6503 50.2252 cv
59.658 50.2202 li
60.132 50.0786 mo
60.5048 50.651 61.2714 50.8133 61.8447 50.4406 cv
62.2849 50.1544 62.4968 49.6211 62.3731 49.1112 cv
62.2531 48.6178 61.9428 48.1866 61.5029 47.9302 cv
61.1231 47.7089 60.6815 47.6307 60.2466 47.6412 cv
59.5709 47.657 59.037 48.2173 59.0527 48.8929 cv
59.068 49.5019 59.5282 50.0068 60.1331 50.0778 cv
60.132 50.0786 li
59.9602 49.6662 mo
60.0126 49.91 60.0296 50.1602 60.0097 50.4086 cv
59.9532 51.0971 60.4653 51.7015 61.1536 51.758 cv
61.843 51.8146 62.4466 51.3016 62.5031 50.6132 cv
62.5048 50.5842 li
62.5343 50.0898 62.4896 49.592 62.3731 49.1112 cv
62.2118 48.4461 61.5424 48.0382 60.8773 48.1994 cv
60.2237 48.3583 59.8161 49.0095 59.9602 49.6662 cv
61.4557 52.6136 mo
62.0003 52.0657 62.4581 51.3767 62.5048 50.5842 cv
62.5463 49.8947 62.0197 49.3026 61.3302 49.2621 cv
60.7118 49.2257 60.1594 49.6476 60.0318 50.2532 cv
60.0059 50.3759 60.01 50.4148 59.9439 50.513 cv
59.8666 50.6272 59.7728 50.73 59.6746 50.8263 cv
59.1789 51.3158 59.1747 52.115 59.6644 52.6106 cv
60.1541 53.1063 60.9521 53.1103 61.4478 52.6206 cv
61.4557 52.6136 li
59.237 53.8381 mo
60.0735 53.6373 60.8477 53.2239 61.4557 52.6136 cv
61.9469 52.1194 61.9451 51.3206 61.4508 50.8294 cv
60.9602 50.3407 60.1669 50.3402 59.6746 50.8263 cv
59.3916 51.1064 59.0337 51.285 58.6488 51.3767 cv
57.9695 51.5391 57.5497 52.222 57.7122 52.9013 cv
57.8747 53.5807 58.5577 54.0005 59.237 53.8381 cv
57.4643 54.0582 mo
58.0557 54.1163 58.6659 53.9741 59.237 53.8381 cv
59.9164 53.6755 60.336 52.9926 60.1736 52.3133 cv
60.0112 51.6329 59.3282 51.2141 58.6488 51.3767 cv
58.3222 51.4545 57.9542 51.5714 57.6134 51.5638 cv
56.9229 51.5473 56.3502 52.0946 56.3347 52.7853 cv
56.32 53.4398 56.813 53.9954 57.4643 54.0582 cv
55.9755 51.4031 mo
55.9687 51.8549 55.9803 52.3201 56.0939 52.7603 cv
56.2636 53.4235 56.7492 53.9892 57.4643 54.0582 cv
58.1523 54.1257 58.7627 53.6216 58.8301 52.9345 cv
58.8675 52.5431 58.7197 52.1571 58.4301 51.8919 cv
58.4079 51.7287 58.4 51.5623 58.3973 51.3956 cv
58.3827 50.7273 57.8289 50.1971 57.1607 50.2108 cv
56.5094 50.2257 55.9858 50.752 55.9755 51.4031 cv
55.9755 51.4031 mo
55.966 52.0714 56.4989 52.622 57.1671 52.6324 cv
57.8363 52.6431 58.387 52.1092 58.3966 51.4409 cv
58.3973 51.3956 li
58.3852 50.8254 58.3946 50.2046 58.6024 49.6646 cv
58.8358 49.0585 58.5332 48.3783 57.9282 48.145 cv
57.3315 47.9158 56.6601 48.2043 56.4176 48.7951 cv
56.0809 49.6159 55.9901 50.5237 55.9755 51.4031 cv
58.6024 49.6646 mo
58.7188 49.363 58.8464 49.0306 59.0564 48.7784 cv
59.4747 48.2788 59.4074 47.5341 58.9068 47.1156 cv
58.407 46.6983 57.6623 46.7656 57.244 47.2653 cv
57.204 47.3176 li
56.87 47.7655 56.629 48.281 56.4176 48.7951 cv
56.1708 49.3956 56.4573 50.0828 57.0587 50.3297 cv
57.659 50.5765 58.3453 50.2899 58.5921 49.6896 cv
58.6024 49.6646 li
59.0564 48.7784 mo
59.1525 48.7525 li
59.8206 48.6934 60.3139 48.1037 60.2549 47.4357 cv
60.1949 46.7675 59.6061 46.2741 58.937 46.3331 cv
58.8562 46.3428 li
58.2005 46.4459 57.6026 46.7822 57.204 47.3176 cv
56.8139 47.84 56.9223 48.5799 57.4458 48.9691 cv
57.9481 49.3433 58.6555 49.2601 59.0564 48.7784 cv
58.9998 48.7559 mo
59.2616 48.7665 59.088 48.7603 59.0392 48.7318 cv
59.1556 48.8456 li
59.5959 49.3723 60.3793 49.443 60.9068 49.0038 cv
61.4333 48.5635 61.5042 47.7791 61.0639 47.2526 cv
61.0447 47.2299 li
60.4945 46.6014 59.7031 46.21 58.8562 46.3428 cv
58.1933 46.4479 57.7411 47.0692 57.8453 47.732 cv
57.9357 48.3052 58.4197 48.7347 58.9998 48.7559 cv
59.1556 48.8456 mo
59.3417 49.0683 59.505 49.3192 59.5889 49.5992 cv
59.7889 50.2612 60.4876 50.6356 61.1497 50.4356 cv
61.8117 50.2356 62.1861 49.5367 61.9871 48.875 cv
61.8017 48.2632 61.4639 47.7084 61.0447 47.2299 cv
60.5919 46.7138 59.8072 46.6621 59.291 47.1148 cv
58.783 47.5595 58.7233 48.3282 59.1556 48.8456 cv
59.5889 49.5992 mo
59.6907 49.935 59.6855 50.3033 59.6622 50.6491 cv
59.6144 51.3408 60.137 51.9405 60.8285 51.9883 cv
61.521 52.0362 62.1208 51.5136 62.1687 50.8221 cv
62.1691 50.8111 li
62.2083 50.1628 62.1757 49.5001 61.9871 48.875 cv
61.7871 48.2129 61.0882 47.8385 60.4262 48.0385 cv
59.7643 48.2385 59.3889 48.9372 59.5889 49.5992 cv
61.4318 52.8615 mo
61.9401 52.306 62.125 51.5445 62.1691 50.8111 cv
62.211 50.1187 61.6837 49.5235 60.9903 49.4815 cv
60.303 49.4402 59.7095 49.9616 59.6622 50.6491 cv
59.653 50.7832 59.6376 50.9172 59.6037 51.048 cv
59.5742 51.1591 59.5427 51.1854 59.4723 51.2851 cv
59.0713 51.8536 59.2068 52.6403 59.7752 53.0413 cv
60.2936 53.4076 61.0033 53.3307 61.4318 52.8615 cv
59.6688 53.7888 mo
60.3288 53.6511 60.9706 53.3658 61.4318 52.8615 cv
61.9012 52.3484 61.8649 51.5512 61.3517 51.0817 cv
60.8375 50.6122 60.0414 50.6477 59.572 51.1609 cv
59.4805 51.2609 59.2796 51.2936 59.1566 51.3181 cv
58.4739 51.459 58.0351 52.1253 58.175 52.8077 cv
58.3149 53.4903 58.9821 53.9302 59.6645 53.7903 cv
59.6688 53.7888 li
58.1647 53.9357 mo
58.6681 53.9723 59.1776 53.8919 59.6688 53.7888 cv
60.3506 53.6458 60.7878 52.9771 60.6457 52.2955 cv
60.5025 51.6156 59.8369 51.1789 59.1566 51.3181 cv
58.8935 51.3719 58.6089 51.436 58.339 51.4183 cv
57.6431 51.373 57.0429 51.8986 56.9966 52.5943 cv
56.9508 53.2861 57.4724 53.8859 58.1647 53.9357 cv
56.484 52.4335 mo
56.6824 53.2405 57.3126 53.8743 58.1647 53.9357 cv
58.86 53.986 59.4638 53.4629 59.5139 52.7687 cv
59.5508 52.2561 59.2735 51.7717 58.8117 51.5448 cv
58.8116 51.5458 li
58.4883 50.9334 57.7279 50.6993 57.1155 51.0227 cv
56.606 51.2918 56.3455 51.8732 56.484 52.4335 cv
56.484 52.4335 mo
56.6493 53.1061 57.3293 53.5174 58.0031 53.3512 cv
58.6758 53.1849 59.0871 52.5049 58.9208 51.8321 cv
58.9149 51.8081 li
58.8067 51.4041 58.868 50.9199 58.8945 50.5109 cv
58.9394 49.827 58.4215 49.237 57.7376 49.1922 cv
57.0618 49.1474 56.4754 49.6536 56.4205 50.3291 cv
56.3648 51.0197 56.3155 51.7534 56.484 52.4335 cv
58.8945 50.5109 mo
58.9126 50.238 58.9411 49.9624 59.0046 49.6963 cv
59.0292 49.5917 59.0567 49.4721 59.115 49.3799 cv
59.478 48.8086 59.3085 48.0506 58.7371 47.6886 cv
58.1724 47.3295 57.4247 47.4902 57.0563 48.0487 cv
56.6175 48.715 56.4837 49.5488 56.4205 50.3291 cv
56.3648 51.0116 56.8734 51.6106 57.5558 51.6662 cv
58.2394 51.7221 58.8373 51.2134 58.893 50.5308 cv
58.8945 50.5109 li
59.115 49.3799 mo
59.1794 49.2793 59.2623 49.1598 59.3747 49.1089 cv
59.9906 48.8293 60.2624 48.1041 59.9839 47.4884 cv
59.7042 46.8736 58.9792 46.6007 58.3634 46.8803 cv
58.3504 46.8866 li
57.8139 47.1381 57.3806 47.5581 57.0563 48.0487 cv
56.684 48.6138 56.8401 49.374 57.4051 49.7462 cv
57.9712 50.1187 58.7314 49.9625 59.1036 49.3976 cv
59.115 49.3799 li
59.3747 49.1089 mo
59.5645 49.0758 li
59.7687 49.0558 59.9745 49.0632 60.1783 49.0783 cv
60.8604 49.1289 61.4526 48.6175 61.5032 47.9353 cv
61.5537 47.2542 61.0424 46.661 60.3601 46.6113 cv
60.3332 46.6089 li
59.6702 46.5749 58.9622 46.5995 58.3504 46.8866 cv
57.7378 47.1736 57.4745 47.902 57.7616 48.5137 cv
58.0454 49.1199 58.7654 49.3852 59.3747 49.1089 cv
60.1783 49.0783 mo
60.2981 49.0877 60.4267 49.0982 60.539 49.1429 cv
60.5463 49.1458 60.5289 49.1253 60.509 49.1048 cv
60.4698 49.0645 60.4209 49.0242 60.5315 49.1622 cv
60.963 49.7008 61.7494 49.788 62.288 49.3563 cv
62.7794 48.9629 62.9006 48.2646 62.5726 47.7273 cv
62.097 46.9511 61.1995 46.654 60.3332 46.6089 cv
59.651 46.5744 59.0692 47.0993 59.0337 47.7814 cv
58.9996 48.4525 59.508 49.0293 60.1783 49.0783 cv
60.436 49.0258 mo
60.5674 49.2434 60.5699 49.5673 60.5798 49.8117 cv
60.6052 50.5066 61.1895 51.0498 61.8855 51.0235 cv
62.5806 50.9972 63.1227 50.4127 63.0965 49.7177 cv
63.0953 49.6953 li
63.0587 49.0171 62.9324 48.3151 62.5726 47.7273 cv
62.2118 47.1393 61.4422 46.9545 60.8532 47.3151 cv
60.2686 47.6734 60.0814 48.4376 60.436 49.0258 cv
62.5967 51.9209 mo
63.0079 51.257 63.1381 50.4661 63.0953 49.6953 cv
63.0578 49.0009 62.464 48.4686 61.7693 48.507 cv
61.0829 48.5446 60.5533 49.1246 60.5798 49.8117 cv
60.5885 50.0568 60.5814 50.3472 60.4438 50.5614 cv
60.0629 51.1536 60.2347 51.941 60.8258 52.3217 cv
61.4172 52.7015 62.2054 52.5308 62.5851 51.9396 cv
62.5967 51.9209 li
61.0893 53.3911 mo
61.6822 53.0079 62.2234 52.5251 62.5967 51.9209 cv
62.9671 51.3232 62.7829 50.5383 62.1854 50.1678 cv
61.5943 49.8022 60.8196 49.9777 60.4438 50.5614 cv
60.261 50.8453 59.98 51.0622 59.7005 51.243 cv
59.1067 51.6262 58.936 52.4179 59.3203 53.0119 cv
59.7036 53.6048 60.4954 53.7754 61.0892 53.3921 cv
61.0893 53.3911 li
59.3403 54.2405 mo
59.9605 54.0452 60.5436 53.7443 61.0893 53.3911 cv
61.6822 53.0079 61.8519 52.216 61.4686 51.6221 cv
61.0853 51.0292 60.2934 50.8596 59.7005 51.243 cv
59.3487 51.4699 58.9735 51.6736 58.5731 51.7994 cv
57.8986 52.0109 57.5247 52.729 57.7362 53.4036 cv
57.9478 54.0771 58.6658 54.4521 59.3403 54.2405 cv
57.582 54.4354 mo
58.1741 54.5117 58.7741 54.4175 59.3403 54.2405 cv
60.0139 54.0289 60.389 53.3099 60.1773 52.6364 cv
59.9659 51.9618 59.2468 51.5867 58.5731 51.7994 cv
58.3451 51.8709 58.096 51.9345 57.8548 51.9125 cv
57.1569 51.8507 56.5408 52.3672 56.4792 53.0651 cv
56.4189 53.744 56.9055 54.3491 57.582 54.4354 cv
57.582 54.4354 mo
58.2773 54.5249 58.9133 54.0333 59.002 53.3378 cv
59.058 52.9034 58.8849 52.4708 58.5455 52.1941 cv
58.5454 52.1951 li
58.5508 51.5112 58.0008 50.9522 57.316 50.9457 cv
56.6854 50.941 56.151 51.4106 56.0762 52.0371 cv
56.0216 52.4848 56.033 52.9521 56.2052 53.3755 cv
56.4405 53.9513 56.9641 54.3566 57.582 54.4354 cv
58.5412 52.2823 mo
58.5736 51.8741 58.7509 51.4996 58.9999 51.1799 cv
59.4142 50.6485 59.3193 49.8831 58.7879 49.4687 cv
58.2566 49.0544 57.4901 49.1492 57.0767 49.6807 cv
56.5431 50.364 56.1797 51.1722 56.0762 52.0371 cv
55.9938 52.7162 56.478 53.3332 57.1579 53.4157 cv
57.837 53.4972 58.454 53.0131 58.5367 52.3332 cv
58.5412 52.2823 li
58.9999 51.1799 mo
59.1702 50.9618 59.397 50.7199 59.682 50.6678 cv
60.353 50.5467 60.7976 49.9053 60.6773 49.2354 cv
60.5559 48.5654 59.9147 48.1197 59.2437 48.2409 cv
59.2023 48.2487 li
58.3352 48.4364 57.6144 48.9908 57.0767 49.6807 cv
56.6625 50.2121 56.7572 50.9785 57.2888 51.3919 cv
57.8201 51.8061 58.5865 51.7114 58.9999 51.1799 cv
59.5835 50.6813 mo
60.0518 51.1854 60.8404 51.2155 61.3456 50.7462 cv
61.7428 50.379 61.8562 49.7967 61.6279 49.3065 cv
61.4101 48.8379 61.016 48.4694 60.5269 48.2974 cv
60.1005 48.1477 59.639 48.1538 59.2023 48.2487 cv
58.5364 48.3928 58.1139 49.0501 58.2579 49.716 cv
58.3908 50.328 58.9613 50.7434 59.5854 50.6816 cv
59.5835 50.6813 li
59.366 50.358 mo
59.4521 50.5425 59.4525 50.7582 59.4331 50.9554 cv
59.3642 51.6392 59.8622 52.2499 60.546 52.3189 cv
61.2247 52.3872 61.8326 51.8959 61.907 51.2168 cv
61.9785 50.5687 61.9052 49.9019 61.6279 49.3065 cv
61.3383 48.6823 60.596 48.4112 59.9716 48.7019 cv
59.3466 48.9913 59.0764 49.7338 59.366 50.358 cv
60.3136 53.3477 mo
61.1402 52.9107 61.8016 52.1753 61.907 51.2168 cv
61.982 50.5338 61.4895 49.9198 60.8065 49.8439 cv
60.1235 49.7689 59.5095 50.2616 59.4336 50.9444 cv
59.3687 51.0328 59.253 51.0935 59.1579 51.1428 cv
58.5475 51.4593 58.3095 52.2101 58.6261 52.8205 cv
58.9426 53.4311 59.6944 53.6692 60.3038 53.3524 cv
60.3136 53.3477 li
58.0919 53.9919 mo
58.8707 53.9501 59.6264 53.7108 60.3136 53.3477 cv
60.9205 53.0266 61.1527 52.2731 60.8318 51.6651 cv
60.5115 51.0612 59.7652 50.8279 59.1579 51.1428 cv
58.7862 51.3359 58.38 51.4751 57.9588 51.4974 cv
57.2704 51.5337 56.7419 52.1219 56.7781 52.8112 cv
56.8144 53.4995 57.4025 54.029 58.091 53.9918 cv
58.0919 53.9919 li
55.8857 52.2485 mo
55.931 52.8119 56.2103 53.337 56.6845 53.6551 cv
57.0983 53.9323 57.6015 54.0184 58.0919 53.9919 cv
58.7804 53.9545 59.3089 53.3663 59.2725 52.678 cv
59.2397 52.08 58.7879 51.5881 58.1934 51.5075 cv
58.1953 51.5087 li
57.8428 50.9188 57.0781 50.7264 56.4881 51.0789 cv
56.0808 51.3219 55.8479 51.7758 55.8857 52.2485 cv
55.8857 52.2485 mo
55.9416 52.9333 56.5422 53.4442 57.227 53.3883 cv
57.9127 53.3325 58.4238 52.7319 58.3679 52.0472 cv
58.3659 52.0308 li
58.3644 51.8228 li
58.3666 51.8084 58.355 51.827 58.3456 51.8456 cv
58.3308 51.8752 58.3217 51.9048 58.3832 51.8022 cv
58.7338 51.2182 58.5451 50.4608 57.9611 50.1103 cv
57.4286 49.7906 56.7418 49.9168 56.3573 50.4047 cv
55.9472 50.9265 55.8331 51.6005 55.8857 52.2485 cv
58.193 52.0418 mo
58.2878 52.0187 58.3857 52.0102 58.4832 52.0045 cv
59.1578 51.9655 59.6739 51.3877 59.6349 50.7122 cv
59.5967 50.0388 59.0198 49.5238 58.3465 49.5611 cv
57.6115 49.6004 56.8335 49.8005 56.3573 50.4047 cv
55.9364 50.9403 56.0291 51.7155 56.5646 52.1364 cv
57.0535 52.521 57.7523 52.4811 58.1949 52.0431 cv
58.193 52.0418 li
58.4832 52.0045 mo
58.7323 52.0034 li
58.7301 52.0052 li
59.267 52.4242 60.0405 52.3294 60.4594 51.7935 cv
60.8226 51.3302 60.8063 50.6747 60.422 50.2299 cv
59.907 49.6332 59.0908 49.5199 58.3465 49.5611 cv
57.6713 49.5971 57.1542 50.1747 57.1913 50.8489 cv
57.2273 51.5241 57.805 52.0412 58.4801 52.0052 cv
58.4832 52.0045 li
59.2333 52.5833 mo
59.7203 52.5754 60.2057 52.4242 60.5198 52.0291 cv
60.9576 51.4796 60.8597 50.737 60.422 50.2299 cv
59.9772 49.7148 59.1992 49.6579 58.6841 50.1027 cv
58.6152 50.1673 li
57.9899 50.4972 57.7487 51.2727 58.0794 51.8991 cv
58.3047 52.3254 58.7505 52.5905 59.2333 52.5833 cv
57.2927 49.4293 mo
57.2443 50.024 57.2489 50.6446 57.4438 51.2143 cv
57.7061 51.979 58.3671 52.5764 59.2032 52.5824 cv
59.9113 52.588 60.49 52.0183 60.4954 51.3112 cv
60.4993 50.7178 60.0973 50.1992 59.5218 50.0564 cv
59.3088 50.0037 59.4734 50.0492 59.5177 50.0801 cv
59.4287 49.989 li
59.2133 49.7353 59.0577 49.4258 58.9136 49.128 cv
58.7081 48.7032 58.1977 48.5256 57.773 48.7299 cv
57.501 48.8612 57.3174 49.1279 57.2927 49.4293 cv
false sop
0 .339849 .167514 0 cmyk
f
61.3852 51.1883 mo
61.9876 50.0661 62.2627 48.7848 62.3857 47.5262 cv
62.4414 46.9607 62.0274 46.4567 61.4618 46.4019 cv
60.8952 46.346 60.3922 46.76 60.3365 47.3256 cv
60.3336 47.3635 li
60.2651 48.489 60.1705 49.6141 60.0045 50.73 cv
59.9444 51.1337 60.2226 51.5093 60.6262 51.5694 cv
60.9339 51.6151 61.2379 51.4628 61.3852 51.1883 cv
59.993 44.8977 mo
60.2307 45.6977 60.3767 46.5363 60.3335 47.3725 cv
60.3036 47.9404 60.7402 48.4252 61.3081 48.4541 cv
61.8541 48.4821 62.3264 48.0791 62.3843 47.5361 cv
62.5016 46.4461 62.3524 45.344 62.05 44.2948 cv
61.8853 43.7271 61.2914 43.3985 60.7226 43.5631 cv
60.155 43.7278 59.8263 44.3217 59.9911 44.8894 cv
59.993 44.8977 li
59.1696 42.6662 mo
59.5229 43.3751 59.7681 44.1397 59.993 44.8977 cv
60.162 45.4649 60.7585 45.7879 61.3258 45.6191 cv
61.8898 45.4518 62.213 44.8602 62.05 44.2948 cv
61.7953 43.415 61.51 42.5323 61.1049 41.7088 cv
60.8412 41.1737 60.195 40.9531 59.66 41.2159 cv
59.125 41.4797 58.9043 42.1269 59.1671 42.6619 cv
59.1696 42.6662 li
58.3055 40.1641 mo
58.5158 41.0201 58.7756 41.8743 59.1696 42.6662 cv
59.4346 43.1994 60.0831 43.4171 60.6164 43.1521 cv
61.1486 42.887 61.367 42.2416 61.1049 41.7088 cv
60.786 41.0616 60.5876 40.3555 60.4237 39.6557 cv
60.2865 39.0705 59.7002 38.7065 59.1149 38.8438 cv
58.5295 38.981 58.1655 39.5674 58.3029 40.1527 cv
58.3055 40.1641 li
57.6717 37.6575 mo
57.8898 38.4912 58.0998 39.327 58.3055 40.1641 cv
58.4489 40.7482 59.038 41.1055 59.6231 40.9621 cv
60.2021 40.82 60.5596 40.2369 60.4237 39.6557 cv
60.2233 38.8022 60.0165 37.9507 59.7951 37.1024 cv
59.6418 36.5161 59.0428 36.1646 58.4566 36.3169 cv
57.8701 36.4701 57.5185 37.0701 57.6709 37.6554 cv
57.6717 37.6575 li
57.4356 34.5226 mo
57.3765 35.5677 57.4046 36.64 57.6717 37.6575 cv
57.825 38.244 58.4251 38.5946 59.0116 38.4403 cv
59.597 38.2868 59.9474 37.6877 59.7951 37.1024 cv
59.587 36.3074 59.581 35.4626 59.6267 34.6468 cv
59.6612 34.0423 59.1987 33.5238 58.5932 33.4892 cv
57.9885 33.4555 57.4702 33.9181 57.4356 34.5226 cv
57.4356 34.5226 mo
57.4009 35.1281 57.8634 35.6466 58.469 35.6812 cv
59.0735 35.7158 59.5928 35.2534 59.6275 34.6479 cv
59.6267 34.6468 li
59.675 33.8031 59.8107 32.9453 60.1482 32.1651 cv
60.3912 31.6025 60.1317 30.9479 59.5692 30.7051 cv
59.0057 30.4611 58.3512 30.7205 58.1082 31.2841 cv
58.0992 31.3071 li
57.6844 32.3264 57.4981 33.4276 57.4356 34.5226 cv
60.1482 32.1651 mo
60.5378 31.2635 60.8256 30.3205 61.031 29.361 cv
61.1617 28.7537 60.7741 28.1552 60.1667 28.0245 cv
59.5594 27.8948 58.961 28.2815 58.8304 28.8887 cv
58.6535 29.7129 58.4156 30.5251 58.0992 31.3071 cv
57.8676 31.8752 58.141 32.5234 58.7101 32.7541 cv
59.2697 32.9815 59.9084 32.72 60.1482 32.1651 cv
61.031 29.361 mo
61.2073 28.5408 61.4376 27.7316 61.7451 26.9505 cv
61.9741 26.3701 61.6887 25.7142 61.1081 25.4851 cv
60.5277 25.256 59.8708 25.5413 59.6428 26.1219 cv
59.6386 26.1304 li
59.2943 27.0257 59.0317 27.9518 58.8304 28.8887 cv
58.7005 29.4971 59.0871 30.0955 59.6945 30.2252 cv
60.3029 30.356 60.9013 29.9683 61.031 29.361 cv
61.7451 26.9505 mo
62.0458 26.1897 62.3095 25.411 62.502 24.6141 cv
62.6503 24.003 62.274 23.3868 61.6628 23.2395 cv
61.0517 23.0912 60.4366 23.4676 60.2882 24.0787 cv
60.2863 24.0864 li
60.124 24.7824 59.8961 25.4628 59.6386 26.1304 cv
59.4143 26.7126 59.7051 27.3671 60.2871 27.5913 cv
60.8664 27.8143 61.5172 27.5292 61.7451 26.9505 cv
62.502 24.6141 mo
62.6334 24.0715 62.7073 23.5143 62.7786 22.9609 cv
62.8902 22.0879 62.977 21.2109 63.0578 20.334 cv
63.1154 19.6992 62.6483 19.1378 62.0137 19.0792 cv
61.3788 19.0216 60.8175 19.4887 60.7589 20.1233 cv
60.7576 20.1323 li
60.6864 20.9822 60.6092 21.8313 60.5072 22.6782 cv
60.4505 23.1487 60.3952 23.6246 60.2863 24.0864 cv
60.1429 24.6981 60.5225 25.3117 61.1352 25.4552 cv
61.745 25.5983 62.3551 25.2223 62.502 24.6141 cv
63.0579 20.333 mo
63.2452 18.262 63.3509 16.1834 63.4462 14.1067 cv
63.5925 10.9373 63.696 7.76555 63.7851 4.59395 cv
63.7978 4.17503 63.4676 3.827 63.0498 3.81447 cv
62.653 3.80366 62.3141 4.10071 62.2743 4.49591 cv
61.744 9.70484 61.2036 14.9135 60.7579 20.1303 cv
60.7042 20.7657 61.1747 21.3244 61.81 21.3791 cv
62.4431 21.4335 63.0005 20.9659 63.0579 20.333 cv
f
60.582 49.0286 mo
60.5226 49.8407 60.6569 50.8249 61.4004 51.3069 cv
61.3994 51.3069 li
61.7466 51.5311 62.21 51.4324 62.4352 51.0864 cv
62.5799 50.8632 62.5952 50.5797 62.4765 50.3426 cv
62.308 50.0074 62.3703 49.5243 62.3999 49.1692 cv
62.4404 48.6672 62.0667 48.2268 61.5648 48.1864 cv
61.0628 48.1458 60.6234 48.5197 60.5831 49.0207 cv
60.582 49.0286 li
60.5817 49.0306 mo
60.5463 49.5322 60.9247 49.9682 61.4272 50.0047 cv
61.9247 50.0396 62.3579 49.6679 62.3996 49.1712 cv
62.4444 48.6294 62.5348 48.0917 62.6418 47.5589 cv
62.7436 47.0508 62.4143 46.5556 61.906 46.4537 cv
61.3979 46.352 60.9027 46.6814 60.8009 47.1895 cv
60.7934 47.2318 li
60.7014 47.829 60.6241 48.428 60.5817 49.0306 cv
62.6418 47.5589 mo
62.774 46.9014 62.8708 46.2363 62.9226 45.5685 cv
62.9625 45.0392 62.5665 44.5768 62.0374 44.5358 cv
61.5081 44.4959 61.0459 44.891 61.0048 45.4201 cv
60.9579 46.0271 60.885 46.6306 60.7934 47.2318 cv
60.7142 47.745 61.0669 48.224 61.579 48.3021 cv
62.0755 48.3782 62.543 48.0514 62.6418 47.5589 cv
60.5306 42.4662 mo
60.6832 43.0969 60.8252 43.7322 60.9237 44.3751 cv
60.9756 44.7165 61.0323 45.0738 61.0048 45.4201 cv
60.9637 45.9502 61.3598 46.4126 61.889 46.4536 cv
62.4191 46.4946 62.8815 46.0986 62.9225 45.5695 cv
62.9226 45.5685 li
62.9596 45.0782 62.9047 44.5811 62.8371 44.0965 cv
62.7414 43.3994 62.6016 42.7089 62.45 42.0229 cv
62.3329 41.4916 61.8076 41.1557 61.2763 41.2727 cv
60.745 41.3898 60.4091 41.9152 60.5271 42.4466 cv
60.5306 42.4662 li
59.8634 38.7958 mo
59.9428 40.0341 60.2409 41.2643 60.5306 42.4662 cv
60.6591 42.9949 61.1909 43.3196 61.7196 43.1922 cv
62.2409 43.0658 62.5661 42.5461 62.45 42.0229 cv
62.2075 40.9239 61.9503 39.7989 61.8838 38.6721 cv
61.8848 38.6722 li
61.8519 38.1143 61.3735 37.6877 60.8147 37.7206 cv
60.257 37.7526 59.8303 38.2319 59.8632 38.7896 cv
59.8634 38.7958 li
59.759 36.18 mo
59.7766 37.0523 59.8073 37.9254 59.8634 38.7958 cv
59.8993 39.3539 60.3802 39.7769 60.9384 39.741 cv
61.4945 39.7057 61.917 39.2279 61.8848 38.6722 cv
61.8355 37.834 61.8168 36.9937 61.8122 36.1543 cv
61.8096 35.5873 61.3473 35.1295 60.7804 35.1319 cv
60.2134 35.1345 59.7556 35.5968 59.759 36.1639 cv
59.759 36.18 li
59.8309 33.2451 mo
59.7634 34.2215 59.739 35.2013 59.759 36.18 cv
59.7707 36.7462 60.239 37.1967 60.8059 37.1861 cv
61.367 37.1747 61.8154 36.7152 61.8122 36.1543 cv
61.8076 35.2351 61.8423 34.3171 61.9169 33.4021 cv
61.9629 32.8262 61.5339 32.3213 60.9581 32.2752 cv
60.3823 32.2283 59.8784 32.6573 59.8314 33.2331 cv
59.8309 33.2451 li
59.8309 33.2451 mo
59.7908 33.8216 60.2255 34.3214 60.8021 34.3614 cv
61.3737 34.4009 61.8705 33.9729 61.9169 33.4021 cv
61.975 32.6775 62.0794 31.9458 62.3146 31.2553 cv
62.5042 30.7 62.2079 30.0961 61.6516 29.9064 cv
61.0963 29.7169 60.4924 30.0132 60.3027 30.5694 cv
60.2966 30.5858 li
60.0206 31.4445 59.892 32.3476 59.8309 33.2451 cv
62.3146 31.2553 mo
62.6047 30.4054 62.7718 29.5155 62.8895 28.6262 cv
62.9682 28.0314 62.5495 27.4854 61.9546 27.4077 cv
61.3597 27.329 60.8138 27.7476 60.735 28.3424 cv
60.7323 28.3633 li
60.6489 29.1128 60.5285 29.8665 60.2966 30.5858 cv
60.1166 31.1454 60.4236 31.7435 60.9821 31.9245 cv
61.5349 32.1026 62.1278 31.8049 62.3146 31.2553 cv
62.8895 28.6262 mo
63.0246 27.6012 63.1312 26.5713 63.2146 25.5405 cv
63.264 24.9308 62.8106 24.3965 62.2009 24.3471 cv
61.5912 24.2977 61.0569 24.7512 61.0065 25.3606 cv
61.0063 25.3707 li
60.933 26.3696 60.8436 27.3674 60.7323 28.3633 cv
60.6666 28.9597 61.0954 29.497 61.6918 29.5638 cv
62.2801 29.6295 62.8118 29.2131 62.8895 28.6262 cv
60.8721 22.4455 mo
61.031 23.4108 61.0777 24.3938 61.0063 25.3707 cv
60.9619 25.98 61.4198 26.511 62.0301 26.5553 cv
62.6365 26.5993 63.1656 26.1472 63.2146 25.5405 cv
63.308 24.3941 63.2695 23.2375 63.1047 22.0992 cv
63.015 21.4817 62.4409 21.0538 61.8234 21.1436 cv
61.2069 21.2335 60.779 21.8065 60.8688 22.424 cv
60.8721 22.4455 li
60.1579 18.8972 mo
60.4278 20.0733 60.6758 21.2548 60.8721 22.4455 cv
60.9734 23.0605 61.5548 23.4774 62.1708 23.3762 cv
62.7775 23.276 63.1926 22.7075 63.1047 22.0992 cv
62.9236 20.8528 62.6775 19.6172 62.4033 18.3891 cv
62.2645 17.7683 61.6484 17.3783 61.0285 17.5172 cv
60.4077 17.6559 60.0179 18.2711 60.1565 18.892 cv
60.1579 18.8972 li
59.0122 15.0521 mo
59.4755 16.3076 59.8583 17.5931 60.1579 18.8972 cv
60.2998 19.5174 60.9173 19.9045 61.5368 19.7615 cv
62.1538 19.6203 62.5415 19.0067 62.4033 18.3891 cv
62.0883 16.9843 61.6779 15.6005 61.1763 14.2513 cv
60.954 13.653 60.2893 13.3494 59.692 13.5709 cv
59.0959 13.7925 58.7917 14.4551 59.0122 15.0521 cv
57.7211 12.3186 mo
58.2864 13.1498 58.6653 14.114 59.0122 15.0521 cv
59.2325 15.6503 59.8959 15.9555 60.494 15.7351 cv
61.092 15.5149 61.3973 14.8515 61.177 14.2533 cv
61.1763 14.2513 li
60.7616 13.135 60.2932 12.0059 59.6156 11.0202 cv
59.2553 10.4988 58.5403 10.3664 58.018 10.7266 cv
57.498 11.0849 57.3648 11.7968 57.7211 12.3186 cv
53.6714 8.56714 mo
54.5794 9.26689 55.4754 9.98936 56.3141 10.773 cv
56.8197 11.2466 57.3292 11.7448 57.7209 12.3196 cv
58.0789 12.8427 58.7926 12.978 59.3166 12.6201 cv
59.8406 12.2632 59.975 11.5484 59.6181 11.0246 cv
59.6155 11.0212 li
59.0984 10.269 58.3653 9.67536 57.6224 9.15706 cv
56.6198 8.45621 55.5388 7.87107 54.4431 7.32955 cv
54.0809 7.15081 53.6412 7.29983 53.4625 7.66198 cv
53.3072 7.97464 53.3954 8.35412 53.6714 8.56714 cv
f
61.6645 50.9622 mo
61.6553 51.3774 61.9841 51.7213 62.3983 51.7303 cv
62.7994 51.7397 63.1365 51.4322 63.1657 51.0327 cv
63.294 49.2484 63.4385 47.4623 63.6664 45.6869 cv
63.7869 44.7445 63.8957 43.7594 64.1972 42.8525 cv
64.1962 42.8524 li
64.3574 42.368 64.0942 41.8441 63.6089 41.6826 cv
63.1243 41.5224 62.6005 41.7846 62.4392 42.27 cv
62.4356 42.2816 li
62.1091 43.3133 62.0177 44.4288 61.925 45.5007 cv
61.7675 47.3165 61.7058 49.1406 61.6645 50.9622 cv
64.1957 42.8553 mo
64.4975 41.9535 64.7751 41.0445 65.0361 40.1294 cv
65.1786 39.6265 64.8872 39.1029 64.3844 38.9594 cv
63.8806 38.8159 63.357 39.1073 63.2135 39.6111 cv
63.2101 39.6217 li
62.968 40.5141 62.7113 41.4027 62.4353 42.2846 cv
62.2817 42.7719 62.5525 43.2918 63.0409 43.4445 cv
63.5216 43.5953 64.0353 43.3337 64.1957 42.8553 cv
65.0361 40.1294 mo
65.3366 39.0742 65.522 37.9879 65.6194 36.8954 cv
65.6673 36.3602 65.2726 35.8868 64.7372 35.8389 cv
64.202 35.7911 63.7295 36.187 63.6807 36.7221 cv
63.6792 36.7411 li
63.6124 37.7136 63.4654 38.6817 63.2101 39.6217 cv
63.0733 40.1275 63.3713 40.6477 63.8769 40.7846 cv
64.3767 40.9206 64.8942 40.6283 65.0361 40.1294 cv
63.6792 36.7411 mo
63.6423 37.2777 64.0473 37.7424 64.5839 37.7793 cv
65.1115 37.8161 65.5726 37.4228 65.6194 36.8954 cv
65.6881 36.1279 65.764 35.3361 65.9875 34.5957 cv
66.1473 34.0677 65.848 33.5109 65.3201 33.3511 cv
64.7921 33.1923 64.2354 33.4905 64.0765 34.0186 cv
64.0711 34.0371 li
63.8251 34.9138 63.7424 35.8367 63.6792 36.7411 cv
65.9875 34.5957 mo
66.2517 33.7193 66.6852 32.8828 67.09 32.0659 cv
67.3381 31.5644 67.133 30.9573 66.6317 30.7091 cv
66.1305 30.46 65.5232 30.665 65.2741 31.1662 cv
65.2714 31.172 li
64.8205 32.096 64.3505 33.0436 64.0711 34.0371 cv
63.922 34.5683 64.2311 35.1194 64.7624 35.2685 cv
65.2859 35.4156 65.8307 35.1158 65.9875 34.5957 cv
67.09 32.0659 mo
67.7169 30.8006 68.3279 29.5263 68.9236 28.2449 cv
69.1635 27.7294 68.941 27.1159 68.4245 26.8759 cv
67.909 26.6359 67.2963 26.8595 67.0565 27.3751 cv
67.0522 27.3846 li
66.476 28.6553 65.8837 29.918 65.2714 31.172 cv
65.026 31.6747 65.2351 32.2815 65.738 32.5268 cv
66.2387 32.7718 66.8421 32.5652 67.09 32.0659 cv
68.9236 28.2449 mo
69.4351 27.1474 69.963 26.0558 70.5463 24.9958 cv
70.8242 24.4901 70.6398 23.8563 70.1351 23.5786 cv
69.6295 23.3006 68.9957 23.4851 68.7179 23.9898 cv
68.7164 23.9936 li
68.1131 25.0985 67.5721 26.2377 67.0522 27.3846 cv
66.8171 27.9028 67.0469 28.5132 67.565 28.7483 cv
68.0793 28.982 68.6851 28.7567 68.9236 28.2449 cv
70.5463 24.9958 mo
71.1272 23.9383 71.7562 22.9073 72.3999 21.8872 cv
72.7081 21.3976 72.5615 20.7516 72.0718 20.4435 cv
71.5824 20.1343 70.9363 20.2809 70.6282 20.7705 cv
70.627 20.7714 li
69.9624 21.8291 69.3145 22.897 68.7164 23.9936 cv
68.4404 24.4995 68.627 25.1325 69.1329 25.4084 cv
69.6368 25.6841 70.2696 25.4995 70.5463 24.9958 cv
72.3999 21.8872 mo
73.1314 20.7263 73.9125 19.5948 74.7466 18.5045 cv
75.0983 18.0447 75.0109 17.3861 74.551 17.0344 cv
74.0912 16.6828 73.4336 16.7704 73.0819 17.2302 cv
72.2079 18.3709 71.3918 19.5553 70.627 20.7714 cv
70.3189 21.261 70.4664 21.9082 70.9561 22.2153 cv
71.4458 22.5234 72.092 22.3759 72.3999 21.8872 cv
74.7466 18.5045 mo
75.5109 17.5041 76.2795 16.5081 77.0546 15.5171 cv
77.4035 15.071 77.3251 14.4278 76.879 14.0788 cv
76.4421 13.7371 75.8112 13.8051 75.4575 14.2333 cv
74.6454 15.2156 73.8567 16.2179 73.0819 17.2302 cv
72.7303 17.69 72.8169 18.3475 73.2767 18.6991 cv
73.7364 19.0518 74.394 18.9642 74.7466 18.5045 cv
77.0509 15.5216 mo
77.5484 14.8931 78.0422 14.2621 78.5092 13.6105 cv
78.7576 13.2633 79.0544 12.8933 79.1996 12.4864 cv
79.314 12.1706 79.1493 11.8215 78.8321 11.7081 cv
78.7445 11.6837 li
78.1655 11.5687 77.5822 12.0421 77.176 12.393 cv
76.5396 12.9422 75.9854 13.5875 75.4541 14.2369 cv
75.0961 14.6757 75.1611 15.3214 75.5999 15.6794 cv
76.0376 16.0374 76.6833 15.9724 77.0413 15.5336 cv
77.0509 15.5216 li
f
68.7406 30.3759 mo
69.0804 30.6648 69.5538 30.8569 69.977 30.616 cv
70.3111 30.4262 70.4238 30.0596 70.4608 29.7024 cv
70.4966 29.3541 70.2443 29.0433 69.896 29.0075 cv
69.8025 28.9974 69.7072 29.0093 69.6184 29.0413 cv
69.2204 28.8438 68.7375 29.0074 68.5399 29.4063 cv
68.3773 29.7373 68.4598 30.1371 68.7406 30.3759 cv
cp
67.591 29.04 mo
67.9092 29.5358 68.2918 29.9934 68.7406 30.3759 cv
69.0796 30.6637 69.5869 30.6232 69.8756 30.2843 cv
70.092 30.0289 70.1287 29.6666 69.9668 29.3735 cv
69.7339 28.9513 69.516 28.5219 69.3089 28.0869 cv
69.0758 27.596 68.4876 27.3871 67.9968 27.6203 cv
67.506 27.8534 67.2972 28.4406 67.5313 28.9315 cv
67.591 29.04 li
cp
66.2695 27.5196 mo
66.7414 27.9888 67.2299 28.4772 67.591 29.04 cv
67.8848 29.4984 68.4938 29.6313 68.951 29.3383 cv
69.3686 29.0706 69.5215 28.5337 69.3089 28.0869 cv
68.945 27.32 68.3682 26.6558 67.7941 26.0404 cv
67.3937 25.6117 66.7221 25.5886 66.2924 25.989 cv
65.8638 26.3884 65.8406 27.061 66.241 27.4907 cv
66.2695 27.5196 li
cp
64.3591 25.8668 mo
65.039 26.3648 65.6714 26.9263 66.2695 27.5196 cv
66.685 27.9331 67.3579 27.9301 67.7716 27.5136 cv
68.1737 27.1087 68.184 26.4576 67.7941 26.0404 cv
67.1448 25.3446 66.4544 24.685 65.7078 24.0947 cv
65.2246 23.7128 64.5244 23.7949 64.1426 24.2771 cv
63.7618 24.7593 63.8429 25.4604 64.3261 25.8413 cv
64.3582 25.8667 li
cp
62.4972 24.808 mo
63.1573 25.0847 63.7814 25.4445 64.3591 25.8668 cv
64.3582 25.8667 li
64.8548 26.2301 65.5522 26.1224 65.9147 25.6257 cv
66.2693 25.1431 66.1772 24.4657 65.7078 24.0947 cv
64.9996 23.5345 64.2236 23.0624 63.3958 22.7026 cv
62.8163 22.4505 62.1427 22.7166 61.8906 23.2961 cv
61.6384 23.8756 61.9043 24.5501 62.4839 24.8023 cv
62.4974 24.807 li
cp
60.485 24.1645 mo
61.1732 24.3167 61.8468 24.5346 62.4972 24.808 cv
62.4974 24.807 li
63.0799 25.0515 63.7504 24.778 63.995 24.1945 cv
64.2377 23.6178 63.9706 22.9522 63.3958 22.7026 cv
62.6215 22.3659 61.8173 22.0969 60.9937 21.908 cv
60.3708 21.7652 59.75 22.154 59.6073 22.7759 cv
59.4635 23.3986 59.8524 24.0194 60.4751 24.1632 cv
60.485 24.1645 li
cp
57.7199 23.19 mo
58.6071 23.5977 59.5291 23.9536 60.485 24.1645 cv
61.1085 24.3023 61.7258 23.909 61.8638 23.2845 cv
62.0012 22.665 61.6126 22.0503 60.9937 21.908 cv
60.2006 21.7251 59.4378 21.416 58.7019 21.0711 cv
58.1181 20.7972 57.4222 21.0493 57.1493 21.6332 cv
56.8754 22.217 57.1265 22.9128 57.7112 23.1868 cv
57.7199 23.19 li
cp
54.7905 21.4562 mo
55.7058 22.1308 56.6861 22.7159 57.7199 23.19 cv
58.3063 23.4591 58.9989 23.2016 59.2681 22.6152 cv
59.5358 22.0326 59.2828 21.3436 58.7019 21.0711 cv
57.8158 20.6554 56.9749 20.1468 56.19 19.5636 cv
56.189 19.5635 li
55.6672 19.1766 54.9301 19.2863 54.5432 19.8081 cv
54.1564 20.3299 54.266 21.067 54.7878 21.4539 cv
54.7905 21.4562 li
cp
51.8247 19.1531 mo
52.798 19.94 53.7833 20.7133 54.7905 21.4562 cv
55.3136 21.8412 56.0498 21.7305 56.4358 21.2075 cv
56.8208 20.6855 56.7108 19.9504 56.189 19.5635 cv
55.2117 18.8386 54.2552 18.0851 53.3084 17.3188 cv
52.8028 16.9077 52.0596 16.9864 51.6496 17.4921 cv
51.2385 17.9987 51.3171 18.7419 51.8228 19.1519 cv
51.8247 19.1531 li
cp
49.3923 17.2636 mo
50.2266 17.8622 51.0265 18.5088 51.8247 19.1531 cv
52.3314 19.5633 53.0747 19.4836 53.4838 18.9768 cv
53.8929 18.4709 53.8152 17.7279 53.3084 17.3188 cv
52.4731 16.6414 51.6319 15.9633 50.7496 15.3464 cv
50.2176 14.9754 49.4859 15.1059 49.1139 15.6377 cv
48.7465 16.165 48.8709 16.8889 49.3923 17.2636 cv
cp
47.8042 16.3884 mo
48.3669 16.6142 48.9004 16.9108 49.3923 17.2636 cv
49.9192 17.6421 50.6536 17.522 51.0311 16.9949 cv
51.4096 16.468 51.2894 15.7346 50.7624 15.3561 cv
50.7496 15.3464 li
50.0984 14.8914 49.3917 14.515 48.649 14.2307 cv
48.0513 14.0024 47.3824 14.3024 47.1541 14.9001 cv
46.9278 15.49 47.2175 16.1525 47.8042 16.3884 cv
cp
45.9569 15.8337 mo
46.5863 15.9652 47.206 16.1479 47.8042 16.3884 cv
48.3976 16.6262 49.0719 16.3391 49.3107 15.7457 cv
49.5496 15.1514 49.2615 14.4771 48.6682 14.2382 cv
48.649 14.2307 li
47.8974 13.9443 47.1099 13.757 46.3115 13.6622 cv
45.7067 13.5903 45.159 14.0218 45.0873 14.6255 cv
45.0202 15.1927 45.3972 15.7172 45.9569 15.8337 cv
cp
41.0111 15.9372 mo
42.0383 15.8296 43.07 15.7418 44.1035 15.7258 cv
44.7229 15.7159 45.3598 15.7184 45.9717 15.8366 cv
46.5687 15.9529 47.1464 15.5625 47.2626 14.9655 cv
47.3789 14.3685 46.9886 13.7908 46.3916 13.6745 cv
46.3265 13.6631 li
45.5214 13.5573 44.6924 13.6682 43.9018 13.8254 cv
42.8279 14.0379 41.7751 14.3599 40.7411 14.7156 cv
40.412 14.8285 40.2367 15.187 40.3497 15.5151 cv
40.445 15.7926 40.7189 15.9671 41.0111 15.9372 cv
cp
f
58.0089 36.2199 mo
58.6966 36.3217 59.3297 36.6664 59.8908 37.0614 cv
60.2384 37.3059 60.7181 37.2216 60.9624 36.8749 cv
61.1651 36.5855 61.1449 36.1947 60.9131 35.9279 cv
60.2353 35.1478 59.3578 34.5014 58.3233 34.3135 cv
57.7982 34.2176 57.2946 34.5651 57.1987 35.09 cv
57.1039 35.6152 57.4513 36.1188 57.9763 36.2147 cv
58.0089 36.2199 li
55.9424 35.4887 mo
56.5916 35.8265 57.2869 36.1188 58.0169 36.221 cv
58.5448 36.2951 59.034 35.9255 59.107 35.3977 cv
59.1779 34.8875 58.837 34.4109 58.3313 34.3145 cv
57.8244 34.2179 57.3447 33.9736 56.9002 33.7227 cv
56.4171 33.4498 55.8042 33.6198 55.5311 34.1038 cv
55.2582 34.5869 55.4292 35.1997 55.9122 35.4727 cv
55.9424 35.4887 li
54.1808 34.4036 mo
54.7262 34.8258 55.3311 35.171 55.9424 35.4887 cv
56.4348 35.7448 57.0412 35.5538 57.2972 35.0614 cv
57.5477 34.5806 57.3719 33.9892 56.9002 33.7227 cv
56.3945 33.4367 55.8909 33.1359 55.4283 32.7818 cv
54.9807 32.4377 54.3375 32.5223 53.9936 32.9699 cv
53.6495 33.4176 53.7332 34.0586 54.1798 34.4034 cv
54.1808 34.4036 li
52.6737 32.5558 mo
53.0781 33.235 53.5479 33.9167 54.1808 34.4036 cv
54.1798 34.4034 li
54.6273 34.7485 55.2701 34.6661 55.6162 34.2186 cv
55.9612 33.771 55.8777 33.1281 55.4302 32.7831 cv
55.4283 32.7818 li
55.0119 32.4619 54.7192 31.9624 54.4646 31.5141 cv
54.1818 31.017 53.5489 30.8425 53.0517 31.1253 cv
52.5544 31.4081 52.3802 32.0401 52.663 32.5372 cv
52.6737 32.5558 li
51.3797 29.954 mo
51.7524 30.8479 52.177 31.7234 52.6737 32.5558 cv
52.9662 33.0472 53.6028 33.2089 54.0943 32.9154 cv
54.5782 32.6268 54.7432 32.0038 54.4646 31.5141 cv
54.0329 30.7558 53.6664 29.9624 53.3433 29.1525 cv
53.1259 28.6091 52.5088 28.3441 51.9646 28.5613 cv
51.4213 28.7787 51.1562 29.3959 51.3745 29.9392 cv
51.3797 29.954 li
50.4877 26.5964 mo
50.6532 27.745 50.9332 28.8811 51.3797 29.954 cv
51.6055 30.4943 52.2259 30.7497 52.7662 30.524 cv
53.3011 30.3015 53.5583 29.6903 53.3433 29.1525 cv
53.1695 28.7176 53.0274 28.2708 52.9104 27.8171 cv
52.8444 27.5626 52.7869 27.3051 52.7365 27.0476 cv
52.6793 26.7548 52.6589 26.4437 52.5799 26.1573 cv
52.4224 25.5874 51.8324 25.2533 51.2616 25.4106 cv
50.742 25.5544 50.4092 26.063 50.4877 26.5964 cv
49.6721 21.7846 mo
49.9876 23.381 50.2535 24.9862 50.4877 26.5964 cv
50.5725 27.182 51.1161 27.5879 51.7007 27.5029 cv
52.2863 27.4181 52.6922 26.8745 52.6073 26.2889 cv
52.3548 24.5493 51.8317 22.8344 50.955 21.3048 cv
50.764 20.9726 50.3401 20.8575 50.0082 21.0475 cv
49.7501 21.1958 49.6151 21.492 49.6721 21.7846 cv
f
65.8957 42.8377 mo
66.5163 42.0667 67.1607 41.3149 67.8178 40.5748 cv
68.1481 40.202 68.1148 39.631 67.7411 39.2996 cv
67.3674 38.968 66.7964 39.0023 66.465 39.375 cv
66.4473 39.3959 li
65.7532 40.228 65.1487 41.1473 64.7359 42.1517 cv
64.5932 42.4993 64.7586 42.8977 65.1073 43.0405 cv
65.3859 43.1551 65.7061 43.0723 65.8957 42.8377 cv
67.8178 40.5748 mo
68.469 39.84 69.0976 39.0781 69.6417 38.2591 cv
69.9271 37.829 69.8104 37.2483 69.3804 36.962 cv
68.9496 36.6755 68.3688 36.7932 68.0824 37.2232 cv
68.0761 37.2324 li
67.5852 37.9909 67.0255 38.7032 66.4473 39.3959 cv
66.1276 39.7792 66.1791 40.3495 66.5624 40.6691 cv
66.9373 40.9826 67.4933 40.9404 67.8178 40.5748 cv
69.6417 38.2591 mo
70.1458 37.5012 70.6592 36.7488 71.1764 35.9986 cv
71.4726 35.57 71.3647 34.9834 70.9361 34.6872 cv
70.5073 34.392 69.9199 34.4988 69.6245 34.9275 cv
69.0989 35.6895 68.5797 36.4554 68.0761 37.2324 cv
67.7954 37.6661 67.9194 38.2457 68.353 38.5264 cv
68.7839 38.8059 69.3578 38.6862 69.6417 38.2591 cv
71.1764 35.9986 mo
71.7641 35.1468 72.2921 34.25 72.7242 33.3075 cv
72.9404 32.8353 72.733 32.2772 72.2608 32.061 cv
71.7895 31.845 71.2325 32.0515 71.0146 32.5215 cv
70.6258 33.3636 70.1505 34.1645 69.6236 34.9274 cv
69.6245 34.9275 li
69.3284 35.3561 69.4361 35.9437 69.8648 36.2399 cv
70.2936 36.5352 70.8802 36.4273 71.1764 35.9986 cv
72.7242 33.3075 mo
73.1255 32.4316 73.4422 31.5156 73.656 30.5762 cv
73.7719 30.0678 73.4529 29.5629 72.9455 29.4471 cv
72.4382 29.3312 71.9323 29.6503 71.8164 30.1576 cv
71.8157 30.1635 li
71.6363 30.9763 71.364 31.767 71.0146 32.5215 cv
70.7975 32.9936 71.0027 33.5523 71.4749 33.7695 cv
71.9458 33.9876 72.5046 33.7823 72.7228 33.3103 cv
72.7242 33.3075 li
73.656 30.5762 mo
73.8399 29.7681 74.0639 28.9682 74.3324 28.1841 cv
74.5033 27.6879 74.2381 27.1475 73.7418 26.9777 cv
73.2454 26.8078 72.7052 27.0719 72.5354 27.5682 cv
72.534 27.5711 li
72.2459 28.4213 72.0082 29.288 71.8157 30.1635 cv
71.7036 30.6724 72.025 31.1756 72.5339 31.2876 cv
73.0397 31.3992 73.5405 31.0816 73.656 30.5762 cv
74.3324 28.1841 mo
74.6781 27.176 74.9358 26.1395 75.1656 25.0993 cv
75.2793 24.5856 74.9546 24.077 74.44 23.9632 cv
73.9262 23.8496 73.4174 24.1753 73.3049 24.689 cv
73.091 25.6596 72.853 26.6292 72.534 27.5711 cv
72.366 28.0687 72.6322 28.6082 73.1288 28.7761 cv
73.6245 28.9438 74.1627 28.6794 74.3324 28.1841 cv
75.1656 25.0993 mo
75.4127 23.9807 75.6335 22.8548 75.8107 21.7221 cv
75.8918 21.2022 75.5364 20.7137 75.0165 20.6325 cv
74.4966 20.5515 74.0082 20.907 73.927 21.4269 cv
73.7547 22.5207 73.5419 23.6084 73.3039 24.6889 cv
73.3049 24.689 li
73.1911 25.2038 73.5158 25.7114 74.0305 25.8251 cv
74.5443 25.9378 75.052 25.613 75.1656 25.0993 cv
75.8107 21.7221 mo
75.9147 21.0569 75.976 20.3852 76.0402 19.715 cv
76.1446 18.6314 76.2362 17.5462 76.3246 16.4606 cv
76.6281 12.7307 76.8925 8.99699 77.152 5.26348 cv
77.176 4.92183 76.9186 4.62638 76.5778 4.60267 cv
76.2471 4.57921 75.9579 4.82024 75.9197 5.148 cv
75.4845 8.86075 75.0482 12.5735 74.5929 16.2848 cv
74.383 17.999 74.1944 19.72 73.927 21.4269 cv
73.8448 21.9475 74.2003 22.435 74.7212 22.5163 cv
75.241 22.5984 75.7294 22.243 75.8107 21.7221 cv
f
57.5284 50.9176 mo
57.7611 50.638 58.0523 50.5071 58.4152 50.5156 cv
58.9198 50.5273 59.3384 50.1275 59.3499 49.6229 cv
59.3616 49.1182 58.9618 48.6997 58.4572 48.688 cv
58.4471 48.6877 li
57.4584 48.6762 56.6096 49.2465 56.2528 50.1683 cv
56.1033 50.5544 56.2953 50.9885 56.6814 51.1381 cv
56.9819 51.2544 57.3232 51.1654 57.5284 50.9176 cv
58.3941 50.5139 mo
58.4744 50.6039 58.5196 50.7297 58.5586 50.8417 cv
58.7217 51.3214 59.244 51.5784 59.724 51.4144 cv
60.2027 51.2512 60.4594 50.7307 60.2975 50.2511 cv
60.0146 49.4171 59.3837 48.6966 58.445 48.6885 cv
57.9396 48.6828 57.5273 49.0885 57.5218 49.5929 cv
57.5168 50.0853 57.903 50.492 58.394 50.515 cv
58.3941 50.5139 li
58.5586 50.8417 mo
58.7027 51.2645 58.8055 51.7194 58.7717 52.1688 cv
58.7337 52.6751 59.1123 53.1161 59.6186 53.1552 cv
60.1258 53.1934 60.567 52.8136 60.6049 52.3083 cv
60.6057 52.3023 li
60.6541 51.6059 60.5191 50.9089 60.2975 50.2511 cv
60.1346 49.7704 59.6132 49.5125 59.1325 49.6754 cv
58.6526 49.8385 58.3949 50.3597 58.5579 50.8396 cv
58.5586 50.8417 li
59.3686 54.0072 mo
60.173 53.8205 60.5524 53.0678 60.6057 52.3023 cv
60.6407 51.7957 60.2588 51.3563 59.7521 51.3213 cv
59.2484 51.2865 58.8105 51.6646 58.7717 52.1688 cv
58.7631 52.2513 li
58.7622 52.2502 li
58.2945 52.4683 58.0927 53.0251 58.3107 53.4918 cv
58.497 53.8929 58.9392 54.1071 59.3686 54.0072 cv
57.5938 52.8125 mo
57.6927 53.1711 57.8734 53.514 58.1676 53.7495 cv
58.5058 54.02 58.9497 54.1044 59.3686 54.0072 cv
59.8715 53.8905 60.1843 53.3884 60.0677 52.8854 cv
59.9886 52.5445 59.7249 52.2756 59.3849 52.1904 cv
59.3847 52.1924 li
59.182 51.7085 58.6255 51.4805 58.1416 51.6833 cv
57.7003 51.8683 57.4657 52.3513 57.5938 52.8125 cv
57.4118 51.0326 mo
57.3924 51.629 57.4333 52.2343 57.5938 52.8125 cv
57.7333 53.3174 58.2566 53.6149 58.7617 53.4742 cv
59.2656 53.3355 59.5615 52.8161 59.4257 52.3126 cv
59.3194 51.9168 59.3007 51.4989 59.3129 51.0912 cv
59.3282 50.5657 58.9149 50.1274 58.3906 50.1122 cv
57.8663 50.0961 57.4289 50.5085 57.4118 51.0326 cv
57.4118 51.0326 mo
57.3947 51.5568 57.8069 51.9961 58.332 52.0133 cv
58.8572 52.0296 59.2954 51.6183 59.3127 51.0931 cv
59.3129 51.0912 li
59.3144 51.056 li
59.3153 51.0571 li
59.7547 50.777 59.8844 50.1929 59.6053 49.7536 cv
59.4595 49.5241 59.2214 49.3683 58.9536 49.3268 cv
58.4276 49.2458 57.9214 49.5042 57.6615 49.9638 cv
57.4787 50.287 57.4238 50.6661 57.4118 51.0326 cv
58.6882 51.1972 mo
58.7916 51.2095 58.9741 51.3963 59.0589 51.4818 cv
59.4293 51.8543 60.031 51.8563 60.4034 51.4858 cv
60.7758 51.1154 60.7778 50.5136 60.4073 50.1413 cv
60.3839 50.1191 li
59.9848 49.743 59.5061 49.413 58.9536 49.3268 cv
58.4385 49.2472 57.9555 49.5994 57.875 50.1143 cv
57.7954 50.6304 58.1476 51.1123 58.6626 51.1929 cv
58.6884 51.1962 li
58.6882 51.1972 li
59.0589 51.4818 mo
59.3365 51.7607 59.5639 52.0854 59.7471 52.4317 cv
59.9976 52.9055 60.5862 53.0873 61.0601 52.8368 cv
61.535 52.5855 61.7157 51.9978 61.4654 51.5229 cv
61.4539 51.5022 li
61.1677 50.9925 60.8112 50.52 60.3839 50.1191 cv
60.0019 49.7593 59.4004 49.7786 59.0406 50.1607 cv
58.6901 50.5339 58.6975 51.1177 59.0589 51.4818 cv
60.9277 53.7313 mo
61.4165 53.5291 61.7499 53.07 61.7611 52.5381 cv
61.7692 52.17 61.631 51.8184 61.4539 51.5022 cv
61.1917 51.0339 60.599 50.8678 60.1306 51.13 cv
59.7395 51.3488 59.5492 51.8082 59.6709 52.2404 cv
59.672 52.2396 li
59.3704 52.7178 59.5127 53.3502 59.9912 53.6508 cv
60.2719 53.8282 60.6209 53.8581 60.9277 53.7313 cv
58.7288 52.8297 mo
58.9542 53.1462 59.2279 53.4395 59.5694 53.6298 cv
59.9841 53.8626 60.4834 53.915 60.9277 53.7313 cv
61.4505 53.5153 61.699 52.9172 61.4829 52.3953 cv
61.3331 52.0332 60.9896 51.7882 60.5994 51.7641 cv
60.4622 51.5932 li
60.1196 51.1145 59.4552 51.0047 58.9766 51.3462 cv
58.4989 51.688 58.3881 52.3522 58.7288 52.8297 cv
57.8563 51.0022 mo
58.0306 51.6598 58.3353 52.2769 58.7288 52.8297 cv
59.0703 53.3093 59.7346 53.4201 60.214 53.0797 cv
60.6927 52.7381 60.8046 52.073 60.4631 51.5943 cv
60.4622 51.5932 li
60.2135 51.2456 60.0172 50.8603 59.903 50.4483 cv
59.7478 49.8838 59.1634 49.5525 58.5989 49.7075 cv
58.0385 49.8632 57.7069 50.4406 57.8563 51.0022 cv
57.8563 51.0022 mo
58.0072 51.5682 58.5879 51.9052 59.1537 51.7553 cv
59.7197 51.6044 60.0567 51.0237 59.9058 50.4577 cv
59.903 50.4483 li
59.8235 50.1578 59.7606 49.8401 59.8085 49.5388 cv
59.9003 48.9669 59.511 48.4286 58.939 48.3368 cv
58.377 48.2461 57.8456 48.6213 57.7413 49.1805 cv
57.6289 49.7861 57.6996 50.4113 57.8563 51.0022 cv
59.8032 49.5633 mo
60.3172 49.3069 60.5268 48.6826 60.2696 48.1675 cv
60.0387 47.7052 59.503 47.4818 59.012 47.6454 cv
58.319 47.8747 57.8723 48.4775 57.7413 49.1805 cv
57.6357 49.7498 58.0106 50.2982 58.5807 50.4039 cv
59.1509 50.5097 59.6986 50.1335 59.8041 49.5645 cv
59.8045 49.5624 li
59.8032 49.5633 li
59.6744 49.6173 mo
59.9749 49.5149 60.369 49.5788 60.6753 49.6112 cv
61.2484 49.6709 61.7619 49.2542 61.8218 48.6801 cv
61.8815 48.107 61.4648 47.5936 60.8917 47.5338 cv
60.8788 47.5322 li
60.2639 47.4761 59.6062 47.4477 59.012 47.6454 cv
58.4664 47.8262 58.1717 48.4153 58.3525 48.9598 cv
58.5332 49.5054 59.1214 49.8001 59.667 49.6193 cv
59.6744 49.6173 li
60.6755 49.6102 mo
60.8107 49.6246 60.9554 49.6442 61.0796 49.7047 cv
61.3526 50.2238 61.9942 50.4235 62.5134 50.1506 cv
63.0259 49.882 63.2283 49.2516 62.9693 48.7343 cv
62.5713 47.9419 61.7157 47.6099 60.8786 47.5332 cv
60.8788 47.5322 li
60.3048 47.4794 59.7966 47.9019 59.7439 48.4758 cv
59.6906 49.0456 60.1063 49.551 60.6753 49.6112 cv
60.6755 49.6102 li
61.0508 49.6474 mo
61.1025 49.7621 61.1223 49.8826 61.0874 50.0052 cv
60.9196 50.5945 61.2608 51.2092 61.85 51.3779 cv
62.4395 51.5456 63.0531 51.2043 63.2219 50.615 cv
63.251 50.4827 li
63.3453 49.8838 63.2404 49.2745 62.9693 48.7343 cv
62.706 48.2103 62.068 47.9981 61.543 48.2611 cv
61.0343 48.5161 60.8172 49.1284 61.0508 49.6474 cv
61.7433 52.316 mo
62.4661 51.9332 63.1192 51.3257 63.251 50.4827 cv
63.3462 49.8769 62.9324 49.3094 62.3267 49.214 cv
61.8246 49.1353 61.3337 49.4078 61.1344 49.8741 cv
61.0884 49.9821 61.079 50.0071 60.9879 50.073 cv
60.8967 50.1388 60.796 50.1924 60.6949 50.2419 cv
60.1175 50.5204 59.8747 51.215 60.153 51.7934 cv
60.4323 52.3717 61.1262 52.6135 61.7045 52.3351 cv
61.7433 52.316 li
59.9516 52.9883 mo
60.58 52.8688 61.1795 52.6144 61.7433 52.316 cv
62.3103 52.016 62.5269 51.3129 62.2271 50.7448 cv
61.9353 50.193 61.2581 49.9707 60.6949 50.2419 cv
60.3262 50.4192 59.9365 50.5867 59.5304 50.6554 cv
58.8851 50.7657 58.4512 51.3784 58.5615 52.0237 cv
58.6719 52.6692 59.2844 53.1031 59.9299 52.9926 cv
59.9516 52.9883 li
58.4214 53.0876 mo
58.9331 53.1222 59.4482 53.0848 59.9516 52.9883 cv
60.5945 52.8666 61.0164 52.2455 60.8945 51.6026 cv
60.7736 50.9679 60.1665 50.5468 59.5304 50.6554 cv
59.2149 50.7095 58.8941 50.7337 58.5761 50.7139 cv
57.9198 50.6736 57.3564 51.1727 57.3153 51.8278 cv
57.2756 52.4801 57.7697 53.0429 58.4214 53.0876 cv
56.6496 51.3296 mo
56.769 52.2726 57.448 53.0205 58.4214 53.0876 cv
59.077 53.1328 59.644 52.6372 59.689 51.9826 cv
59.7242 51.4668 59.4221 50.9872 58.9426 50.7964 cv
58.9434 50.7976 li
58.7317 50.1794 58.0595 49.8487 57.4404 50.0603 cv
56.9088 50.2418 56.5783 50.7719 56.6496 51.3296 cv
56.6496 51.3296 mo
56.7313 51.9784 57.3245 52.437 57.9724 52.3542 cv
58.6212 52.2724 59.0798 51.6791 58.998 51.0315 cv
58.9966 51.019 li
59.0844 50.8924 li
59.5778 50.4679 59.6333 49.7238 59.2089 49.2306 cv
58.7864 48.7385 58.0456 48.6814 57.5517 49.1026 cv
56.8993 49.6578 56.5405 50.4706 56.6496 51.3296 cv
59.0844 50.8924 mo
59.2842 50.7194 59.5252 50.6175 59.7879 50.5898 cv
60.433 50.5218 60.9017 49.9429 60.8338 49.2968 cv
60.7656 48.6528 60.1887 48.1843 59.5439 48.2514 cv
58.8091 48.3271 58.1147 48.6227 57.5517 49.1026 cv
57.0568 49.5238 56.9971 50.2683 57.4193 50.7634 cv
57.8414 51.2584 58.5849 51.3179 59.08 50.8958 cv
59.0844 50.8924 li
59.7879 50.5898 mo
60.1335 50.5526 60.4884 50.5299 60.835 50.5705 cv
61.4785 50.6464 62.0612 50.1861 62.1371 49.5425 cv
62.2129 48.9 61.7546 48.3176 61.1132 48.24 cv
60.593 48.1769 60.064 48.1974 59.5439 48.2514 cv
58.8982 48.3173 58.4284 48.8951 58.4954 49.5409 cv
58.5613 50.1866 59.1391 50.6564 59.7849 50.5894 cv
59.7879 50.5898 li
60.5401 50.4962 mo
60.7046 51.1365 61.3576 51.5221 61.9981 51.3566 cv
62.6384 51.1921 63.024 50.5391 62.8585 49.8987 cv
62.8481 49.8621 li
62.6076 49.0365 62.0017 48.3474 61.1132 48.24 cv
60.4689 48.1619 59.8846 48.6199 59.8065 49.2643 cv
59.7423 49.7944 60.044 50.3001 60.54 50.4972 cv
60.5401 50.4962 li
62.168 52.3455 mo
62.8452 51.6988 63.1118 50.7652 62.849 49.8622 cv
62.8481 49.8621 li
62.6638 49.2273 61.9988 48.8633 61.3639 49.0487 cv
60.7584 49.2247 60.3936 49.841 60.5309 50.4576 cv
60.4875 50.5519 li
59.9876 51.0118 59.9559 51.7891 60.4148 52.2888 cv
60.8748 52.7878 61.652 52.8204 62.152 52.3606 cv
62.168 52.3455 li
60.4579 53.457 mo
61.0874 53.1882 61.6725 52.8181 62.168 52.3455 cv
62.6589 51.8774 62.6764 51.0993 62.2084 50.6084 cv
61.7456 50.1232 60.9805 50.0983 60.4875 50.5519 cv
60.1981 50.8181 59.8584 51.0214 59.4962 51.1713 cv
58.8644 51.4337 58.5642 52.1592 58.8265 52.7919 cv
59.0898 53.4238 59.8154 53.7239 60.4473 53.4607 cv
60.458 53.456 li
60.4579 53.457 li
57.8395 52.5013 mo
58.025 53.0808 58.4967 53.5278 59.0991 53.6499 cv
59.56 53.7425 60.0312 53.6378 60.4579 53.457 cv
60.458 53.456 li
61.0874 53.1882 61.3809 52.4598 61.1122 51.8302 cv
60.8815 51.2893 60.3036 50.9849 59.7271 51.1012 cv
59.728 51.1014 li
59.1643 50.7111 58.3908 50.8523 58.0016 51.4162 cv
57.7814 51.7326 57.7225 52.1344 57.8395 52.5013 cv
57.8395 52.5013 mo
58.0487 53.1544 58.7476 53.5137 59.4005 53.3055 cv
60.0536 53.0963 60.4129 52.3975 60.2047 51.7446 cv
60.2019 51.7351 li
60.1118 51.4634 60.139 51.1442 60.1637 50.8661 cv
60.2253 50.1924 59.7294 49.5972 59.0556 49.5365 cv
58.4008 49.4773 57.815 49.9462 57.7319 50.599 cv
57.6505 51.2297 57.6441 51.8893 57.8395 52.5013 cv
60.1637 50.8661 mo
60.1961 50.5133 60.3601 50.1947 60.5799 49.9215 cv
60.9961 49.4065 60.915 48.651 60.3999 48.2358 cv
59.8912 47.8253 59.1469 47.8977 58.7273 48.3992 cv
58.2007 49.027 57.8362 49.7826 57.7319 50.599 cv
57.6455 51.2694 58.1189 51.883 58.7895 51.9684 cv
59.4599 52.0549 60.0735 51.5815 60.1589 50.9108 cv
60.1637 50.8661 li
60.5799 49.9215 mo
60.7671 49.6896 61.0038 49.464 61.301 49.3874 cv
61.9353 49.2231 62.3172 48.5756 62.1531 47.9404 cv
61.9895 47.3094 61.347 46.9271 60.7145 47.0855 cv
59.9215 47.2848 59.247 47.7785 58.7273 48.3992 cv
58.3019 48.907 58.3687 49.6638 58.8766 50.0881 cv
59.3843 50.5135 60.1411 50.4467 60.5665 49.939 cv
60.5799 49.9215 li
61.2998 49.3892 mo
61.754 49.8632 62.507 49.8796 62.9811 49.4245 cv
63.4262 48.9989 63.4724 48.3041 63.0877 47.823 cv
62.5103 47.1013 61.5938 46.8661 60.7144 47.0865 cv
60.7145 47.0855 li
60.0779 47.2454 59.6913 47.8902 59.8511 48.5269 cv
60.0102 49.1624 60.6551 49.5492 61.2917 49.3902 cv
61.301 49.3874 li
61.2998 49.3892 li
61.2183 49.294 mo
61.4118 49.5449 61.4602 49.9202 61.4949 50.223 cv
61.5709 50.8842 62.1673 51.3573 62.8285 51.2812 cv
63.4885 51.2059 63.9618 50.6086 63.8865 49.9485 cv
63.8833 49.9269 li
63.7839 49.1801 63.5652 48.4209 63.0877 47.823 cv
62.6779 47.3104 61.9296 47.226 61.4159 47.6366 cv
60.9079 48.042 60.8198 48.7799 61.2183 49.294 cv
61.4949 50.223 mo
61.5438 50.6488 61.5646 51.0971 61.4622 51.5165 cv
61.302 52.1724 61.7038 52.8332 62.3587 52.9932 cv
63.0137 53.1532 63.6754 52.7516 63.8347 52.0956 cv
63.8413 52.0672 li
63.9952 51.3661 63.9784 50.6359 63.8833 49.9269 cv
63.7957 49.2683 63.1901 48.8051 62.5315 48.8927 cv
61.881 48.9791 61.4196 49.571 61.4949 50.223 cv
62.8759 53.8927 mo
63.3608 53.3855 63.6915 52.7516 63.8413 52.0672 cv
63.9857 51.4082 63.5684 50.7575 62.9096 50.613 cv
62.2624 50.4711 61.6188 50.8722 61.4622 51.5165 cv
61.4026 51.7598 61.2842 51.9826 61.1058 52.1612 cv
61.1059 52.1602 li
60.6221 52.6443 60.6219 53.4278 61.106 53.9115 cv
61.5891 54.3953 62.3725 54.3954 62.8564 53.9113 cv
62.8759 53.8927 li
61.4349 54.9431 mo
61.9777 54.6904 62.4624 54.3244 62.8759 53.8927 cv
63.3479 53.399 63.3311 52.6144 62.8375 52.1424 cv
62.351 51.6764 61.5817 51.6842 61.1059 52.1602 cv
60.9032 52.3639 60.6707 52.5416 60.4057 52.6567 cv
59.7712 52.9329 59.4814 53.6719 59.7575 54.3064 cv
60.0334 54.9419 60.7725 55.2318 61.407 54.9556 cv
61.4349 54.9431 li
59.0299 54.3578 mo
59.2998 54.7909 59.7465 55.0884 60.2531 55.1546 cv
60.6595 55.2091 61.0671 55.1135 61.4349 54.9431 cv
62.0622 54.6519 62.3349 53.9056 62.0438 53.2782 cv
61.803 52.7602 61.2424 52.4701 60.6806 52.5732 cv
60.6817 52.5724 li
60.0636 52.2527 59.3026 52.4934 58.9819 53.1114 cv
58.7777 53.5065 58.7954 53.9797 59.0299 54.3578 cv
59.1223 54.4866 mo
59.5607 55.0271 60.3556 55.1104 60.8961 54.672 cv
61.3431 54.3092 61.4876 53.6895 61.2475 53.1666 cv
61.2084 53.0808 61.2155 53.1122 61.2267 53.1434 cv
61.2345 53.1656 61.2445 53.188 61.2413 53.1678 cv
61.2264 52.9622 li
61.22 52.6598 61.2489 52.3571 61.2825 52.0579 cv
61.3606 51.3662 60.8632 50.7425 60.1726 50.6635 cv
59.481 50.5855 58.8574 51.0818 58.7784 51.7724 cv
58.7272 52.2165 58.6906 52.6655 58.7085 53.1124 cv
58.7269 53.5877 58.8133 54.106 59.1223 54.4866 cv
61.2825 52.0579 mo
61.3493 51.4697 61.4721 50.8452 61.7956 50.3385 cv
62.1595 49.7672 61.9922 49.0086 61.4212 48.6436 cv
60.8761 48.2961 60.155 48.431 59.7722 48.9524 cv
59.1726 49.7704 58.8917 50.7768 58.7784 51.7724 cv
58.6993 52.464 59.1956 53.0886 59.887 53.1687 cv
60.5785 53.2477 61.2033 52.7505 61.2823 52.0588 cv
61.2825 52.0579 li
61.7956 50.3385 mo
61.9203 50.1528 li
61.9212 50.1539 li
62.5559 49.9928 62.9404 49.3487 62.7815 48.713 cv
62.701 48.3983 62.4958 48.1288 62.2127 47.9703 cv
61.6788 47.6696 61.0456 47.7714 60.5644 48.1177 cv
60.251 48.3425 59.9984 48.6438 59.7722 48.9524 cv
59.371 49.4985 59.4889 50.2659 60.035 50.667 cv
60.5812 51.0682 61.3497 50.9504 61.7498 50.4041 cv
61.7956 50.3385 li
60.8172 49.8634 mo
60.9046 50.0935 60.9543 50.3408 60.9998 50.5827 cv
61.1212 51.2214 61.7376 51.6407 62.3763 51.5193 cv
63.014 51.3979 63.4331 50.7834 63.3138 50.145 cv
63.167 49.3667 62.9639 48.3928 62.2128 47.9693 cv
62.2127 47.9703 li
61.6412 47.6486 60.9183 47.8509 60.5968 48.4214 cv
60.3309 48.8963 60.4207 49.4907 60.8151 49.8641 cv
60.8172 49.8634 li
60.9998 50.5827 mo
61.1 51.1108 61.195 51.6655 61.1525 52.2055 cv
61.1017 52.8574 61.5877 53.4282 62.2407 53.4791 cv
62.8924 53.5308 63.4623 53.0437 63.5141 52.392 cv
63.5152 52.367 li
63.5578 51.6232 63.4507 50.8735 63.3128 50.1447 cv
63.3138 50.145 li
63.1934 49.5063 62.578 49.0861 61.9385 49.2064 cv
61.2999 49.3257 60.8796 49.942 61 50.5807 cv
60.9998 50.5827 li
62.7325 54.341 mo
63.207 53.7882 63.4742 53.0926 63.5152 52.367 cv
63.5532 51.7134 63.0536 51.1539 62.401 51.1162 cv
61.7574 51.0796 61.203 51.5636 61.1525 52.2055 cv
61.1374 52.4012 61.0717 52.5823 60.9352 52.726 cv
60.4783 53.2125 60.5008 53.9768 60.9871 54.4346 cv
61.4726 54.8925 62.2379 54.8691 62.6947 54.3835 cv
62.7325 54.341 li
61.2035 55.3931 mo
61.8121 55.2156 62.3253 54.8168 62.7325 54.341 cv
63.1668 53.8344 63.1089 53.0717 62.6022 52.6373 cv
62.1119 52.2172 61.3778 52.2568 60.9352 52.726 cv
60.8416 52.8269 60.7124 52.9684 60.5698 53.0026 cv
59.9061 53.162 59.4972 53.8302 59.6567 54.494 cv
59.8161 55.1578 60.4833 55.5666 61.1471 55.4081 cv
61.2035 55.3931 li
59.1762 52.6364 mo
59.1591 53.1676 59.1601 53.7232 59.3106 54.2377 cv
59.4113 54.5824 59.5946 54.9045 59.8778 55.1325 cv
60.2488 55.4304 60.7478 55.525 61.2035 55.3931 cv
61.8591 55.2024 62.237 54.5161 62.0463 53.8603 cv
61.9806 53.6351 61.8533 53.4332 61.6777 53.2785 cv
61.6673 53.0926 61.6683 52.9052 61.6742 52.7184 cv
61.6977 52.0278 61.1572 51.4499 60.4675 51.4265 cv
59.7778 51.4032 59.1991 51.9436 59.1756 52.6333 cv
59.1762 52.6364 li
59.1762 52.6364 mo
59.1539 53.3262 59.6955 53.9032 60.3853 53.9255 cv
61.0742 53.9468 61.651 53.4071 61.6742 52.7184 cv
61.6891 52.2828 61.709 51.8467 61.7499 51.4124 cv
61.7701 51.2082 61.7854 50.9955 61.8403 50.7968 cv
62.0209 50.1467 61.6408 49.4735 60.9907 49.2919 cv
60.3882 49.1245 59.7558 49.4392 59.5264 50.0216 cv
59.2085 50.8296 59.2029 51.7807 59.1762 52.6364 cv
61.8403 50.7968 mo
61.8966 50.5945 61.953 50.392 62.0094 50.1896 cv
62.1855 49.5579 61.8154 48.9021 61.1827 48.7258 cv
60.5967 48.5626 59.9816 48.8684 59.7583 49.4355 cv
59.6808 49.6302 59.6041 49.8259 59.5264 50.0216 cv
59.2792 50.6493 59.587 51.3584 60.2155 51.6058 cv
60.8429 51.8541 61.5522 51.5452 61.7995 50.9177 cv
61.8403 50.7968 li
61.0517 51.0482 mo
61.7011 50.9614 62.157 50.3659 62.0703 49.7165 cv
62.0054 49.2342 61.6538 48.8411 61.1821 48.7227 cv
61.0344 48.6946 li
60.3843 48.5997 59.7816 49.0514 59.6877 49.7006 cv
59.5929 50.3509 60.0435 50.9534 60.6939 51.0473 cv
60.8425 51.0595 li
61.0517 51.0482 li
59.7492 50.1784 mo
59.8124 50.4155 59.9525 50.619 60.0891 50.8192 cv
60.2493 51.0546 60.4151 51.2856 60.5809 51.5168 cv
60.8271 51.8601 61.3059 51.9389 61.6492 51.6928 cv
61.8237 51.5671 61.9371 51.3749 61.9627 51.1616 cv
61.9961 50.8785 62.0295 50.5964 62.057 50.3127 cv
62.08 50.0715 62.1046 49.8257 62.0455 49.5882 cv
61.8876 48.9517 61.2449 48.5644 60.6094 48.7225 cv
59.974 48.8806 59.5866 49.5232 59.7446 50.1587 cv
59.7492 50.1784 li
.000640879 .113527 .301366 0 cmyk
f
62.2853 54.9075 mo
62.4087 54.7943 62.5453 54.7042 62.7129 54.7651 cv
63.051 54.8883 63.4253 54.7137 63.5478 54.3746 cv
63.6541 54.0818 63.538 53.7542 63.2703 53.5937 cv
62.6554 53.2251 61.9318 53.3001 61.3397 53.6775 cv
60.9772 53.9091 60.8708 54.3904 61.1024 54.7529 cv
61.3328 55.1155 61.8151 55.222 62.1778 54.9904 cv
62.2853 54.9075 li
60.6613 54.4663 mo
60.6432 54.6232 60.6689 54.7828 60.7371 54.9268 cv
60.9575 55.3908 61.4848 55.5091 61.9171 55.3228 cv
62.1531 55.2212 62.3302 55.0202 62.4012 54.7743 cv
62.6446 54.4195 62.5538 53.9349 62.199 53.6915 cv
61.9508 53.5214 61.6266 53.5098 61.3661 53.6608 cv
61.1578 53.7832 60.9309 53.893 60.794 54.1022 cv
60.7224 54.212 60.6771 54.3362 60.6613 54.4663 cv
61.9171 55.3228 mo
62.3057 55.1561 62.6942 54.9884 63.0839 54.8209 cv
63.543 54.623 63.7559 54.0898 63.558 53.6297 cv
63.3601 53.1706 62.8269 52.9577 62.3669 53.1555 cv
62.3003 53.1873 li
61.9268 53.3862 61.5525 53.5839 61.179 53.7828 cv
60.7623 54.0034 60.6029 54.5212 60.8244 54.9379 cv
61.0327 55.3318 61.5083 55.499 61.9171 55.3228 cv
63.0839 54.8209 mo
63.9389 54.4532 64.8278 54.1594 65.7129 53.8712 cv
66.2264 53.7045 66.5074 53.152 66.3407 52.6384 cv
66.1731 52.1237 65.6204 51.8428 65.1068 52.0104 cv
65.0763 52.0206 li
64.1349 52.3622 63.1866 52.7178 62.3003 53.1873 cv
61.8576 53.4227 61.6891 53.9706 61.9245 54.4134 cv
62.145 54.83 62.6494 55.008 63.0839 54.8209 cv
65.7129 53.8712 mo
66.5464 53.5996 67.4418 53.349 68.3273 53.3714 cv
68.8889 53.3864 69.3565 52.9425 69.3705 52.3806 cv
69.3845 51.8178 68.9405 51.3512 68.3787 51.3373 cv
68.3647 51.3365 li
67.24 51.3246 66.1243 51.6415 65.0763 52.0206 cv
64.5684 52.2053 64.3056 52.7662 64.4901 53.2751 cv
64.6692 53.771 65.2107 54.0354 65.7129 53.8712 cv
68.3273 53.3714 mo
68.9925 53.3886 69.6559 53.4903 70.2919 53.6882 cv
70.8347 53.857 71.4113 53.5532 71.58 53.0103 cv
71.749 52.4665 71.4462 51.89 70.9023 51.7211 cv
70.8965 51.7193 li
70.0768 51.4695 69.2215 51.3461 68.3647 51.3365 cv
67.8018 51.3305 67.3414 51.7813 67.3356 52.3431 cv
67.3293 52.9 67.7714 53.3582 68.3273 53.3714 cv
70.2919 53.6882 mo
71.0761 53.9314 71.8811 54.1088 72.6933 54.2297 cv
73.2632 54.3142 73.7939 53.9199 73.8786 53.35 cv
73.9632 52.7791 73.5689 52.2484 72.999 52.1638 cv
72.98 52.1614 li
72.2749 52.0705 71.5767 51.926 70.8965 51.7193 cv
70.3523 51.5534 69.7774 51.8604 69.6124 52.4048 cv
69.4478 52.9462 69.7509 53.5196 70.2919 53.6882 cv
72.6933 54.2297 mo
73.8282 54.3972 74.9469 54.6905 76.0559 54.9797 cv
76.6276 55.1291 77.2122 54.786 77.3616 54.2144 cv
77.5108 53.6427 77.1678 53.0581 76.5962 52.9088 cv
76.5826 52.905 li
75.3943 52.6117 74.1949 52.3189 72.98 52.1614 cv
72.4088 52.0877 71.885 52.491 71.8103 53.0622 cv
71.7375 53.6265 72.1304 54.1461 72.6933 54.2297 cv
76.0559 54.9797 mo
77.4723 55.3499 78.8993 55.684 80.3398 55.9524 cv
80.9365 56.0636 81.5117 55.6689 81.6228 55.0722 cv
81.7342 54.4746 81.3393 53.9004 80.7426 53.7892 cv
80.7269 53.7861 li
79.334 53.5472 77.9536 53.2431 76.5826 52.905 cv
76.008 52.7634 75.4284 53.1142 75.2869 53.6878 cv
75.146 54.2565 75.4892 54.832 76.0559 54.9797 cv
80.3398 55.9524 mo
81.7085 56.2065 83.0909 56.3857 84.4782 56.5041 cv
85.0994 56.558 85.6458 56.097 85.6997 55.4758 cv
85.7524 54.8555 85.2926 54.3082 84.6714 54.2553 cv
84.6563 54.2544 li
83.3397 54.1593 82.027 54.0092 80.7269 53.7861 cv
80.1281 53.6838 79.559 54.0863 79.4565 54.6851 cv
79.3549 55.278 79.748 55.8419 80.3398 55.9524 cv
84.4782 56.5041 mo
85.7696 56.6151 87.0544 56.8089 88.3138 57.1125 cv
88.931 57.2605 89.5507 56.8807 89.6987 56.2646 cv
89.8466 55.6484 89.4678 55.0288 88.8518 54.88 cv
88.8458 54.8791 li
87.4699 54.5556 86.0659 54.3554 84.6563 54.2544 cv
84.0339 54.2094 83.4937 54.6773 83.4489 55.2986 cv
83.4048 55.914 83.864 56.4511 84.4782 56.5041 cv
88.3138 57.1125 mo
89.3409 57.3588 90.3654 57.6391 91.3534 58.0156 cv
91.9501 58.2437 92.619 57.9437 92.8471 57.347 cv
93.0744 56.7491 92.7745 56.0803 92.1776 55.8532 cv
92.1709 55.8502 li
91.0888 55.4456 89.9692 55.143 88.8458 54.8791 cv
88.2283 54.734 87.6104 55.1162 87.4652 55.7336 cv
87.3205 56.3481 87.6997 56.9647 88.3138 57.1125 cv
91.3534 58.0156 mo
92.3057 58.3792 93.2984 58.6323 94.3078 58.7805 cv
94.9461 58.8739 95.5395 58.4321 95.6338 57.7939 cv
95.7273 57.1546 95.2855 56.5613 94.6473 56.4669 cv
94.6355 56.4654 li
93.7943 56.351 92.9654 56.1473 92.1709 55.8502 cv
91.5715 55.6268 90.9053 55.9301 90.6809 56.5293 cv
90.4589 57.1248 90.7585 57.7885 91.3534 58.0156 cv
94.3078 58.7805 mo
95.2519 58.9184 96.2235 58.9609 97.1678 58.7993 cv
97.8103 58.6885 98.2407 58.0796 98.131 57.4373 cv
98.0201 56.7948 97.4102 56.3643 96.7688 56.4743 cv
96.7616 56.4763 li
96.0608 56.6008 95.3369 56.5619 94.6355 56.4654 cv
93.9965 56.378 93.4063 56.8263 93.3188 57.4653 cv
93.232 58.1003 93.6735 58.6877 94.3078 58.7805 cv
97.1678 58.7993 mo
98.0268 58.6519 98.8689 58.4147 99.6921 58.1296 cv
100.31 57.9158 100.636 57.243 100.422 56.6256 cv
100.209 56.0103 99.5377 55.6828 98.9215 55.8957 cv
98.2167 56.1376 97.4963 56.3452 96.7617 56.4754 cv
96.7616 56.4763 li
96.1197 56.5901 95.6929 57.2027 95.8069 57.8434 cv
95.9211 58.4824 96.5286 58.9086 97.1678 58.7993 cv
99.6921 58.1296 mo
100.586 57.8204 101.498 57.5658 102.416 57.3423 cv
103.04 57.1909 103.421 56.5635 103.269 55.941 cv
103.121 55.3291 102.512 54.948 101.897 55.0814 cv
100.892 55.2987 99.8943 55.5603 98.9215 55.8957 cv
98.3043 56.1076 97.9767 56.7802 98.1884 57.3973 cv
98.4014 58.0146 99.0739 58.3423 99.69 58.1303 cv
99.6921 58.1296 li
102.412 57.3438 mo
103.877 56.9943 105.343 56.5178 106.651 55.7609 cv
106.986 55.568 107.099 55.14 106.906 54.8056 cv
106.777 54.5823 106.534 54.4481 106.276 54.4582 cv
104.799 54.5129 103.331 54.7642 101.892 55.0818 cv
101.266 55.221 100.872 55.8397 101.01 56.4654 cv
101.148 57.0912 101.768 57.4856 102.393 57.3475 cv
102.412 57.3428 li
102.412 57.3438 li
f
65.223 55.4564 mo
65.3835 55.4156 65.5461 55.383 65.708 55.3464 cv
66.0445 55.2709 66.2569 54.9372 66.1823 54.6 cv
66.1152 54.3 65.8404 54.0931 65.5335 54.111 cv
65.3689 54.121 65.2029 54.1339 65.0378 54.1399 cv
64.6682 54.1517 64.3792 54.4613 64.3912 54.8308 cv
64.4041 55.1996 64.7127 55.4884 65.0823 55.4765 cv
65.223 55.4564 li
64.4978 55.1925 mo
64.6236 55.3266 li
64.7693 55.417 li
64.9216 55.4871 65.0939 55.4962 65.2523 55.448 cv
65.476 55.3317 li
65.4914 55.3216 li
65.8239 55.1356 65.9425 54.7163 65.7565 54.3838 cv
65.5714 54.0523 65.1512 53.9327 64.8197 54.1188 cv
64.7327 54.1762 li
64.4211 54.4183 64.2338 54.8156 64.4978 55.1925 cv
65.4914 55.3216 mo
65.7838 55.1576 66.0762 54.9936 66.3684 54.8307 cv
66.7378 54.6242 66.8695 54.1582 66.6629 53.7898 cv
66.4572 53.4215 65.9913 53.2898 65.623 53.4954 cv
65.527 53.5597 li
65.2617 53.7644 64.9972 53.9703 64.7327 54.1762 cv
64.4323 54.4097 64.3785 54.8424 64.6111 55.1426 cv
64.8204 55.4115 65.1948 55.4869 65.4914 55.3216 cv
66.3684 54.8307 mo
66.9585 54.5004 67.5846 54.2343 68.211 53.9823 cv
68.647 53.8066 68.8581 53.3115 68.6824 52.8754 cv
68.5067 52.4384 68.0118 52.2274 67.5757 52.4031 cv
67.5468 52.4155 li
66.842 52.729 66.1388 53.084 65.527 53.5597 cv
65.1932 53.818 65.1333 54.2984 65.3918 54.6322 cv
65.6236 54.9302 66.0391 55.0151 66.3684 54.8307 cv
68.211 53.9823 mo
69.1447 53.6066 70.1041 53.2967 71.0688 53.0097 cv
71.5426 52.8692 71.8126 52.3705 71.6711 51.8966 cv
71.5304 51.4227 71.0319 51.1527 70.5581 51.2932 cv
70.538 51.2998 li
69.526 51.626 68.5193 51.9823 67.5468 52.4155 cv
67.1169 52.6061 66.9239 53.1096 67.1157 53.5386 cv
67.3017 53.9578 67.7856 54.1533 68.211 53.9823 cv
71.0688 53.0097 mo
72.2179 52.6678 73.349 52.2631 74.4499 51.786 cv
74.9273 51.5792 75.146 51.0247 74.9394 50.5473 cv
74.7327 50.07 74.1782 49.8503 73.7009 50.057 cv
73.674 50.0697 li
72.6576 50.5476 71.6079 50.9548 70.538 51.2998 cv
70.0679 51.451 69.8092 51.956 69.9613 52.4263 cv
70.1103 52.8892 70.6023 53.1481 71.0688 53.0097 cv
74.4499 51.786 mo
75.1421 51.486 75.859 51.164 76.6006 51.0034 cv
77.1285 50.8901 77.4637 50.3706 77.3502 49.8428 cv
77.2368 49.315 76.7174 48.9798 76.1895 49.0933 cv
76.1688 49.0977 li
75.3034 49.3037 74.4749 49.6919 73.674 50.0697 cv
73.2029 50.2913 73.0015 50.8521 73.223 51.3232 cv
73.44 51.7838 73.9832 51.9889 74.4499 51.786 cv
76.6006 51.0034 mo
77.0268 50.9122 77.4632 50.8666 77.9001 50.8796 cv
78.4455 50.8964 78.9001 50.4671 78.917 49.9218 cv
78.9328 49.3763 78.5036 48.9207 77.9581 48.9048 cv
77.9521 48.9041 li
77.352 48.8902 76.7522 48.9591 76.1688 49.0977 cv
75.6435 49.2225 75.3195 49.7494 75.4444 50.2747 cv
75.5672 50.7917 76.081 51.116 76.6006 51.0034 cv
77.9001 50.8796 mo
78.4666 50.8972 79.0358 50.8617 79.5971 50.7778 cv
80.1399 50.6964 80.5138 50.1902 80.4323 49.6483 cv
80.3521 49.1055 79.8458 48.7307 79.303 48.8121 cv
79.2958 48.8132 li
78.8513 48.8828 78.4015 48.9146 77.9521 48.9041 cv
77.4063 48.8912 76.9534 49.3238 76.9414 49.8698 cv
76.9279 50.4124 77.3567 50.864 77.9001 50.8796 cv
79.5971 50.7778 mo
80.4063 50.6563 81.1946 50.3838 81.9612 50.1075 cv
82.4848 49.9178 82.7569 49.3399 82.5673 48.8154 cv
82.3789 48.2911 81.8009 48.0189 81.2764 48.2084 cv
81.2595 48.2143 li
80.6265 48.4553 79.9688 48.7073 79.2958 48.8132 cv
78.7535 48.8984 78.3833 49.4073 78.4687 49.9496 cv
78.5536 50.488 79.0574 50.8584 79.5971 50.7778 cv
81.9612 50.1075 mo
82.8854 49.774 83.8404 49.53 84.8075 49.3573 cv
84.8076 49.3563 li
85.3669 49.2569 85.7383 48.722 85.6381 48.1627 cv
85.5387 47.6033 85.0038 47.232 84.4446 47.3312 cv
84.4372 47.3333 li
83.3554 47.5357 82.2891 47.8226 81.2595 48.2143 cv
80.739 48.4123 80.4772 48.9956 80.6752 49.5162 cv
80.871 50.0315 81.4431 50.2937 81.9612 50.1075 cv
84.8075 49.3573 mo
85.7663 49.1854 86.7236 48.9791 87.6514 48.6793 cv
88.1933 48.5042 88.491 47.9235 88.3158 47.3816 cv
88.1415 46.8419 87.5647 46.5448 87.0245 46.715 cv
86.1783 46.9821 85.3082 47.1703 84.4372 47.3333 cv
83.8783 47.4377 83.5106 47.9751 83.6151 48.5331 cv
83.7189 49.0888 84.2513 49.4559 84.8076 49.3563 cv
84.8075 49.3573 li
87.6514 48.6793 mo
88.21 48.4993 88.7864 48.3457 89.3729 48.2933 cv
89.9391 48.2422 90.3576 47.7416 90.3067 47.1745 cv
90.2557 46.6073 89.755 46.1898 89.1879 46.2407 cv
89.1797 46.2417 li
88.4466 46.3126 87.7255 46.4938 87.0245 46.715 cv
86.4812 46.8859 86.1807 47.4653 86.3516 48.0086 cv
86.5227 48.5509 87.1018 48.8525 87.6452 48.6815 cv
87.6514 48.6793 li
89.3729 48.2933 mo
89.8932 48.2463 90.4175 48.2626 90.9352 48.3212 cv
91.5024 48.3872 92.0158 47.9795 92.0808 47.4122 cv
92.1459 46.8449 91.739 46.3327 91.1717 46.2676 cv
91.1707 46.2675 li
90.511 46.1914 89.8425 46.1769 89.1797 46.2417 cv
88.614 46.2968 88.1991 46.8009 88.2552 47.3667 cv
88.3097 47.9304 88.8089 48.3435 89.3729 48.2933 cv
90.9352 48.3212 mo
91.5859 48.396 92.2539 48.4004 92.8943 48.2511 cv
93.4494 48.121 93.7952 47.5656 93.6651 47.0105 cv
93.5359 46.4564 92.9835 46.112 92.4288 46.2381 cv
92.0193 46.3325 91.586 46.315 91.1707 46.2675 cv
90.6034 46.2024 90.0911 46.6102 90.026 47.1776 cv
89.962 47.744 90.3689 48.2563 90.9352 48.3212 cv
92.8943 48.2511 mo
93.8059 48.038 94.679 47.5848 95.5155 47.1815 cv
96.0284 46.9341 96.244 46.3175 95.9965 45.8047 cv
95.7491 45.2908 95.1326 45.0762 94.6197 45.3238 cv
94.6187 45.3236 li
94.1531 45.5489 93.6842 45.7677 93.2061 45.9652 cv
92.9537 46.0688 92.6957 46.1777 92.4288 46.2381 cv
91.8729 46.366 91.5252 46.9202 91.6531 47.4761 cv
91.7802 48.0318 92.3343 48.3785 92.8901 48.2516 cv
92.8943 48.2511 li
95.5155 47.1815 mo
96.3348 46.786 97.1485 46.3706 97.922 45.8925 cv
98.427 45.5806 98.9549 45.2403 99.3442 44.7853 cv
99.5793 44.5101 99.5471 44.0956 99.271 43.8594 cv
99.1258 43.7348 98.9333 43.6797 98.7439 43.7098 cv
98.174 43.7976 97.619 44.0114 97.0848 44.2218 cv
96.2477 44.5525 95.4294 44.932 94.6187 45.3236 cv
94.1058 45.5711 93.8912 46.1876 94.1387 46.7005 cv
94.3861 47.2133 95.0026 47.4289 95.5155 47.1815 cv
f
64.8973 55.3059 mo
65.2946 55.2824 65.6673 55.3949 66.001 55.6064 cv
66.0009 55.6073 li
66.4325 55.8798 67.0026 55.7517 67.2759 55.3211 cv
67.5483 54.8904 67.4201 54.3193 66.9894 54.047 cv
66.9586 54.0279 li
66.2203 53.6 65.3342 53.5281 64.5504 53.8758 cv
64.1727 54.0438 64.0028 54.4857 64.1699 54.8632 cv
64.2966 55.1478 64.5865 55.3242 64.8973 55.3059 cv
65.9945 55.6026 mo
66.5118 55.9374 67.1081 56.1383 67.7032 56.2846 cv
68.2184 56.4105 68.7379 56.0953 68.8637 55.5812 cv
68.9905 55.0662 68.6754 54.5467 68.1613 54.4209 cv
68.1241 54.412 li
67.7243 54.3302 67.3091 54.2274 66.9511 54.0239 cv
66.5076 53.7721 65.9442 53.9274 65.6924 54.3709 cv
65.451 54.7964 65.583 55.3367 65.9945 55.6026 cv
67.7032 56.2846 mo
68.4363 56.4638 69.1495 56.7271 69.8512 57.0011 cv
70.3657 57.2025 70.947 56.9478 71.1485 56.4333 cv
71.3491 55.9178 71.0952 55.3374 70.5797 55.136 cv
70.5498 55.125 li
69.7563 54.8433 68.9502 54.5811 68.1241 54.412 cv
67.6044 54.3058 67.0984 54.6408 66.9921 55.1604 cv
66.8887 55.6653 67.2028 56.1616 67.7032 56.2846 cv
69.8512 57.0011 mo
70.7804 57.3638 71.7539 57.6265 72.749 57.7215 cv
73.3206 57.776 73.8295 57.3557 73.8842 56.783 cv
73.9388 56.2113 73.5184 55.7023 72.9466 55.6478 cv
72.9196 55.6463 li
72.1093 55.5893 71.3136 55.3949 70.5498 55.125 cv
70.0282 54.9398 69.4566 55.213 69.2715 55.7346 cv
69.0909 56.2437 69.3471 56.805 69.8512 57.0011 cv
72.749 57.7215 mo
73.6245 57.8041 74.4932 57.9484 75.3546 58.126 cv
75.9272 58.2442 76.4879 57.8759 76.6061 57.3033 cv
76.7242 56.7307 76.3558 56.17 75.7833 56.0518 cv
75.7803 56.0514 li
74.8363 55.8581 73.881 55.7127 72.9196 55.6463 cv
72.3461 55.6056 71.8487 56.0385 71.809 56.6123 cv
71.7696 57.1758 72.1862 57.6672 72.749 57.7215 cv
75.3546 58.126 mo
76.3543 58.3325 77.3654 58.483 78.3826 58.5707 cv
78.9709 58.6215 79.489 58.1851 79.5396 57.5968 cv
79.5902 57.0083 79.1549 56.4894 78.5656 56.4387 cv
78.5526 56.4379 li
77.6218 56.3694 76.6949 56.2388 75.7803 56.0514 cv
75.2076 55.9342 74.6487 56.3038 74.5314 56.8775 cv
74.4144 57.4492 74.783 58.0079 75.3546 58.126 cv
78.3826 58.5707 mo
79.2322 58.6439 80.0993 58.6831 80.9472 58.5737 cv
81.5388 58.4976 81.9554 57.9565 81.8792 57.3659 cv
81.8032 56.7754 81.263 56.3589 80.6725 56.434 cv
79.9723 56.5242 79.2538 56.489 78.5526 56.4379 cv
77.9633 56.3953 77.4505 56.8373 77.4068 57.4266 cv
77.3648 58.011 77.7992 58.5207 78.3826 58.5707 cv
80.9472 58.5737 mo
81.7141 58.4749 82.4747 58.3239 83.2291 58.1581 cv
83.8112 58.0304 84.1787 57.4556 84.0511 56.8736 cv
83.9234 56.2915 83.3477 55.9238 82.7656 56.0514 cv
82.0733 56.2043 81.3758 56.3442 80.6725 56.434 cv
80.081 56.51 79.6635 57.0501 79.7395 57.6416 cv
79.8156 58.2323 80.3557 58.6497 80.9472 58.5737 cv
83.2291 58.1581 mo
84.1775 57.9496 85.1581 57.8905 86.1275 57.8793 cv
86.7223 57.8723 87.1985 57.3852 87.1926 56.7895 cv
87.1855 56.1958 86.6994 55.7197 86.1048 55.7248 cv
84.9872 55.736 83.8603 55.8115 82.7656 56.0514 cv
82.1845 56.1792 81.8159 56.7549 81.9445 57.3371 cv
82.0722 57.9181 82.647 58.2857 83.2291 58.1581 cv
86.1275 57.8793 mo
87.2231 57.8673 88.3217 57.8234 89.4117 57.7048 cv
90.0029 57.6399 90.4293 57.1089 90.3642 56.5189 cv
90.3002 55.9277 89.7694 55.5014 89.1782 55.5664 cv
88.1588 55.677 87.1304 55.7148 86.1048 55.7248 cv
85.5102 55.7307 85.0319 56.2175 85.0379 56.8122 cv
85.044 57.4068 85.5308 57.8851 86.1255 57.8791 cv
86.1275 57.8793 li
89.4117 57.7048 mo
90.3465 57.6024 91.2814 57.5072 92.2174 57.4181 cv
92.8085 57.3613 93.2412 56.8363 93.1853 56.2453 cv
93.1284 55.6541 92.6036 55.2205 92.0125 55.2774 cv
91.0673 55.3673 90.1222 55.4632 89.1782 55.5664 cv
88.5882 55.6304 88.1619 56.1613 88.2258 56.7523 cv
88.2899 57.3423 88.8207 57.7688 89.4117 57.7048 cv
92.2174 57.4181 mo
93.028 57.3401 93.8586 57.2476 94.6395 57.0024 cv
95.1995 56.8266 95.5105 56.2295 95.3345 55.6694 cv
95.1623 55.1209 94.5855 54.8085 94.0331 54.9641 cv
93.3792 55.148 92.6862 55.213 92.0125 55.2774 cv
91.4214 55.3333 90.9878 55.8581 91.0445 56.4502 cv
91.1004 57.0412 91.6255 57.4739 92.2164 57.418 cv
92.2174 57.4181 li
94.6395 57.0024 mo
95.5201 56.7258 96.3716 56.3455 97.2175 55.9786 cv
97.7504 55.7479 97.9955 55.1291 97.7647 54.5962 cv
97.5339 54.0634 96.9151 53.8193 96.3822 54.05 cv
95.6166 54.3808 94.8387 54.7373 94.0331 54.9641 cv
93.4671 55.1231 93.1374 55.7098 93.2965 56.2747 cv
93.4554 56.8408 94.0421 57.1704 94.608 57.0114 cv
94.6395 57.0024 li
97.2175 55.9786 mo
98.201 55.5528 99.1932 55.1454 100.204 54.7906 cv
100.75 54.5989 101.038 54.0018 100.846 53.4558 cv
100.656 52.912 100.061 52.6236 99.5161 52.8125 cv
98.4546 53.1789 97.4128 53.6031 96.3823 54.049 cv
96.3822 54.05 li
95.8495 54.2797 95.6053 54.8986 95.8351 55.4314 cv
96.0659 55.9642 96.6847 56.2094 97.2175 55.9786 cv
100.204 54.7906 mo
101.464 54.3491 102.708 53.8633 103.95 53.3749 cv
104.468 53.1716 104.723 52.5864 104.519 52.0681 cv
104.32 51.5595 103.752 51.3027 103.238 51.4886 cv
102 51.9359 100.76 52.3821 99.5161 52.8125 cv
98.9695 53.0012 98.679 53.5969 98.8677 54.1435 cv
99.0563 54.6902 99.6531 54.9808 100.2 54.7921 cv
100.204 54.7906 li
103.944 53.3773 mo
105.696 52.6997 107.465 52.0415 109.177 51.2711 cv
109.471 51.1396 109.602 50.7945 109.47 50.5012 cv
109.386 50.315 109.211 50.1865 109.009 50.1614 cv
108.237 50.0679 107.427 50.2369 106.679 50.4125 cv
105.507 50.6881 104.362 51.0748 103.233 51.4898 cv
102.71 51.6816 102.441 52.262 102.634 52.784 cv
102.826 53.3067 103.406 53.5751 103.928 53.3833 cv
103.944 53.3773 li
f
80.7611 52.1969 mo
81.3758 52.2539 81.9909 52.3242 82.5979 52.4337 cv
82.9635 52.499 83.3361 52.5732 83.6838 52.7077 cv
84.1592 52.891 84.6938 52.6544 84.8782 52.1781 cv
85.0615 51.7027 84.8242 51.167 84.3486 50.9837 cv
84.3062 50.9681 li
83.8247 50.8092 83.3123 50.7482 82.8083 50.7155 cv
82.1396 50.6706 81.4676 50.6818 80.7973 50.7113 cv
80.3866 50.73 80.0686 51.0772 80.0861 51.4888 cv
80.1028 51.86 80.3905 52.1622 80.7611 52.1969 cv
83.6742 52.7034 mo
83.9657 52.8198 84.2269 52.9996 84.4414 53.2289 cv
84.8022 53.6131 85.4055 53.6335 85.7898 53.2726 cv
86.1739 52.9128 86.1943 52.3095 85.8336 51.9242 cv
85.823 51.9128 li
85.4002 51.4772 84.8747 51.1502 84.2965 50.9657 cv
83.8104 50.8103 83.2908 51.0791 83.1354 51.5652 cv
82.9881 52.0273 83.2235 52.5244 83.6742 52.7034 cv
84.4414 53.2289 mo
84.8092 53.6211 85.0594 54.1363 85.2911 54.6148 cv
85.5236 55.0956 86.1006 55.297 86.5811 55.0656 cv
87.0627 54.8331 87.2643 54.2553 87.0318 53.7746 cv
87.027 53.7649 li
86.7021 53.1099 86.3356 52.4416 85.823 51.9128 cv
85.4562 51.5348 84.8526 51.5254 84.4736 51.892 cv
84.1001 52.2543 84.086 52.8494 84.4414 53.2289 cv
85.2911 54.6148 mo
85.6182 55.2922 85.987 55.9669 86.4809 56.5388 cv
86.8353 56.9495 87.4566 56.9953 87.8673 56.6409 cv
88.2791 56.2856 88.3249 55.6643 87.9695 55.2535 cv
87.9528 55.2342 li
87.5642 54.8071 87.2824 54.2787 87.027 53.7649 cv
86.7901 53.2877 86.2104 53.092 85.7322 53.3287 cv
85.2571 53.565 85.0612 54.1386 85.2911 54.6148 cv
86.4809 56.5388 mo
86.8845 57.0062 87.3527 57.4175 87.862 57.7685 cv
88.3167 58.0821 88.9394 57.9679 89.253 57.5132 cv
89.5668 57.0586 89.4524 56.4358 88.9979 56.1222 cv
88.984 56.1124 li
88.6068 55.862 88.2574 55.569 87.9528 55.2342 cv
87.5872 54.8323 86.9647 54.8034 86.5637 55.1691 cv
86.1686 55.5276 86.1326 56.135 86.4809 56.5388 cv
87.862 57.7685 mo
88.3786 58.1255 88.8642 58.5278 89.3361 58.9416 cv
89.7601 59.3128 90.4039 59.2697 90.7751 58.8458 cv
91.1465 58.4217 91.1034 57.778 90.6794 57.4067 cv
90.6631 57.3925 li
90.1234 56.9409 89.5699 56.5024 88.984 56.1124 cv
88.5244 55.8061 87.9033 55.9307 87.5969 56.3912 cv
87.2944 56.8453 87.412 57.4584 87.862 57.7685 cv
89.3361 58.9416 mo
90.0972 59.6073 90.7522 60.4006 91.386 61.1851 cv
91.7504 61.6363 92.4109 61.7063 92.8621 61.3421 cv
93.3133 60.9788 93.3835 60.3173 93.0202 59.8662 cv
93.0088 59.8526 li
92.2847 58.9859 91.5313 58.1195 90.6631 57.3925 cv
90.2318 57.0304 89.5883 57.0876 89.2261 57.5189 cv
88.8699 57.9438 88.9184 58.5761 89.3361 58.9416 cv
91.386 61.1851 mo
91.9442 61.8771 92.5171 62.5641 93.0327 63.2879 cv
93.377 63.7698 94.0462 63.8814 94.528 63.5381 cv
95.01 63.1939 95.1225 62.5247 94.7783 62.0428 cv
94.7698 62.0306 li
94.2173 61.2788 93.6062 60.5679 93.0088 59.8526 cv
92.6367 59.4073 91.9747 59.3482 91.5295 59.7203 cv
91.0901 60.0872 91.0261 60.7394 91.386 61.1851 cv
93.0327 63.2879 mo
93.4812 63.9154 93.8221 64.6338 94.1725 65.3182 cv
94.444 65.8483 95.0945 66.0583 95.6255 65.7869 cv
96.1557 65.5144 96.3656 64.8639 96.0931 64.3337 cv
96.0924 64.3316 li
95.6898 63.5518 95.2913 62.7401 94.7698 62.0306 cv
94.4188 61.5539 93.7484 61.4513 93.2708 61.801 cv
92.7994 62.1487 92.693 62.8105 93.0337 63.288 cv
93.0327 63.2879 li
94.1725 65.3182 mo
94.6301 66.2111 95.1203 67.1172 95.769 67.8885 cv
96.1528 68.3442 96.8339 68.4028 97.2908 68.0191 cv
97.7464 67.6363 97.8059 66.9563 97.4242 66.4996 cv
96.8816 65.851 96.4772 65.0779 96.0924 64.3316 cv
95.8189 63.8013 95.1672 63.5933 94.6379 63.8669 cv
94.1097 64.1396 93.9009 64.7892 94.1725 65.3182 cv
95.7691 67.8875 mo
96.1922 68.3916 96.6581 68.8672 97.1944 69.2518 cv
97.6753 69.5962 98.3448 69.4859 98.6902 69.005 cv
99.0307 68.5307 98.9281 67.8713 98.4609 67.5216 cv
98.0709 67.2313 97.7342 66.8714 97.4242 66.4996 cv
97.0415 66.042 96.3597 65.9813 95.902 66.3639 cv
95.4444 66.7466 95.3838 67.4274 95.7664 67.8851 cv
95.769 67.8885 li
95.7691 67.8875 li
97.1944 69.2518 mo
97.7657 69.6613 98.4386 69.9093 99.1219 70.0599 cv
99.6895 70.1845 100.251 69.8254 100.376 69.2587 cv
100.498 68.7007 100.155 68.1483 99.6018 68.0104 cv
99.2012 67.9114 98.794 67.7703 98.46 67.5215 cv
97.9865 67.167 97.3144 67.2649 96.9598 67.7394 cv
96.6063 68.2132 96.7032 68.885 97.1778 69.2397 cv
97.1944 69.2518 li
99.118 70.0585 mo
99.7902 70.2096 100.493 70.2195 101.179 70.192 cv
102.09 70.1552 102.996 70.0402 103.896 69.8969 cv
104.251 69.8409 104.494 69.5072 104.437 69.152 cv
104.39 68.8586 104.151 68.6332 103.856 68.6053 cv
102.436 68.4706 100.985 68.3482 99.5969 68.0098 cv
99.0328 67.8726 98.4629 68.2186 98.3257 68.7827 cv
98.1883 69.3478 98.5344 69.9167 99.0985 70.0539 cv
99.118 70.0585 li
f
67.0392 57.8565 mo
67.2457 57.9043 67.4453 57.9985 67.6378 58.0848 cv
67.8076 58.1602 67.9758 58.2404 68.1435 58.3234 cv
68.3711 58.4345 68.5981 58.5818 68.8358 58.6699 cv
69.1417 58.7839 69.4817 58.6271 69.5946 58.3219 cv
69.6981 58.043 69.577 57.7309 69.3134 57.5941 cv
68.8581 57.3559 68.4017 57.1186 67.9425 56.8869 cv
67.719 56.7744 67.4968 56.653 67.2646 56.5607 cv
66.9194 56.4233 66.5286 56.5917 66.3904 56.9369 cv
66.2532 57.2812 66.4215 57.6729 66.7668 57.8103 cv
66.8531 57.8446 66.9458 57.8605 67.039 57.8575 cv
67.0392 57.8565 li
67.0404 57.8858 mo
67.2269 57.8232 li
67.5797 57.7063 67.771 57.3256 67.653 56.9737 cv
67.6001 56.8136 67.4893 56.6793 67.3415 56.5978 cv
67.1694 56.5019 li
66.8024 56.2984 66.3407 56.4304 66.1371 56.7974 cv
65.9337 57.1634 66.0657 57.6251 66.4327 57.8287 cv
66.6179 57.9323 66.8382 57.9525 67.0404 57.8858 cv
66.1343 57.531 mo
66.3339 57.9067 66.7995 58.0493 67.1739 57.8506 cv
67.5496 57.6509 67.6922 57.1855 67.4935 56.8109 cv
67.3209 56.4842 66.9408 56.3272 66.5881 56.4361 cv
66.4496 56.4928 li
66.1275 56.661 65.9694 57.0349 66.0736 57.3841 cv
66.1343 57.531 li
66.4522 57.8493 mo
66.5937 57.925 66.7362 58.0009 66.8786 58.0767 cv
67.3098 58.3067 67.8449 58.1438 68.0749 57.7137 cv
68.3049 57.2825 68.142 56.7474 67.7118 56.5174 cv
67.5901 56.4523 67.4547 56.4168 67.3158 56.414 cv
67.1551 56.4094 66.9942 56.4057 66.8324 56.4021 cv
66.4082 56.3917 66.0554 56.7274 66.045 57.1525 cv
66.0387 57.4432 66.1956 57.7124 66.4522 57.8493 cv
66.8786 58.0767 mo
67.2965 58.3 67.692 58.5718 68.0857 58.8342 cv
68.5535 59.1466 69.1849 59.0203 69.4973 58.5524 cv
69.8086 58.0853 69.6823 57.454 69.2153 57.1419 cv
69.1763 57.1165 li
68.6215 56.7819 67.9803 56.4291 67.3158 56.414 cv
66.8284 56.4016 66.4227 56.7878 66.4112 57.2764 cv
66.4034 57.6102 66.5843 57.9199 66.8786 58.0767 cv
68.0857 58.8342 mo
68.5323 59.1318 68.9618 59.4685 69.3179 59.8733 cv
69.3169 59.8732 li
69.7021 60.312 70.3689 60.3556 70.8077 59.9706 cv
71.2455 59.5854 71.2891 58.9185 70.905 58.4808 cv
70.8803 58.4534 li
70.3837 57.9256 69.7954 57.4909 69.1763 57.1165 cv
68.6953 56.8267 68.0695 56.981 67.7795 57.4629 cv
67.4987 57.9278 67.6335 58.533 68.0857 58.8342 cv
69.3179 59.8733 mo
69.7716 60.3906 70.2684 60.869 70.781 61.3273 cv
71.2259 61.7245 71.9095 61.6856 72.3077 61.2408 cv
72.7049 60.7949 72.667 60.1115 72.2211 59.7142 cv
72.2058 59.7002 li
71.7455 59.3051 71.2963 58.8953 70.8803 58.4534 cv
70.4803 58.0288 69.8125 58.0083 69.3879 58.4072 cv
68.9727 58.7974 68.9415 59.4456 69.3169 59.8732 cv
69.3179 59.8733 li
70.781 61.3273 mo
71.3743 61.8566 71.9004 62.4598 72.3939 63.082 cv
72.7723 63.5572 73.463 63.6352 73.9381 63.2578 cv
74.4133 62.8805 74.4923 62.1889 74.1141 61.7136 cv
74.1079 61.7058 li
73.5277 60.9897 72.9056 60.3015 72.2058 59.7002 cv
71.7528 59.311 71.0696 59.3631 70.6814 59.8162 cv
70.2973 60.2627 70.3417 60.934 70.781 61.3273 cv
72.3939 63.082 mo
72.9067 63.7268 73.4386 64.371 74.0498 64.9258 cv
74.5047 65.3384 75.2069 65.3038 75.6195 64.8488 cv
76.031 64.3948 75.9976 63.6917 75.5424 63.2801 cv
75.5326 63.2708 li
75.0048 62.8045 74.5499 62.2508 74.1079 61.7058 cv
73.7261 61.2341 73.0337 61.162 72.562 61.5438 cv
72.0936 61.924 72.0192 62.6101 72.3939 63.082 cv
74.0498 64.9258 mo
74.5165 65.3489 75.0318 65.7169 75.5885 66.0124 cv
76.132 66.3012 76.808 66.094 77.097 65.5505 cv
77.3859 65.0059 77.1795 64.331 76.636 64.0422 cv
76.2387 63.8306 75.8692 63.5692 75.5326 63.2708 cv
75.0738 62.8648 74.3716 62.9073 73.9646 63.3661 cv
73.5619 63.8223 73.5994 64.5169 74.0498 64.9258 cv
75.5885 66.0124 mo
76.4283 66.4585 77.3952 66.6859 78.3135 66.9062 cv
78.9121 67.0499 79.513 66.6827 79.6566 66.0842 cv
79.8001 65.4876 79.4328 64.8877 78.8365 64.7423 cv
78.1052 64.5653 77.3069 64.3989 76.636 64.0422 cv
76.0916 63.7523 75.4156 63.9585 75.1267 64.503 cv
74.8378 65.0465 75.0442 65.7224 75.5875 66.0123 cv
75.5885 66.0124 li
78.3135 66.9062 mo
79.3737 67.1608 80.4503 67.3742 81.5371 67.4608 cv
82.1489 67.5095 82.6835 67.0541 82.7332 66.4424 cv
82.7816 65.8316 82.3264 65.296 81.7146 65.2473 cv
80.7435 65.1696 79.7818 64.973 78.8364 64.7433 cv
78.8365 64.7423 li
78.2401 64.5978 77.6374 64.9638 77.4928 65.5612 cv
77.3472 66.1585 77.7143 66.7603 78.3116 66.9059 cv
78.3135 66.9062 li
81.5371 67.4608 mo
82.6009 67.5466 83.6942 67.3639 84.7399 67.1912 cv
86.4686 66.9048 88.1813 66.5166 89.8845 66.109 cv
90.2716 66.0157 90.5101 65.6271 90.4169 65.24 cv
90.3325 64.8863 89.9979 64.6505 89.6356 64.6916 cv
87.9291 64.8839 86.219 65.0638 84.505 65.1806 cv
83.5823 65.2441 82.6387 65.3212 81.7146 65.2473 cv
81.103 65.1978 80.5682 65.6542 80.5187 66.2649 cv
80.47 66.8767 80.9253 67.4122 81.5371 67.4608 cv
f
70.4873 55.5883 mo
70.8061 55.3915 71.2211 55.3634 71.5853 55.369 cv
71.9116 55.3727 72.1789 55.1128 72.1837 54.7867 cv
72.1874 54.4604 71.9275 54.1931 71.6014 54.1883 cv
71.0398 54.1814 70.4638 54.2221 69.9291 54.4043 cv
69.5852 54.5222 69.401 54.8958 69.5178 55.2405 cv
69.6358 55.5845 70.0093 55.7688 70.3543 55.6508 cv
70.4873 55.5883 li
70.0985 55.8589 mo
70.2381 55.7619 70.3765 55.6658 70.5161 55.5689 cv
70.8159 55.3625 70.8899 54.9526 70.6835 54.6528 cv
70.5228 54.4214 70.2337 54.3176 69.9626 54.3945 cv
69.7995 54.44 69.6362 54.4865 69.4729 54.533 cv
69.4731 54.532 li
69.0785 54.6445 68.8491 55.0545 68.9604 55.45 cv
69.072 55.8446 69.483 56.0739 69.8775 55.9625 cv
70.0985 55.8589 li
68.9442 55.0204 mo
68.9003 55.1499 68.8923 55.29 68.9215 55.4238 cv
69.0102 55.8234 69.3754 56.0399 69.7559 56.0225 cv
69.9962 55.9959 li
70.4196 55.9335 70.7114 55.5397 70.649 55.1162 cv
70.5855 54.6936 70.1917 54.4008 69.7691 54.4644 cv
69.6926 54.4796 li
69.5291 54.5201 li
69.5281 54.5189 li
69.4731 54.532 li
69.3641 54.5634 69.2643 54.6099 69.175 54.6852 cv
69.0689 54.7733 68.9884 54.8889 68.9442 55.0204 cv
69.9962 55.9959 mo
70.5194 55.9182 71.0436 55.8405 71.5669 55.7629 cv
72.0335 55.694 72.3557 55.2596 72.2868 54.7929 cv
72.2169 54.3261 71.7825 54.0039 71.3159 54.0728 cv
71.2319 54.0903 li
70.7193 54.2198 70.2055 54.3491 69.6926 54.4796 cv
69.2777 54.5845 69.0269 55.0049 69.1318 55.4196 cv
69.2292 55.8053 69.6035 56.0541 69.9962 55.9959 cv
71.5669 55.7629 mo
72.4272 55.6357 73.2803 55.4393 74.1031 55.1571 cv
74.5884 54.9908 74.8469 54.4635 74.6805 53.9782 cv
74.5153 53.4931 73.987 53.2345 73.5017 53.4008 cv
73.4879 53.4061 li
72.7477 53.6727 71.9939 53.8972 71.2319 54.0903 cv
70.7744 54.2058 70.4977 54.6701 70.6132 55.1277 cv
70.7207 55.5529 71.133 55.8279 71.5669 55.7629 cv
74.1031 55.1571 mo
75.0945 54.8182 76.039 54.344 76.958 53.8474 cv
77.4175 53.5991 77.5881 53.0262 77.3408 52.5668 cv
77.0925 52.1072 76.5187 51.9365 76.0601 52.185 cv
76.0537 52.1881 li
75.2256 52.644 74.3784 53.0843 73.4879 53.4061 cv
73.0057 53.5798 72.7557 54.1113 72.9296 54.5935 cv
73.101 55.0702 73.6241 55.3212 74.1031 55.1571 cv
76.958 53.8474 mo
77.8304 53.376 78.7014 52.9005 79.5565 52.3988 cv
80.0167 52.1294 80.1716 51.5383 79.9012 51.078 cv
79.6318 50.6177 79.0407 50.4639 78.5805 50.7333 cv
78.5618 50.745 li
77.7412 51.2522 76.8981 51.7233 76.0537 52.1881 cv
75.5957 52.4397 75.43 53.0142 75.6815 53.4721 cv
75.9314 53.9268 76.5018 54.0941 76.958 53.8474 cv
79.5565 52.3988 mo
80.3537 51.9318 81.1741 51.5052 81.9972 51.088 cv
82.4846 50.8413 82.6794 50.2463 82.4327 49.7587 cv
82.186 49.2713 81.5909 49.0766 81.1035 49.3232 cv
81.0917 49.3288 li
80.2353 49.777 79.3836 50.2369 78.5618 50.745 cv
78.1083 51.0253 77.967 51.6201 78.2473 52.0737 cv
78.5226 52.5195 79.1049 52.6641 79.5565 52.3988 cv
81.9972 51.088 mo
83.1848 50.487 84.3481 49.8383 85.499 49.171 cv
85.9861 48.888 86.1514 48.2629 85.8694 47.776 cv
85.5863 47.2887 84.9613 47.1235 84.4742 47.4065 cv
84.4588 47.4156 li
83.3545 48.083 82.2354 48.7311 81.0917 49.3288 cv
80.6071 49.5829 80.4203 50.18 80.6735 50.6643 cv
80.9241 51.1442 81.5147 51.3334 81.9972 51.088 cv
85.499 49.171 mo
86.4505 48.6181 87.404 48.0645 88.377 47.5487 cv
88.8857 47.2785 89.0791 46.6471 88.8089 46.1374 cv
88.5388 45.6285 87.9073 45.4353 87.3976 45.7053 cv
87.3921 45.7086 li
86.3963 46.2457 85.4266 46.8306 84.4588 47.4156 cv
83.9766 47.7074 83.8222 48.3338 84.114 48.816 cv
84.4013 49.2926 85.0174 49.4498 85.499 49.171 cv
88.377 47.5487 mo
89.1292 47.1495 89.8503 46.694 90.5469 46.2031 cv
91.0257 45.8665 91.1402 45.2057 90.8037 44.7268 cv
90.4662 44.2477 89.8054 44.1332 89.3264 44.4698 cv
89.3108 44.4819 li
88.6982 44.9313 88.0608 45.3482 87.3921 45.7086 cv
86.8851 45.9821 86.6955 46.615 86.969 47.1221 cv
87.2406 47.6271 87.8694 47.818 88.377 47.5487 cv
90.5469 46.2031 mo
91.1944 45.7471 91.8345 45.2801 92.4562 44.7896 cv
92.9267 44.4166 93.0078 43.7335 92.635 43.2619 cv
92.2632 42.7905 91.5799 42.7105 91.1084 43.0822 cv
91.0836 43.1033 li
90.5094 43.5837 89.9143 44.0394 89.3108 44.4819 cv
88.8385 44.8284 88.7359 45.4917 89.0824 45.9639 cv
89.4227 46.4292 90.0745 46.5354 90.5469 46.2031 cv
92.4562 44.7896 mo
93.1266 44.2589 93.9639 43.9182 94.7482 43.5988 cv
95.3154 43.3685 95.5892 42.7222 95.3589 42.1551 cv
95.1284 41.588 94.4821 41.3151 93.9149 41.5455 cv
93.9086 41.5476 li
92.9244 41.9552 91.9056 42.4127 91.0836 43.1033 cv
90.6235 43.4886 90.5633 44.1745 90.9487 44.6346 cv
91.3272 45.0847 91.9939 45.1535 92.4562 44.7896 cv
94.7482 43.5988 mo
95.6908 43.2173 96.6365 42.8421 97.5984 42.5133 cv
98.1818 42.3133 98.4925 41.6788 98.2934 41.0955 cv
98.0934 40.5122 97.4589 40.2016 96.8754 40.4016 cv
96.8724 40.4022 li
95.8709 40.748 94.8874 41.1434 93.9086 41.5476 cv
93.3429 41.7823 93.0739 42.4302 93.3075 42.9956 cv
93.5405 43.5592 94.1843 43.8287 94.7482 43.5988 cv
97.5984 42.5133 mo
98.1195 42.3345 98.6485 42.1496 99.1892 42.0389 cv
99.793 41.9141 100.182 41.3239 100.058 40.7191 cv
99.934 40.1163 99.3448 39.7277 98.7414 39.8496 cv
98.1055 39.9794 97.4844 40.1907 96.8724 40.4022 cv
96.2898 40.6034 95.9811 41.2391 96.1822 41.8216 cv
96.3826 42.403 97.0162 42.7126 97.5984 42.5133 cv
99.1882 42.0388 mo
100.265 41.8176 101.378 41.7251 102.469 41.6067 cv
102.862 41.5646 103.145 41.2119 103.102 40.8191 cv
103.069 40.5114 102.841 40.2602 102.537 40.1968 cv
101.812 40.0479 101.081 39.9134 100.345 39.8366 cv
99.8168 39.7815 99.2652 39.7437 98.7414 39.8496 cv
98.1366 39.9733 97.7461 40.5622 97.8688 41.1669 cv
97.9915 41.7716 98.5813 42.1621 99.186 42.0395 cv
99.1882 42.0388 li
f
59.8493 53.213 mo
60.2892 53.0701 60.5295 52.598 60.3865 52.1591 cv
60.3165 51.9434 60.162 51.7651 59.9581 51.6652 cv
59.9591 51.6654 li
59.6874 51.1211 59.0253 50.8998 58.4811 51.1714 cv
58.38 51.2209 58.2878 51.2866 58.2072 51.3649 cv
57.8697 51.6904 57.7042 52.1763 57.8559 52.6345 cv
58.0126 53.1083 58.4668 53.4099 58.9583 53.4067 cv
59.262 53.4045 59.5631 53.3063 59.8493 53.213 cv
59.5498 53.0958 mo
59.7108 52.9966 59.594 53.0662 59.5589 53.0728 cv
59.6812 53.0694 li
60.2918 53.0967 60.8096 52.623 60.8369 52.0125 cv
60.8635 51.423 60.4226 50.9165 59.8349 50.8609 cv
59.2423 50.8047 58.6281 50.9463 58.1956 51.3756 cv
57.7642 51.8049 57.7621 52.5023 58.1915 52.9338 cv
58.552 53.2958 59.114 53.3633 59.5498 53.0958 cv
59.5264 53.0505 mo
59.5482 53.0926 li
59.8154 53.6403 60.4747 53.8674 61.0224 53.6002 cv
61.5701 53.333 61.7983 52.6728 61.5312 52.1252 cv
61.5191 52.1025 li
61.1791 51.4456 60.593 50.9324 59.8349 50.8609 cv
59.2263 50.8026 58.6857 51.2501 58.6284 51.8588 cv
58.5741 52.4286 58.9632 52.9456 59.5263 53.0515 cv
59.5264 53.0505 li
59.5482 53.0926 mo
59.5945 53.1872 59.6401 53.287 59.6663 53.3891 cv
59.6643 53.3888 li
59.5793 54.0021 60.0074 54.5674 60.6207 54.6515 cv
61.2072 54.7332 61.7565 54.3421 61.8718 53.7612 cv
61.9864 53.185 61.7806 52.607 61.5191 52.1025 cv
61.2388 51.5612 60.5735 51.3494 60.0322 51.6295 cv
59.5007 51.9048 59.286 52.5536 59.5482 53.0926 cv
60.1559 55.0029 mo
60.9381 54.9898 61.7081 54.585 61.8718 53.7612 cv
61.9924 53.1545 61.5986 52.5644 60.992 52.4439 cv
60.643 52.3747 60.2822 52.4753 60.0193 52.7157 cv
60.0204 52.7149 li
59.39 52.7797 58.9321 53.3438 58.9971 53.9733 cv
59.0579 54.565 59.562 55.0121 60.1559 55.0029 cv
58.3117 53.6118 mo
58.5322 54.4669 59.279 55.0169 60.1559 55.0029 cv
60.7895 54.9929 61.2954 54.4712 61.2852 53.8378 cv
61.2769 53.3386 60.9471 52.9018 60.4686 52.7575 cv
60.4685 52.7585 li
60.1584 52.1923 59.447 51.9855 58.8816 52.2958 cv
58.4129 52.5531 58.1788 53.0945 58.3117 53.6118 cv
58.3117 53.6118 mo
58.473 54.2375 59.1101 54.614 59.7349 54.4526 cv
60.3543 54.2935 60.7306 53.6665 60.5799 53.0441 cv
60.5128 52.7672 60.5462 52.4611 60.5872 52.1819 cv
60.6799 51.5415 60.2363 50.9469 59.596 50.8533 cv
58.9556 50.7607 58.3611 51.2033 58.2675 51.8426 cv
58.1811 52.4273 58.1631 53.036 58.3117 53.6118 cv
60.5872 52.1819 mo
60.6323 52.0043 li
60.6037 52.0539 60.4559 52.1367 60.6581 52.0227 cv
61.2193 51.7049 61.4171 50.9923 61.0984 50.43 cv
60.8085 49.9177 60.1831 49.7009 59.638 49.9251 cv
58.8395 50.2527 58.3883 51.0152 58.2675 51.8426 cv
58.1728 52.4838 58.6153 53.0792 59.2565 53.173 cv
59.8967 53.2676 60.4923 52.8241 60.5869 52.1839 cv
60.5872 52.1819 li
60.5365 52.0827 mo
60.7529 51.9915 61.001 51.9913 61.231 52.0139 cv
61.87 52.0781 62.4402 51.6122 62.5044 50.9731 cv
62.5683 50.3371 62.1071 49.7694 61.4726 49.7008 cv
60.8532 49.6331 60.2171 49.6871 59.638 49.9251 cv
59.0408 50.1697 58.7551 50.8528 59.0008 51.4501 cv
59.2454 52.0473 59.9287 52.3319 60.5258 52.0873 cv
60.5365 52.0827 li
61.231 52.0139 mo
61.329 52.0275 li
61.3289 52.0285 li
61.7069 52.5532 62.4387 52.6717 62.9644 52.2937 cv
63.4403 51.9499 63.5886 51.3075 63.3116 50.7898 cv
62.945 50.1054 62.2145 49.7813 61.4726 49.7008 cv
60.8343 49.6316 60.2596 50.0929 60.1904 50.7313 cv
60.1212 51.3697 60.5837 51.9435 61.222 52.0128 cv
61.231 52.0139 li
61.1654 51.709 mo
61.2146 51.8585 61.211 51.9346 61.1688 52.0896 cv
60.9956 52.7286 61.3726 53.3862 62.0106 53.5602 cv
62.6498 53.7334 63.3073 53.3574 63.4813 52.7184 cv
63.4942 52.6656 li
63.6344 52.0393 63.6204 51.3661 63.3116 50.7898 cv
63.0059 50.22 62.2966 50.0047 61.7258 50.3102 cv
61.2245 50.5783 60.988 51.1689 61.1654 51.709 cv
62.0526 54.5488 mo
62.7482 54.1201 63.3129 53.4771 63.4942 52.6656 cv
63.638 52.0197 63.2324 51.3796 62.5867 51.2348 cv
61.9613 51.0957 61.3371 51.472 61.1688 52.0896 cv
61.1223 52.263 60.9259 52.3859 60.7849 52.4706 cv
60.2097 52.8179 60.0246 53.5663 60.3719 54.1415 cv
60.7202 54.7167 61.4677 54.9018 62.0438 54.5546 cv
62.0526 54.5488 li
60.1511 55.2201 mo
60.8333 55.184 61.4775 54.903 62.0526 54.5488 cv
62.6245 54.1959 62.8028 53.4456 62.45 52.8738 cv
62.0998 52.3054 61.3567 52.1258 60.7849 52.4706 cv
60.5607 52.606 60.2888 52.7676 60.0199 52.7813 cv
59.3467 52.8176 58.8299 53.3932 58.8661 54.0663 cv
58.9024 54.7395 59.478 55.2564 60.1511 55.2201 cv
58.238 52.8693 mo
58.258 53.3558 58.3294 53.858 58.5606 54.2931 cv
58.8729 54.8819 59.479 55.2565 60.1511 55.2201 cv
60.8244 55.1839 61.3411 54.6092 61.3049 53.9351 cv
61.282 53.5188 61.0483 53.1418 60.6854 52.9377 cv
60.6714 52.7645 li
60.6401 52.092 60.0708 51.573 59.3994 51.6033 cv
58.73 51.634 58.2115 52.1994 58.238 52.8693 cv
58.238 52.8693 mo
58.2655 53.5403 58.8321 54.064 59.5032 54.0366 cv
60.1762 54.0093 60.6989 53.4426 60.6716 52.7705 cv
60.6714 52.7645 li
60.6549 52.4075 60.6016 51.976 60.7207 51.6315 cv
60.9391 51.0012 60.6043 50.3128 59.9741 50.0944 cv
59.3998 49.8953 58.7664 50.1555 58.4964 50.7015 cv
58.1745 51.3516 58.2101 52.1629 58.238 52.8693 cv
60.4583 52.0635 mo
61.1128 51.9522 61.5519 51.3313 61.4407 50.6767 cv
61.344 50.1128 60.8624 49.6947 60.2908 49.6785 cv
59.5425 49.6567 58.8347 50.0161 58.4964 50.7015 cv
58.2004 51.2995 58.4459 52.0238 59.044 52.3188 cv
59.5208 52.5547 60.0959 52.4504 60.4594 52.0627 cv
60.4583 52.0635 li
59.8484 52.007 mo
59.8884 52.1201 li
60.0945 52.7577 60.7783 53.109 61.4159 52.9028 cv
62.0543 52.6978 62.4046 52.0139 62.1994 51.3764 cv
62.1892 51.3459 li
61.8896 50.4946 61.2653 49.7063 60.2908 49.6785 cv
59.6268 49.6595 59.0736 50.181 59.0546 50.845 cv
59.0402 51.3634 59.3597 51.8332 59.8482 52.0091 cv
59.8484 52.007 li
59.8884 52.1201 mo
60.0014 52.4714 60.0552 52.8443 59.9998 53.2113 cv
59.8986 53.8868 60.3628 54.5174 61.0384 54.6187 cv
61.7138 54.7209 62.3434 54.2565 62.4456 53.5811 cv
62.4499 53.5473 li
62.5417 52.8039 62.4361 52.0502 62.1893 51.345 cv
62.1892 51.3459 li
61.9662 50.7133 61.2741 50.381 60.6416 50.603 cv
60.0215 50.8214 59.6869 51.4931 59.8884 52.1201 cv
60.5728 55.5709 mo
61.5933 55.3667 62.3229 54.5796 62.4499 53.5473 cv
62.5333 52.8694 62.0521 52.2528 61.3742 52.1694 cv
60.7441 52.0913 60.1575 52.5037 60.0163 53.1226 cv
60.0185 53.121 li
59.3451 53.2913 58.9386 53.9738 59.1079 54.647 cv
59.2722 55.2964 59.9166 55.7021 60.5728 55.5709 cv
58.1953 54.6715 mo
58.6724 55.5377 59.6671 55.7526 60.5728 55.5709 cv
61.2537 55.4349 61.694 54.7727 61.558 54.0918 cv
61.4261 53.4335 60.8 52.9948 60.1355 53.0967 cv
60.1364 53.0978 li
59.6067 52.6393 58.8047 52.6973 58.3461 53.228 cv
57.9988 53.6298 57.9386 54.2059 58.1953 54.6715 cv
57.896 52.1597 mo
57.8422 52.9755 57.7867 53.9302 58.1953 54.6715 cv
58.5335 55.2858 59.3064 55.5084 59.9197 55.1701 cv
60.4721 54.8652 60.7172 54.2001 60.4949 53.6098 cv
60.3476 53.2198 60.4108 52.737 60.438 52.3301 cv
60.4853 51.6274 59.9545 51.0205 59.2518 50.9733 cv
58.5499 50.9272 57.9431 51.458 57.896 52.1597 cv
57.896 52.1597 mo
57.8497 52.8625 58.3805 53.4694 59.0824 53.5155 cv
59.7841 53.5626 60.3909 53.0318 60.438 52.3301 cv
60.4604 51.9921 60.4484 51.5299 60.6412 51.2391 cv
61.0247 50.6574 60.8644 49.8754 60.2836 49.492 cv
59.8032 49.1751 59.1698 49.2235 58.7429 49.6101 cv
58.0568 50.2315 57.9543 51.292 57.896 52.1597 cv
60.3714 51.533 mo
60.4871 51.4413 60.4363 51.4677 60.3956 51.494 cv
60.3756 51.507 60.3579 51.52 60.3642 51.5189 cv
60.6094 51.5092 li
61.2957 51.5423 61.8783 51.0124 61.9112 50.327 cv
61.9445 49.6467 61.4224 49.0661 60.7418 49.0268 cv
60.0314 48.9847 59.2863 49.1175 58.7429 49.6101 cv
58.2269 50.0769 58.1876 50.8745 58.6546 51.3903 cv
59.1003 51.8824 59.8506 51.9439 60.3714 51.533 cv
60.6094 51.5092 mo
60.7854 51.5279 li
60.7842 51.5297 li
61.2476 52.026 62.0266 52.0529 62.5228 51.5896 cv
62.9607 51.1802 63.0406 50.5139 62.71 50.0125 cv
62.274 49.3514 61.5035 49.0705 60.7418 49.0268 cv
60.0564 48.9859 59.4686 49.51 59.4288 50.1945 cv
59.3889 50.88 59.9118 51.4688 60.5973 51.5087 cv
60.6094 51.5092 li
60.6822 51.4058 mo
60.7076 51.4897 li
60.745 51.6306 60.758 51.7795 60.7654 51.9257 cv
60.7998 52.6056 61.3786 53.1289 62.0576 53.0945 cv
62.7375 53.061 63.2607 52.4822 63.2274 51.8025 cv
63.2247 51.7688 li
63.1781 51.1598 63.0516 50.5305 62.71 50.0125 cv
62.3365 49.4451 61.5732 49.2882 61.0057 49.6628 cv
60.4384 50.0363 60.2815 50.7995 60.6559 51.3671 cv
60.6822 51.4058 li
62.757 53.8319 mo
63.1609 53.2246 63.2805 52.4857 63.2247 51.7688 cv
63.172 51.0904 62.5799 50.5835 61.9017 50.6353 cv
61.2355 50.6876 60.7323 51.259 60.7654 51.9257 cv
60.7734 52.0748 60.7852 52.2891 60.6925 52.4204 cv
60.6935 52.4205 li
60.2961 52.9854 60.4325 53.7652 60.9973 54.1626 cv
61.5633 54.5592 62.3431 54.4228 62.7396 53.8578 cv
62.757 53.8319 li
60.9622 55.1311 mo
61.658 54.8648 62.3367 54.4644 62.757 53.8319 cv
63.1398 53.2561 62.9837 52.4808 62.4089 52.0982 cv
61.8444 51.7219 61.0827 51.8657 60.6935 52.4205 cv
60.5653 52.6026 60.2621 52.7016 60.0671 52.7753 cv
59.4153 53.021 59.0867 53.7479 59.3325 54.3988 cv
59.5772 55.0503 60.3041 55.379 60.9558 55.1343 cv
60.9622 55.1311 li
59.0513 55.5159 mo
59.7054 55.5569 60.3586 55.3629 60.9622 55.1311 cv
61.6124 54.8822 61.9371 54.1537 61.6882 53.5036 cv
61.44 52.8565 60.7158 52.5302 60.0671 52.7753 cv
59.8096 52.8722 59.4879 53.0133 59.2047 52.9968 cv
58.5083 52.9555 57.9115 53.4866 57.8712 54.182 cv
57.83 54.8765 58.3583 55.472 59.0513 55.5159 cv
57.2605 54.4613 mo
57.6716 55.0658 58.3163 55.4696 59.0513 55.5159 cv
59.7465 55.5592 60.3459 55.0314 60.3902 54.3354 cv
60.4299 53.6992 59.9887 53.1322 59.3615 53.0161 cv
59.1015 52.9674 59.2811 53.0058 59.3396 53.0454 cv
59.3486 53.0457 li
58.9581 52.469 58.174 52.3176 57.5974 52.708 cv
57.0197 53.0984 56.8692 53.8825 57.2588 54.4591 cv
57.2605 54.4613 li
56.6873 52.3144 mo
56.7128 53.0548 56.8359 53.8359 57.2605 54.4613 cv
57.652 55.0371 58.4363 55.1876 59.0121 54.796 cv
59.5878 54.4054 59.7381 53.6222 59.3486 53.0457 cv
59.2803 52.8483 li
59.2301 52.6432 59.2131 52.4313 59.2048 52.2215 cv
59.1774 51.5263 58.5928 50.9851 57.8977 51.0114 cv
57.2036 51.0389 56.6627 51.6205 56.6873 52.3144 cv
56.6873 52.3144 mo
56.7115 53.0102 57.2948 53.5543 57.9895 53.5298 cv
58.6853 53.5056 59.2294 52.9225 59.2052 52.2265 cv
59.2048 52.2215 li
59.1914 51.8871 59.1814 51.4956 59.3217 51.1819 cv
59.601 50.5555 59.3197 49.8205 58.6923 49.541 cv
58.0859 49.2703 57.3746 49.5243 57.0762 50.1181 cv
56.7373 50.7923 56.6612 51.57 56.6873 52.3144 cv
59.3217 51.1819 mo
59.3842 51.0408 59.4722 50.9059 59.6061 50.8214 cv
60.1746 50.463 60.345 49.7117 59.9858 49.1431 cv
59.6368 48.589 58.9116 48.4107 58.3449 48.7401 cv
57.7934 49.0601 57.3612 49.5499 57.0762 50.1181 cv
56.7682 50.7318 57.0148 51.4784 57.6284 51.7864 cv
58.2422 52.0943 58.9889 51.8468 59.2967 51.2342 cv
59.3217 51.1819 li
59.6061 50.8214 mo
59.7521 50.7292 59.948 50.7273 60.1134 50.7345 cv
60.1133 50.7355 li
60.7766 50.7676 61.3404 50.2575 61.3735 49.5942 cv
61.4058 48.937 60.9043 48.3763 60.2483 48.335 cv
59.5912 48.2938 58.9203 48.4058 58.3449 48.7401 cv
57.7639 49.0775 57.5661 49.8224 57.9036 50.4032 cv
58.241 50.9851 58.9859 51.1819 59.5679 50.8446 cv
59.6061 50.8214 li
60.1134 50.7345 mo
60.3515 50.7722 li
60.3737 50.7803 60.3587 50.764 60.3391 50.7476 cv
60.2994 50.7143 60.2406 50.681 60.4339 50.8525 cv
60.9278 51.2921 61.6857 51.2477 62.1254 50.7538 cv
62.5263 50.3035 62.5291 49.6242 62.132 49.1698 cv
61.6567 48.6255 60.9543 48.3798 60.2483 48.335 cv
59.586 48.294 59.015 48.7972 58.974 49.4594 cv
58.932 50.1224 59.4352 50.6924 60.0982 50.7345 cv
60.1133 50.7355 li
60.1134 50.7345 li
60.2336 50.623 mo
60.3983 50.87 60.3829 51.2401 60.3893 51.5263 cv
60.4043 52.2007 60.9626 52.7355 61.637 52.7206 cv
62.3103 52.7055 62.8451 52.1473 62.8301 51.474 cv
62.8279 51.4283 li
62.782 50.651 62.6635 49.7786 62.132 49.1698 cv
61.6972 48.671 60.9406 48.6199 60.4417 49.0557 cv
59.9884 49.452 59.8999 50.1221 60.2336 50.623 cv
62.5799 53.806 mo
62.8382 53.0458 62.8756 52.2238 62.8289 51.4284 cv
62.8279 51.4283 li
62.7887 50.7547 62.2106 50.2415 61.538 50.2818 cv
60.8826 50.3204 60.3752 50.87 60.3893 51.5263 cv
60.4003 52.0127 60.3862 52.5291 60.2245 52.9932 cv
60.2235 52.9931 li
59.9966 53.6424 60.3385 54.3539 60.9877 54.5808 cv
61.638 54.8088 62.3485 54.4669 62.5766 53.8167 cv
62.5799 53.806 li
61.6415 55.4849 mo
62.0637 54.9948 62.3721 54.4164 62.5799 53.806 cv
62.8011 53.1539 62.4527 52.4467 61.8006 52.2254 cv
61.1535 52.0049 60.4499 52.3478 60.2235 52.9931 cv
60.1161 53.302 59.9647 53.601 59.7491 53.8495 cv
59.2976 54.3721 59.3541 55.1618 59.8767 55.6132 cv
60.3981 56.0657 61.1877 56.0092 61.6403 55.4867 cv
61.6415 55.4849 li
59.8497 56.5263 mo
60.5532 56.4033 61.1779 56.0229 61.6415 55.4849 cv
62.093 54.9623 62.0345 54.1723 61.5119 53.7219 cv
60.9892 53.2712 60.2005 53.3279 59.7491 53.8495 cv
59.6613 53.9511 59.5546 54.0371 59.4193 54.061 cv
58.7386 54.18 58.2829 54.8291 58.4019 55.5088 cv
58.5208 56.1896 59.169 56.6452 59.8497 56.5263 cv
57.5407 54.7354 mo
57.6692 55.2016 57.8744 55.6586 58.2188 56.0055 cv
58.6464 56.4357 59.2524 56.6308 59.8497 56.5263 cv
60.5305 56.4073 60.9861 55.7593 60.8671 55.0785 cv
60.7825 54.5937 60.4214 54.2033 59.944 54.0813 cv
59.936 54.0581 li
59.7449 53.3972 59.0537 53.0177 58.3939 53.209 cv
57.7402 53.3989 57.3591 54.0789 57.5407 54.7354 cv
57.5407 54.7354 mo
57.7235 55.3981 58.4094 55.7871 59.0722 55.6043 cv
59.7342 55.4205 60.1229 54.7355 59.9401 54.0727 cv
59.936 54.0581 li
59.767 53.4766 59.7508 52.8586 59.8038 52.2595 cv
59.8639 51.5826 59.3644 50.9838 58.6865 50.9236 cv
58.0147 50.8633 57.4187 51.356 57.3523 52.0281 cv
57.262 52.9319 57.2981 53.8561 57.5407 54.7354 cv
59.8038 52.2595 mo
59.8331 51.9314 59.8677 51.4429 60.1145 51.1874 cv
60.5787 50.7077 60.5653 49.9428 60.0855 49.4796 cv
59.6203 49.0295 58.8837 49.0262 58.4139 49.4709 cv
57.7188 50.1313 57.4446 51.1003 57.3523 52.0281 cv
57.2842 52.7049 57.7782 53.3081 58.4552 53.3752 cv
59.132 53.4432 59.735 52.9493 59.8022 52.2724 cv
59.8038 52.2595 li
60.1145 51.1874 mo
60.2796 51.0171 60.5043 50.9472 60.7365 50.9297 cv
61.3897 50.8839 61.8813 50.3161 61.8344 49.6638 cv
61.7876 49.0175 61.2316 48.5284 60.5847 48.5649 cv
59.7782 48.6102 59.0043 48.9117 58.4139 49.4709 cv
57.9303 49.9307 57.9102 50.6955 58.3692 51.1791 cv
58.829 51.6639 59.5938 51.6838 60.0775 51.224 cv
60.1145 51.1874 li
60.7365 50.9297 mo
60.9603 50.9143 61.2065 50.9289 61.3947 51.064 cv
61.9178 51.441 62.6481 51.3224 63.0241 50.7982 cv
63.3925 50.287 63.2885 49.5769 62.7896 49.192 cv
62.1603 48.7075 61.3688 48.5198 60.5847 48.5649 cv
59.9316 48.6017 59.4317 49.1624 59.4686 49.8155 cv
59.5064 50.4687 60.0661 50.9683 60.7192 50.9316 cv
60.7365 50.9297 li
61.3947 51.064 mo
61.6033 51.2139 61.7559 51.4221 61.8524 51.6595 cv
62.0924 52.2529 62.7694 52.5389 63.363 52.2988 cv
63.9568 52.0577 64.2425 51.3817 64.0015 50.788 cv
63.9969 50.7763 li
63.7364 50.1539 63.3243 49.6037 62.7896 49.192 cv
62.2786 48.7984 61.5455 48.8935 61.152 49.4043 cv
60.7584 49.9152 60.8536 50.6474 61.3644 51.0409 cv
61.3947 51.064 li
61.8524 51.6595 mo
62.022 52.0796 62.0294 52.5705 62.0192 53.0168 cv
62.0046 53.6704 62.5226 54.211 63.1751 54.2255 cv
63.8286 54.2403 64.3703 53.7222 64.3838 53.0696 cv
64.3849 53.0305 li
64.3762 52.269 64.2929 51.484 63.9969 50.7763 cv
63.7495 50.1849 63.0705 49.9058 62.4791 50.1532 cv
61.8929 50.3983 61.6128 51.0699 61.8524 51.6595 cv
63.1385 55.8241 mo
63.9507 55.1151 64.3962 54.1077 64.3849 53.0305 cv
64.3773 52.3771 63.8419 51.8533 63.1886 51.8609 cv
62.5505 51.8673 62.0338 52.3795 62.0192 53.0168 cv
62.0108 53.4101 61.8578 53.7452 61.5596 54.0012 cv
61.0548 54.4362 60.9971 55.197 61.4311 55.7017 cv
61.865 56.2073 62.627 56.2642 63.1316 55.8302 cv
63.1385 55.8241 li
60.5955 56.9673 mo
61.5434 56.8646 62.4237 56.4487 63.1385 55.8241 cv
63.6405 55.3866 63.6924 54.6239 63.2539 54.1228 cv
62.8181 53.6239 62.0618 53.5699 61.5596 54.0012 cv
61.2115 54.3001 60.7965 54.5088 60.3374 54.5575 cv
59.6719 54.628 59.1897 55.2243 59.2592 55.8895 cv
59.3298 56.555 59.9258 57.0383 60.5913 56.9678 cv
60.5955 56.9673 li
58.1268 55.6559 mo
58.2709 56.228 58.7062 56.6683 59.258 56.8614 cv
59.6854 57.0103 60.1495 57.0157 60.5955 56.9673 cv
61.2612 56.8948 61.7415 56.2973 61.6691 55.6315 cv
61.5973 54.9679 61.0018 54.4878 60.3374 54.5575 cv
60.208 54.568 li
60.2091 54.5672 li
59.771 54.063 59.0085 54.0101 58.5043 54.4483 cv
58.1612 54.7479 58.0154 55.214 58.1268 55.6559 cv
58.1268 55.6559 mo
58.2906 56.3022 58.9469 56.6942 59.594 56.5307 cv
60.2403 56.3669 60.6326 55.7097 60.4688 55.0635 cv
60.4619 55.0383 li
60.4268 54.9118 60.4301 54.769 60.4278 54.6387 cv
60.4234 54.3205 60.4455 54.0007 60.4742 53.6838 cv
60.5338 53.026 60.0493 52.4434 59.3906 52.3837 cv
58.7368 52.3246 58.1568 52.8033 58.0917 53.4574 cv
58.0204 54.1741 57.9478 54.9481 58.1268 55.6559 cv
60.4742 53.6838 mo
60.4964 53.4416 60.5327 53.1913 60.6273 52.9655 cv
60.7525 52.7689 li
61.2709 52.3689 61.367 51.6241 60.9669 51.1057 cv
60.5703 50.5928 59.8349 50.4929 59.317 50.8818 cv
58.5111 51.4858 58.1879 52.4918 58.0917 53.4574 cv
58.026 54.1153 58.5069 54.7017 59.164 54.7662 cv
59.8221 54.8319 60.4083 54.3518 60.474 53.6938 cv
60.4742 53.6838 li
60.7503 52.7706 mo
60.8441 52.699 60.9401 52.6278 61.0459 52.5738 cv
61.4058 52.7694 61.8565 52.636 62.0522 52.276 cv
62.1197 52.1516 62.1499 52.0103 62.1399 51.8689 cv
62.0981 51.2867 61.7729 50.7589 61.2226 50.5296 cv
60.5729 50.2593 59.8541 50.4773 59.3148 50.8835 cv
58.7922 51.277 58.6873 52.0206 59.0806 52.5432 cv
59.4749 53.0669 60.2176 53.1719 60.7413 52.7775 cv
60.7503 52.7706 li
.248722 .219242 0 0 cmyk
f
59.9009 56.319 mo
59.8768 56.803 60.2483 57.2138 60.7321 57.2389 cv
61.215 57.2629 61.6269 56.8915 61.651 56.4076 cv
61.6522 56.3663 li
61.654 55.9623 61.6594 55.5446 61.7506 55.149 cv
61.8176 54.9429 li
61.823 54.9329 61.8074 54.9445 61.7946 54.956 cv
61.7768 54.9722 61.7644 54.9883 61.8221 54.9464 cv
62.1402 54.7162 62.2118 54.2707 61.9805 53.9526 cv
61.8282 53.7424 61.5732 53.6318 61.316 53.6642 cv
60.7698 53.7319 60.3977 54.178 60.2024 54.661 cv
59.9918 55.1834 59.9295 55.7612 59.9009 56.319 cv
59.9009 56.319 mo
59.8155 58.006 59.6871 59.6904 59.5568 61.3735 cv
59.5176 61.8817 59.8978 62.326 60.4061 62.3653 cv
60.9142 62.4046 61.3584 62.0243 61.3977 61.516 cv
61.3981 61.5131 li
61.5261 59.8014 61.6466 58.0837 61.6522 56.3663 cv
61.6541 55.8826 61.2633 55.4884 60.7795 55.4866 cv
60.3108 55.4856 59.925 55.8513 59.9009 56.319 cv
59.5568 61.3735 mo
59.4816 62.3559 59.4332 63.3419 59.4543 64.3277 cv
59.4713 65.0639 59.5225 65.8085 59.6858 66.5284 cv
59.7976 67.0146 60.2825 67.3202 60.7688 67.2084 cv
61.2465 67.1006 61.5499 66.6315 61.4556 66.1515 cv
61.3344 65.542 61.3047 64.913 61.2957 64.2939 cv
61.2822 63.3665 61.3293 62.4379 61.3981 61.5131 cv
61.4364 61.0048 61.0548 60.5625 60.5466 60.5241 cv
60.0391 60.4869 59.597 60.8665 59.5568 61.3735 cv
59.6858 66.5284 mo
59.8999 67.4644 60.0524 68.4167 60.1051 69.3773 cv
60.1325 69.8688 60.5527 70.2457 61.0451 70.2194 cv
61.5376 70.1921 61.9144 69.7719 61.8872 69.2794 cv
61.887 69.2652 li
61.8132 68.2192 61.6588 67.18 61.4556 66.1515 cv
61.3585 65.6611 60.8822 65.3425 60.3928 65.4398 cv
59.9024 65.5369 59.5839 66.013 59.6811 66.5025 cv
59.6858 66.5284 li
60.1052 69.3763 mo
60.1615 70.402 60.1895 71.429 60.2014 72.4549 cv
60.2083 72.9568 60.6192 73.3587 61.121 73.3528 cv
61.6231 73.3459 62.025 72.935 62.0181 72.433 cv
62.0187 72.428 li
61.9994 71.3728 61.961 70.3183 61.887 69.2652 cv
61.8515 68.7736 61.4255 68.4031 60.9339 68.4376 cv
60.4477 68.4716 60.0791 68.8901 60.1052 69.3763 cv
60.2014 72.4549 mo
60.2143 73.5041 60.2404 74.5532 60.2908 75.6012 cv
60.3156 76.1125 60.7498 76.5072 61.2611 76.4824 cv
61.7725 76.4576 62.1672 76.0235 62.1424 75.5121 cv
62.1415 75.4949 li
62.0726 74.4737 62.0371 73.4507 62.0187 72.428 cv
62.0098 71.9258 61.5955 71.5265 61.0943 71.5355 cv
60.594 71.5446 60.1952 71.955 60.2014 72.4549 cv
60.2908 75.6012 mo
60.3386 76.5913 60.2832 77.5845 60.1744 78.5696 cv
60.1176 79.0876 60.4921 79.5543 61.0101 79.611 cv
61.529 79.6679 61.9956 79.2944 62.0525 78.7754 cv
62.0531 78.7704 li
62.1669 77.6841 62.2146 76.5862 62.1415 75.4949 cv
62.1065 74.9842 61.6654 74.5976 61.1547 74.6326 cv
60.6514 74.6656 60.2671 75.097 60.2908 75.6012 cv
60.7181 83.1901 mo
61.3433 81.7895 61.8935 80.3056 62.0531 78.7704 cv
62.1069 78.251 61.7301 77.787 61.2119 77.7324 cv
60.6945 77.6788 60.2319 78.0528 60.1744 78.5696 cv
60.0276 79.9037 59.5279 81.1986 58.9839 82.4149 cv
58.7699 82.8935 58.9849 83.4556 59.4634 83.6695 cv
59.942 83.8834 60.5041 83.6686 60.7181 83.1901 cv
57.0176 91.7632 mo
58.2244 88.894 59.4473 86.0318 60.7181 83.1901 cv
60.932 82.7114 60.7171 82.1493 60.2385 81.9354 cv
59.76 81.7214 59.1978 81.9364 58.9839 82.4149 cv
57.6943 85.3017 56.7395 88.3356 55.9111 91.3826 cv
55.8255 91.6953 56.0109 92.0165 56.3235 92.1023 cv
56.6071 92.1792 56.904 92.034 57.0176 91.7632 cv
f
61.9527 60.1166 mo
61.9838 60.3051 62.0058 60.4945 62.0226 60.6852 cv
62.0537 61.0542 62.3793 61.3281 62.7484 61.296 cv
63.0961 61.2663 63.3624 60.976 63.3619 60.6279 cv
63.3618 60.1278 63.3708 59.5815 63.2036 59.1033 cv
63.0836 58.759 62.8229 58.4744 62.4537 58.4046 cv
62.1063 58.3386 61.7709 58.484 61.5209 58.7189 cv
61.1925 59.0285 61.1776 59.5438 61.4861 59.8719 cv
61.6105 60.0029 61.7737 60.0895 61.9526 60.1176 cv
61.9527 60.1166 li
62.3726 60.7546 mo
62.4455 60.4241 62.5407 60.0684 62.7409 59.7897 cv
63.0048 59.4245 62.9224 58.9147 62.5559 58.6517 cv
62.2469 58.4285 61.8248 58.4496 61.5391 58.7022 cv
61.06 59.1264 60.7927 59.7372 60.6416 60.3469 cv
60.5226 60.8235 60.8123 61.3056 61.2891 61.4245 cv
61.7657 61.5434 62.2479 61.2526 62.3669 60.776 cv
62.3716 60.7545 li
62.3726 60.7546 li
62.0328 63.8434 mo
62.1074 62.8196 62.1493 61.7593 62.3726 60.7546 cv
62.3716 60.7545 li
62.4788 60.2751 62.1761 59.7996 61.6967 59.6934 cv
61.2262 59.5894 60.7573 59.8788 60.6416 60.3469 cv
60.3703 61.4341 60.3043 62.5871 60.2094 63.6992 cv
60.1666 64.2027 60.5401 64.6451 61.0438 64.6879 cv
61.5465 64.7305 61.9898 64.3572 62.0325 63.8545 cv
62.0328 63.8434 li
60.2194 68.9939 mo
60.2592 69.5142 60.7134 69.9025 61.2327 69.8625 cv
61.7531 69.8227 62.1413 69.3687 62.1015 68.8483 cv
62.1008 68.8391 li
61.9548 67.1789 61.9113 65.5056 62.0328 63.8434 cv
62.0697 63.339 61.6915 62.9011 61.1871 62.8643 cv
60.6876 62.8282 60.2515 63.2004 60.2094 63.6992 cv
60.06 65.4605 60.0835 67.2331 60.2194 68.9939 cv
60.2194 68.9939 mo
60.2769 69.7373 60.3293 70.4811 60.3553 71.2255 cv
60.3693 71.6094 60.3891 72.0032 60.3478 72.3861 cv
60.2921 72.9123 60.6728 73.3849 61.1989 73.4416 cv
61.7259 73.4984 62.1984 73.1177 62.2553 72.5906 cv
62.2554 72.5897 li
62.3058 72.1132 62.2847 71.6275 62.2637 71.1499 cv
62.23 70.3782 62.168 69.608 62.1008 68.8391 cv
62.0547 68.32 61.5971 67.9353 61.078 67.9813 cv
60.562 68.0267 60.179 68.4785 60.2194 68.9939 cv
60.7334 75.5968 mo
61.11 75.0776 61.471 74.5444 61.771 73.9771 cv
61.9992 73.5458 62.2035 73.0791 62.2554 72.5897 cv
62.3113 72.0625 61.9295 71.5908 61.4033 71.5351 cv
60.8772 71.4784 60.4046 71.8601 60.3478 72.3861 cv
60.3228 72.6279 60.1854 72.8713 60.0746 73.0819 cv
59.8172 73.569 59.5041 74.0267 59.1815 74.4731 cv
58.872 74.902 58.9684 75.5003 59.3972 75.8106 cv
59.8251 76.1199 60.4232 76.0246 60.7334 75.5968 cv
58.61 78.9295 mo
59.243 77.773 59.9607 76.6637 60.7334 75.5968 cv
61.0439 75.1679 60.9487 74.5689 60.5208 74.2586 cv
60.0921 73.9482 59.4929 74.0434 59.1826 74.4722 cv
59.1815 74.4731 li
58.3617 75.6076 57.6045 76.7885 56.9377 78.0193 cv
56.6874 78.4821 56.8599 79.0599 57.3218 79.31 cv
57.7837 79.5591 58.3591 79.3892 58.611 78.9297 cv
58.61 78.9295 li
56.854 81.8903 mo
57.4847 80.9321 58.0598 79.9365 58.61 78.9295 cv
58.8631 78.4681 58.6936 77.8897 58.232 77.6376 cv
57.7704 77.3856 57.1921 77.555 56.9401 78.0155 cv
56.9377 78.0193 li
56.4171 78.9826 55.8727 79.9369 55.2735 80.8538 cv
54.9883 81.2909 55.1105 81.8763 55.5476 82.1616 cv
55.9837 82.4467 56.567 82.3252 56.854 81.8903 cv
55.2947 84.4994 mo
55.7821 83.6114 56.2961 82.737 56.854 81.8903 cv
57.1411 81.4545 57.0201 80.8682 56.5842 80.5811 cv
56.1483 80.294 55.562 80.4152 55.2749 80.8509 cv
55.2735 80.8538 li
54.6918 81.7448 54.1539 82.6645 53.6461 83.5993 cv
53.3988 84.0554 53.5673 84.6256 54.0234 84.873 cv
54.4776 85.12 55.0455 84.9533 55.2947 84.4994 cv
52.1315 89.7642 mo
53.234 88.04 54.3109 86.2953 55.2947 84.4994 cv
55.5438 84.0446 55.3775 83.4736 54.9225 83.2243 cv
54.4678 82.9752 53.8968 83.1415 53.6476 83.5965 cv
53.6461 83.5993 li
52.6618 85.4092 51.8356 87.3042 51.0632 89.2131 cv
50.9388 89.5217 51.0881 89.8737 51.3965 89.9991 cv
51.6658 90.1075 51.9749 90.0092 52.1315 89.7642 cv
f
63.4323 62.4083 mo
63.5417 61.2003 63.843 60.0131 64.3405 58.9066 cv
64.5072 58.5359 64.3416 58.1002 63.9709 57.9334 cv
63.6393 57.7837 63.2473 57.8996 63.0505 58.206 cv
62.2751 59.4108 61.782 60.7799 61.5861 62.1975 cv
61.5166 62.7057 61.8715 63.175 62.3799 63.2445 cv
62.888 63.3152 63.3571 62.9601 63.4278 62.452 cv
63.4323 62.4083 li
61.6197 65.8245 mo
61.7409 66.3543 62.2688 66.6866 62.7987 66.5654 cv
63.3294 66.4452 63.6606 65.9172 63.5404 65.3865 cv
63.5371 65.374 li
63.3051 64.4124 63.3436 63.3859 63.4323 62.4083 cv
63.4781 61.8969 63.1019 61.445 62.5904 61.3993 cv
62.0961 61.3547 61.6546 61.7062 61.5861 62.1975 cv
61.4221 63.3913 61.3499 64.6403 61.6197 65.8245 cv
61.6197 65.8245 mo
61.8199 66.7043 62.0904 67.57 62.4429 68.402 cv
62.6578 68.9096 63.2444 69.1464 63.752 68.9317 cv
64.2596 68.7167 64.4966 68.1302 64.2817 67.6226 cv
64.2785 67.6161 li
63.9655 66.8922 63.7216 66.1398 63.5371 65.374 cv
63.4096 64.8454 62.8778 64.5207 62.3492 64.6482 cv
61.8247 64.7741 61.4999 65.2989 61.6197 65.8245 cv
62.4429 68.402 mo
62.7646 69.1603 63.1173 69.9044 63.5047 70.6309 cv
63.7677 71.1247 64.3808 71.3115 64.8746 71.0485 cv
65.3682 70.7855 65.5542 70.1722 65.291 69.6785 cv
65.2829 69.6634 li
64.914 68.9978 64.5808 68.3135 64.2785 67.6161 cv
64.0593 67.11 63.4714 66.8769 62.9662 67.0961 cv
62.4622 67.3145 62.2298 67.8966 62.4429 68.402 cv
63.5047 70.6309 mo
63.9211 71.4126 64.2216 72.257 64.4871 73.0998 cv
64.4861 73.0997 li
64.6573 73.641 65.2337 73.9411 65.7748 73.771 cv
66.316 73.6008 66.6162 73.0244 66.4459 72.4833 cv
66.4447 72.477 li
66.1345 71.5124 65.7764 70.5517 65.2829 69.6634 cv
65.0122 69.1747 64.3957 68.9985 63.907 69.2692 cv
63.4237 69.5377 63.2449 70.1437 63.5047 70.6309 cv
64.4871 73.0998 mo
64.7609 73.971 65.0484 74.854 65.4613 75.6714 cv
65.7182 76.1815 66.3402 76.3857 66.8502 76.1288 cv
67.3603 75.871 67.5646 75.249 67.3075 74.7399 cv
67.306 74.7357 li
66.9405 74.02 66.6902 73.2406 66.4447 72.477 cv
66.2714 71.9374 65.6926 71.64 65.152 71.8132 cv
64.6145 71.986 64.3166 72.5607 64.4861 73.0997 cv
64.4871 73.0998 li
65.4613 75.6714 mo
65.8426 76.4285 66.3862 77.0994 66.954 77.7241 cv
67.3383 78.1458 67.9908 78.1765 68.4132 77.7933 cv
68.8335 77.4109 68.8659 76.7608 68.4857 76.3386 cv
68.0447 75.8492 67.6069 75.327 67.306 74.7357 cv
67.0469 74.2274 66.4237 74.025 65.9153 74.2841 cv
65.4072 74.5423 65.2042 75.1625 65.4613 75.6714 cv
66.954 77.7241 mo
67.4133 78.229 67.8404 78.7873 68.1077 79.4196 cv
68.3296 79.9433 68.9333 80.1885 69.4568 79.9666 cv
69.9806 79.7446 70.2258 79.1411 70.0039 78.6174 cv
69.646 77.7718 69.097 77.0174 68.4857 76.3386 cv
68.1039 75.9143 67.4508 75.8805 67.0275 76.2626 cv
66.6032 76.6444 66.5696 77.2965 66.9515 77.7208 cv
66.954 77.7241 li
68.1077 79.4196 mo
68.3968 80.1031 68.525 80.8516 68.6081 81.5843 cv
68.6729 82.1532 69.186 82.5612 69.7548 82.4974 cv
70.3227 82.4325 70.7317 81.9196 70.6679 81.3508 cv
70.666 81.3414 li
70.5525 80.4154 70.3696 79.4803 70.0039 78.6174 cv
69.782 78.0938 69.1774 77.8485 68.6548 78.0704 cv
68.1311 78.2923 67.8858 78.8959 68.1077 79.4196 cv
68.6081 81.5843 mo
68.7038 82.4295 68.7892 83.2773 68.8451 84.1264 cv
68.8829 84.701 69.3802 85.1372 69.9548 85.0993 cv
70.5293 85.0614 70.9654 84.5641 70.9276 83.9896 cv
70.9269 83.9875 li
70.8684 83.1037 70.7734 82.2214 70.666 81.3414 cv
70.597 80.774 70.0804 80.3696 69.5119 80.4395 cv
68.9475 80.5079 68.5438 81.0194 68.6081 81.5843 cv
68.8451 84.1264 mo
68.8797 84.6472 68.8603 85.173 68.8437 85.6931 cv
68.8142 86.6179 68.7608 87.5407 68.7014 88.4626 cv
68.6647 89.0367 69.1001 89.5314 69.674 89.5682 cv
70.2471 89.6046 70.7406 89.1712 70.7792 88.5984 cv
70.8415 87.6537 70.8978 86.7081 70.9291 85.7613 cv
70.9486 85.172 70.9668 84.5774 70.9269 83.9875 cv
70.889 83.4129 70.3916 82.9778 69.8169 83.0166 cv
69.2422 83.0554 68.8072 83.5519 68.8451 84.1264 cv
68.7014 88.4626 mo
68.5119 91.4036 68.4713 94.409 68.9748 97.3234 cv
69.0346 97.6729 69.3675 97.9063 69.717 97.8465 cv
70.0109 97.7957 70.2314 97.5478 70.2479 97.2485 cv
70.407 94.3642 70.59 91.4809 70.7793 88.5974 cv
70.8168 88.0246 70.3817 87.5289 69.8087 87.4913 cv
69.2349 87.4536 68.7393 87.8878 68.7016 88.4617 cv
68.7014 88.4626 li
f
60.2639 66.5922 mo
60.5454 66.3643 60.8514 66.2041 61.2083 66.3449 cv
61.595 66.4976 62.0328 66.308 62.1854 65.9214 cv
62.3038 65.621 62.217 65.2782 61.9696 65.0698 cv
61.5786 64.7391 61.0837 64.5503 60.569 64.5696 cv
60.03 64.5898 59.5272 64.8295 59.1113 65.1621 cv
58.7165 65.4793 58.652 66.0578 58.9702 66.4526 cv
59.2871 66.8484 59.8648 66.9118 60.2606 66.5947 cv
60.2639 66.5922 li
58.5797 67.6747 mo
59.1729 67.3671 59.7449 67.0133 60.265 66.5913 cv
60.6581 66.272 60.7185 65.694 60.3993 65.2999 cv
60.0807 64.908 59.5058 64.847 59.1123 65.1622 cv
58.6841 65.5043 58.2144 65.7915 57.7289 66.0466 cv
57.28 66.2822 57.1067 66.8376 57.343 67.2875 cv
57.5777 67.7351 58.1311 67.9084 58.5795 67.6758 cv
58.5797 67.6747 li
57.3337 68.4861 mo
57.7066 68.1591 58.1418 67.9037 58.5806 67.6749 cv
59.0303 67.4414 59.2057 66.8864 58.9723 66.4358 cv
58.7379 65.9861 58.1827 65.8107 57.7332 66.0441 cv
57.7289 66.0466 li
57.1676 66.3413 56.6187 66.6729 56.1306 67.0797 cv
55.7386 67.4073 55.6866 67.9904 56.0142 68.3826 cv
56.3417 68.7747 56.9247 68.8276 57.3168 68.5 cv
57.3337 68.4861 li
56.1965 69.8146 mo
56.537 69.3473 56.8963 68.8683 57.3337 68.4861 cv
57.7179 68.1495 57.757 67.5646 57.4203 67.1805 cv
57.089 66.802 56.517 66.7575 56.1306 67.0797 cv
55.5737 67.5444 55.1156 68.1265 54.6875 68.7086 cv
54.3818 69.1249 54.4717 69.7102 54.888 70.016 cv
55.3044 70.3217 55.8897 70.2318 56.1954 69.8155 cv
56.1965 69.8146 li
55.2545 71.5534 mo
55.4694 70.9268 55.8062 70.347 56.1965 69.8146 cv
56.5014 69.3972 56.4095 68.8117 55.9929 68.5079 cv
55.5765 68.2031 54.9932 68.2933 54.6875 68.7086 cv
54.1862 69.3912 53.7587 70.1345 53.476 70.935 cv
53.3018 71.4257 53.5592 71.963 54.0501 72.1362 cv
54.54 72.3093 55.0782 72.053 55.2514 71.5621 cv
55.2545 71.5534 li
54.8867 73.9379 mo
54.9258 73.1415 54.9942 72.3134 55.2545 71.5534 cv
55.4227 71.0619 55.1601 70.5259 54.6686 70.3577 cv
54.1801 70.1899 53.6476 70.4479 53.476 70.935 cv
53.1495 71.8567 53.0248 72.847 52.9513 73.8166 cv
52.9097 74.3506 53.3093 74.8165 53.8434 74.8582 cv
54.3776 74.8987 54.8436 74.4991 54.8851 73.965 cv
54.8867 73.9379 li
52.9513 73.8166 mo
52.8776 74.7629 52.8393 75.7491 53.0436 76.6829 cv
53.1609 77.2192 53.691 77.5578 54.2264 77.4404 cv
54.7627 77.3239 55.1023 76.7939 54.9847 76.2585 cv
54.9848 76.2576 li
54.8197 75.5052 54.8486 74.7024 54.8867 73.9379 cv
54.9121 73.4038 54.5 72.9484 53.9649 72.9218 cv
53.4409 72.8965 52.9915 73.2933 52.9513 73.8166 cv
53.0436 76.6829 mo
53.1986 77.3885 53.3153 78.1023 53.4189 78.8164 cv
53.4981 79.3589 54.0022 79.7354 54.5447 79.6562 cv
55.0882 79.5781 55.4637 79.0739 55.3856 78.5304 cv
55.275 77.769 55.1492 77.0087 54.9848 76.2576 cv
54.8664 75.7221 54.3374 75.3826 53.8011 75.5 cv
53.2656 75.6175 52.927 76.1475 53.0436 76.6829 cv
53.4189 78.8164 mo
53.7307 80.9648 54.2513 83.0898 54.7463 85.2025 cv
54.8269 85.5466 55.1714 85.7603 55.5165 85.6799 cv
55.8233 85.6075 56.0325 85.3219 56.0085 85.0073 cv
55.8444 82.8476 55.6969 80.6749 55.3856 78.5304 cv
55.3062 77.9879 54.8023 77.6114 54.2598 77.6896 cv
53.7162 77.7687 53.3396 78.2728 53.4189 78.8164 cv
f
69.3947 79.2777 mo
69.7521 78.4526 70.1239 77.6334 70.4964 76.8164 cv
70.6789 76.4174 70.5036 75.9471 70.1045 75.7656 cv
69.7713 75.6128 69.3758 75.709 69.1499 75.9985 cv
68.5485 76.7689 67.9574 77.584 67.5668 78.4865 cv
67.3476 78.9906 67.5795 79.5771 68.0846 79.7964 cv
68.5898 80.0148 69.1763 79.7829 69.3947 79.2777 cv
cp
67.6123 81.614 mo
68.0009 81.1962 68.3816 80.7694 68.732 80.3195 cv
68.9834 79.996 69.231 79.6559 69.3947 79.2777 cv
69.6131 78.7725 69.3811 78.186 68.8759 77.9676 cv
68.3717 77.7494 67.7852 77.9813 67.5668 78.4865 cv
67.4707 78.708 67.3066 78.9097 67.1592 79.0984 cv
66.8449 79.5035 66.502 79.8869 66.155 80.2636 cv
65.7825 80.6663 65.8072 81.2956 66.2099 81.6681 cv
66.6127 82.0397 67.2399 82.0157 67.6123 81.614 cv
cp
65.5891 83.887 mo
66.2364 83.1053 66.9227 82.3569 67.6123 81.614 cv
67.9859 81.2114 67.963 80.5834 67.5604 80.2098 cv
67.1589 79.8364 66.5297 79.8602 66.1563 80.2617 cv
66.155 80.2636 li
65.4403 81.0366 64.731 81.8152 64.0635 82.6286 cv
63.7167 83.0507 63.7785 83.6737 64.2008 84.0195 cv
64.621 84.3651 65.2417 84.306 65.5891 83.887 cv
cp
64.4061 85.4384 mo
64.7728 84.9009 65.1738 84.387 65.5891 83.887 cv
65.9368 83.466 65.879 82.8425 65.458 82.4948 cv
65.0382 82.1462 64.4147 82.204 64.066 82.6249 cv
64.0635 82.6286 li
63.6103 83.1801 63.1742 83.747 62.7781 84.3403 cv
62.4769 84.7915 62.599 85.4011 63.0502 85.7022 cv
63.4976 86.0019 64.1027 85.8833 64.4061 85.4384 cv
cp
63.4738 87.1402 mo
63.7441 86.5529 64.0417 85.9732 64.4061 85.4384 cv
64.7118 84.9908 64.5959 84.38 64.1474 84.0742 cv
63.6996 83.7694 63.0888 83.8853 62.7831 84.3329 cv
62.7781 84.3403 li
62.358 84.9707 62.0142 85.6514 61.7093 86.343 cv
61.4929 86.8324 61.7136 87.4043 62.203 87.6207 cv
62.6865 87.8352 63.2526 87.6208 63.4738 87.1402 cv
cp
62.4221 89.7219 mo
62.7451 88.8511 63.0857 87.9845 63.4738 87.1402 cv
63.6978 86.6538 63.4856 86.079 62.9993 85.855 cv
62.5138 85.6321 61.9389 85.8443 61.715 86.3297 cv
61.7093 86.343 li
61.3124 87.2397 60.969 88.1593 60.6461 89.0836 cv
60.4748 89.5757 60.7351 90.1144 61.2272 90.2858 cv
61.7125 90.4552 62.244 90.2041 62.4221 89.7219 cv
cp
59.3209 98.5196 mo
60.3428 95.5822 61.3524 92.6391 62.4235 89.7191 cv
62.6025 89.2299 62.3517 88.6884 61.8627 88.5084 cv
61.3736 88.3294 60.831 88.5801 60.652 89.0692 cv
60.6474 89.0818 li
60.2495 90.2132 59.9373 91.3758 59.6297 92.534 cv
59.1292 94.4144 58.6686 96.305 58.2189 98.1981 cv
58.1458 98.5073 58.3369 98.8162 58.6449 98.8902 cv
58.9315 98.9584 59.2244 98.7986 59.3209 98.5196 cv
cp
f
63.5967 82.7698 mo
64.0703 82.8661 64.5585 83.044 64.7506 83.5255 cv
64.913 83.9316 65.3735 84.1292 65.7796 83.9667 cv
66.0889 83.8433 66.2884 83.5393 66.2779 83.2062 cv
66.2586 82.6209 66.03 82.0631 65.6205 81.6423 cv
65.1878 81.1974 64.6009 80.9402 64 80.8143 cv
63.461 80.7015 62.9316 81.0466 62.8186 81.5866 cv
62.7056 82.1266 63.0509 82.6551 63.5908 82.769 cv
63.5967 82.7698 li
cp
61.6867 83.0701 mo
62.2756 82.8506 62.9639 82.6419 63.5977 82.77 cv
64.1382 82.8789 64.6652 82.5294 64.7742 81.989 cv
64.8827 81.4524 64.5379 80.928 64.002 80.8146 cv
62.991 80.6016 61.9371 80.8378 60.987 81.1922 cv
60.4679 81.3864 60.205 81.9636 60.3993 82.4817 cv
60.5917 82.9995 61.1688 83.2625 61.6867 83.0701 cv
cp
59.6485 84.0122 mo
60.2764 83.6072 60.9898 83.3291 61.6867 83.0701 cv
62.2046 82.8767 62.4696 82.2999 62.2762 81.7819 cv
62.083 81.2629 61.507 80.9991 60.988 81.1924 cv
60.987 81.1922 li
60.1523 81.5041 59.3091 81.8501 58.5622 82.3416 cv
58.1027 82.6443 57.9747 83.2621 58.2774 83.7215 cv
58.5775 84.1776 59.1889 84.3079 59.6485 84.0122 cv
cp
57.7688 85.6564 mo
58.3492 85.0728 58.9525 84.4599 59.6485 84.0122 cv
60.1114 83.714 60.2453 83.098 59.947 82.6351 cv
59.6497 82.1723 59.0328 82.0383 58.5709 82.3367 cv
58.5622 82.3416 li
57.748 82.8769 57.045 83.5909 56.3721 84.2896 cv
55.9984 84.678 56.0094 85.2965 56.3987 85.6713 cv
56.7827 86.0404 57.3924 86.0344 57.7688 85.6564 cv
cp
55.2889 88.062 mo
56.1313 87.2763 56.9559 86.4721 57.7688 85.6564 cv
58.1489 85.2738 58.1479 84.6556 57.7655 84.2746 cv
57.3831 83.8936 56.7637 83.8954 56.3837 84.278 cv
56.3721 84.2896 li
55.5887 85.1031 54.7944 85.9071 53.9859 86.6963 cv
53.6132 87.0606 53.6058 87.6576 53.97 88.0312 cv
54.3281 88.398 54.9141 88.412 55.2889 88.062 cv
cp
53.4631 90.2899 mo
53.9654 89.4674 54.5841 88.7193 55.2889 88.062 cv
55.6706 87.7059 55.691 87.1096 55.3359 86.7281 cv
54.9807 86.3466 54.3835 86.326 54.0019 86.6812 cv
53.9859 86.6963 li
53.1785 87.4845 52.4701 88.3722 51.8914 89.3422 cv
51.6316 89.7775 51.7738 90.3403 52.2092 90.6001 cv
52.6417 90.8586 53.201 90.7199 53.4631 90.2899 cv
cp
51.8601 92.7915 mo
52.4155 91.9717 52.9467 91.1358 53.4631 90.2899 cv
53.7265 89.858 53.5906 89.293 53.1579 89.0285 cv
52.725 88.765 52.1599 88.9019 51.8964 89.3347 cv
51.8914 89.3422 li
51.3963 90.1717 50.89 90.9937 50.3669 91.8055 cv
50.0995 92.2217 50.2188 92.7745 50.6339 93.0428 cv
51.0436 93.3063 51.5873 93.1949 51.8601 92.7915 cv
cp
50.331 95.4709 mo
50.7894 94.551 51.2834 93.6437 51.8601 92.7915 cv
52.1367 92.3825 52.0299 91.8263 51.6199 91.5496 cv
51.2111 91.272 50.6547 91.3798 50.3782 91.7888 cv
50.3669 91.8055 li
49.7707 92.7308 49.2481 93.703 48.7583 94.6874 cv
48.5419 95.1223 48.7189 95.6493 49.1529 95.8656 cv
49.5878 96.0819 50.1147 95.9049 50.331 95.4709 cv
cp
49.2258 98.3735 mo
49.4727 97.3658 49.8687 96.3975 50.331 95.4709 cv
50.5472 95.037 50.3703 94.5091 49.9364 94.2928 cv
49.5015 94.0764 48.9746 94.2525 48.7583 94.6874 cv
48.2369 95.7364 47.8026 96.8369 47.5481 97.9818 cv
47.445 98.4454 47.7386 98.9057 48.2022 99.0088 cv
48.66 99.1102 49.1138 98.8279 49.2258 98.3735 cv
cp
47.2189 101.497 mo
47.7648 101.338 48.1685 100.874 48.4539 100.403 cv
48.8306 99.7815 49.0569 99.0736 49.2262 98.3705 cv
49.3384 97.907 49.0535 97.4418 48.5909 97.3307 cv
48.1283 97.2197 47.6632 97.5035 47.5522 97.9662 cv
47.5486 97.9778 li
47.414 98.5765 47.2652 99.1754 47.0672 99.7568 cv
46.9586 100.076 46.8387 100.411 46.6417 100.688 cv
46.4739 100.926 46.5294 101.254 46.7669 101.422 cv
46.898 101.516 47.0638 101.543 47.2189 101.497 cv
cp
f
59.7503 52.5746 mo
60.1957 52.8185 60.7552 52.6556 61.0003 52.2093 cv
61.1559 51.9249 61.1501 51.5784 60.9847 51.2979 cv
60.9844 51.2999 li
61.539 50.8773 61.6452 50.0844 61.2216 49.5297 cv
60.7981 48.9759 60.0062 48.8689 59.4515 49.2924 cv
59.3998 49.3342 li
58.8461 49.8042 58.4864 50.514 58.6497 51.25 cv
58.7822 51.8489 59.2287 52.2886 59.7503 52.5746 cv
60.2677 51.5564 mo
60.9133 51.8756 61.6956 51.6103 62.0148 50.9649 cv
62.1006 50.7914 62.1472 50.6019 62.15 50.4076 cv
62.1628 49.6047 61.6361 48.8492 60.7897 48.7823 cv
60.2497 48.7399 59.773 49.0042 59.3816 49.35 cv
58.8593 49.8119 58.8099 50.6092 59.2708 51.1324 cv
59.5225 51.417 59.8885 51.573 60.2685 51.5585 cv
60.2677 51.5564 li
61.0387 52.5682 mo
61.6347 51.9967 62.1366 51.2629 62.15 50.4076 cv
62.1612 49.6881 61.5872 49.0949 60.867 49.0827 cv
60.1897 49.072 59.6159 49.5818 59.5481 50.2566 cv
59.5256 50.4776 59.5387 50.3603 59.5537 50.322 cv
59.5271 50.372 li
59.4535 50.4894 59.3516 50.5913 59.2516 50.6862 cv
58.7287 51.1765 58.7025 51.9979 59.1927 52.5208 cv
59.6838 53.044 60.5053 53.0692 61.0283 52.579 cv
61.0387 52.5682 li
58.9448 54.0366 mo
59.6999 53.6378 60.4218 53.1612 61.0387 52.5682 cv
61.5553 52.0722 61.5725 51.2506 61.0756 50.7339 cv
60.5831 50.2208 59.7702 50.1996 59.2516 50.6862 cv
58.809 51.1011 58.2817 51.4214 57.7408 51.6904 cv
57.089 52.0157 56.8235 52.8072 57.1478 53.4591 cv
57.4733 54.111 58.2648 54.3764 58.9166 54.0521 cv
58.9448 54.0366 li
55.6195 53.4819 mo
56.003 54.0183 56.591 54.3774 57.2516 54.4373 cv
57.8437 54.4915 58.4265 54.3115 58.9448 54.0366 cv
59.5886 53.6961 59.8346 52.899 59.494 52.2552 cv
59.1602 51.6224 58.3819 51.3717 57.7408 51.6904 cv
57.6337 51.7401 li
57.6359 51.7383 li
57.1031 51.2251 56.2551 51.2418 55.7427 51.7746 cv
55.2956 52.2393 55.2434 52.9575 55.6195 53.4819 cv
55.6195 53.4819 mo
56.0491 54.0838 56.8862 54.2219 57.4873 53.7911 cv
58.0725 53.3726 58.2219 52.5661 57.8254 51.9655 cv
57.8241 51.9673 li
58.229 51.3369 58.0457 50.4985 57.4154 50.0937 cv
56.7895 49.6924 55.956 49.8703 55.5491 50.4924 cv
54.9364 51.4276 54.97 52.5754 55.6195 53.4819 cv
57.7967 52.0081 mo
57.9648 51.7677 58.1826 51.5649 58.4553 51.4517 cv
59.1627 51.1577 59.4972 50.346 59.2031 49.6396 cv
58.909 48.9332 58.0971 48.5985 57.3907 48.8927 cv
57.3352 48.9167 li
56.6021 49.2608 55.9911 49.8164 55.5491 50.4924 cv
55.1386 51.119 55.3136 51.9592 55.9402 52.3698 cv
56.555 52.7716 57.3782 52.6115 57.7967 52.0081 cv
58.4553 51.4517 mo
58.4788 51.4417 li
58.4773 51.4446 li
59.174 51.7894 60.0186 51.5031 60.3634 50.8064 cv
60.6608 50.2046 60.4924 49.477 59.9615 49.0678 cv
59.1882 48.472 58.1838 48.52 57.3352 48.9167 cv
56.6429 49.2419 56.344 50.0665 56.6681 50.7596 cv
56.9829 51.4313 57.7702 51.7365 58.4553 51.4517 cv
58.2239 51.2838 mo
58.3855 51.5074 li
58.6458 52.2426 59.4523 52.6269 60.1865 52.3666 cv
60.9197 52.1072 61.3046 51.3038 61.0473 50.5699 cv
60.8397 49.9745 60.4604 49.4527 59.9615 49.0678 cv
59.345 48.593 58.4612 48.707 57.9867 49.3224 cv
57.517 49.9313 57.6223 50.8039 58.2239 51.2838 cv
60.4289 53.0512 mo
61.0499 52.3801 61.3591 51.4591 61.0483 50.57 cv
61.0473 50.5699 li
60.7901 49.835 59.9852 49.4469 59.2493 49.7039 cv
58.6272 49.9222 58.2389 50.5417 58.3137 51.1966 cv
58.3129 51.1945 li
57.8165 51.7919 57.8977 52.6796 58.495 53.177 cv
59.0706 53.6555 59.9205 53.6007 60.4289 53.0512 cv
58.8606 54.189 mo
59.458 53.9273 59.9873 53.5287 60.4289 53.0512 cv
60.9573 52.4801 60.9229 51.5894 60.3527 51.0612 cv
59.7816 50.5328 58.8909 50.5672 58.3626 51.1383 cv
58.3567 51.1446 li
58.1901 51.3268 57.9939 51.4871 57.7632 51.5803 cv
57.0389 51.8721 56.6885 52.6972 56.9813 53.4225 cv
57.274 54.1468 58.098 54.497 58.8234 54.2044 cv
58.8606 54.189 li
55.9894 53.1383 mo
56.2695 53.5706 56.6405 53.9543 57.1131 54.1746 cv
57.6655 54.4333 58.3029 54.4328 58.8606 54.189 cv
59.5767 53.875 59.903 53.0409 59.59 52.3251 cv
59.3656 51.8122 58.86 51.4797 58.3008 51.4773 cv
58.3019 51.4764 li
57.8127 50.8597 56.9164 50.7574 56.2998 51.2466 cv
55.7246 51.7037 55.59 52.5212 55.9894 53.1383 cv
55.9894 53.1383 mo
56.4175 53.7985 57.2997 53.9868 57.9609 53.5588 cv
58.6034 53.1426 58.8025 52.2931 58.4105 51.6345 cv
58.4094 51.6354 li
58.7521 50.9324 58.459 50.085 57.7551 49.7423 cv
57.1687 49.4569 56.4625 49.6098 56.0459 50.1117 cv
55.3034 51.0061 55.3807 52.1978 55.9894 53.1383 cv
58.2494 51.891 mo
58.4278 51.665 58.6469 51.4754 58.8977 51.3364 cv
59.5752 50.9609 59.8203 50.1073 59.4449 49.4297 cv
59.0729 48.7567 58.2276 48.5095 57.5513 48.8751 cv
56.9759 49.186 56.4637 49.608 56.0459 50.1117 cv
55.5468 50.7139 55.6293 51.6068 56.2314 52.1058 cv
56.8333 52.6059 57.7263 52.5233 58.2254 51.9213 cv
58.2494 51.891 li
58.8663 51.3536 mo
59.6054 51.595 60.4005 51.1913 60.642 50.4521 cv
60.8565 49.7972 60.5644 49.0831 59.953 48.7653 cv
59.1819 48.3654 58.2959 48.473 57.5513 48.8751 cv
56.8697 49.2429 56.6157 50.0945 56.9846 50.7762 cv
57.3492 51.4514 58.1884 51.7077 58.8674 51.3527 cv
58.8663 51.3536 li
58.6115 51.241 mo
58.4922 51.1732 58.6918 51.3452 58.7214 51.3812 cv
58.9153 51.622 59.0807 51.8873 59.2391 52.1527 cv
59.6445 52.8322 60.5244 53.0544 61.2047 52.6491 cv
61.8842 52.2437 62.1064 51.3639 61.7011 50.6834 cv
61.6836 50.655 li
61.2385 49.9473 60.7146 49.1608 59.952 48.7651 cv
59.953 48.7653 li
59.2622 48.4069 58.4128 48.6756 58.0546 49.3665 cv
57.7047 50.0392 57.9508 50.8675 58.6115 51.241 cv
62.1575 53.9083 mo
62.6633 52.8169 62.2904 51.6186 61.6836 50.655 cv
61.2618 49.9845 60.3763 49.7837 59.7069 50.2055 cv
59.0475 50.6197 58.8402 51.4843 59.2391 52.1527 cv
59.3418 52.3253 59.4459 52.5122 59.4908 52.7106 cv
59.5016 52.7754 li
59.5036 52.7212 59.5482 52.5787 59.4588 52.8576 cv
59.216 53.6219 59.6373 54.4375 60.4015 54.6801 cv
61.0978 54.9019 61.8503 54.5715 62.1575 53.9083 cv
60.5553 55.6538 mo
61.2653 55.2613 61.817 54.6418 62.1575 53.9083 cv
62.4942 53.1813 62.1779 52.3188 61.451 51.9822 cv
60.7251 51.6456 59.8638 51.9601 59.5263 52.6859 cv
59.4426 52.8656 59.3207 53.0212 59.1456 53.1198 cv
58.447 53.5107 58.197 54.3938 58.5879 55.0926 cv
58.9768 55.79 59.856 56.0405 60.5553 55.6538 cv
57.89 55.7044 mo
58.7386 56.1365 59.7236 56.1142 60.5553 55.6538 cv
61.2556 55.2661 61.5094 54.3843 61.1219 53.683 cv
60.7342 52.9827 59.8514 52.7287 59.1512 53.1165 cv
58.4301 52.7805 57.5742 53.0926 57.2383 53.8136 cv
56.9108 54.5164 57.1993 55.3522 57.89 55.7044 cv
57.89 55.7044 mo
58.5984 56.0659 59.4658 55.7835 59.8263 55.0748 cv
60.1879 54.3662 59.9054 53.499 59.1967 53.1384 cv
59.1674 53.1236 li
58.966 53.027 58.8405 52.7416 58.7548 52.5541 cv
58.4284 51.8396 57.5858 51.5252 56.8713 51.8505 cv
56.1674 52.1722 55.8491 52.9993 56.1578 53.7096 cv
56.5144 54.5329 57.0752 55.2898 57.89 55.7044 cv
58.7548 52.5541 mo
58.6739 52.3763 58.5545 52.1139 58.6217 51.9129 cv
58.8681 51.1823 58.4751 50.3905 57.7456 50.1444 cv
57.0363 49.9057 56.2657 50.2681 55.9971 50.9665 cv
55.6525 51.8639 55.7823 52.8445 56.1578 53.7096 cv
56.4702 54.4295 57.3068 54.7601 58.0266 54.4485 cv
58.7475 54.1362 59.0783 53.2986 58.7658 52.5787 cv
58.7548 52.5541 li
58.6217 51.9129 mo
58.7477 51.5378 59.0408 51.2188 59.3167 50.9478 cv
59.8575 50.4135 59.8638 49.5433 59.3306 49.0026 cv
58.7991 48.4643 57.9342 48.4546 57.3923 48.9816 cv
56.8104 49.5468 56.2902 50.2027 55.9971 50.9665 cv
55.7208 51.6861 56.0795 52.4936 56.7992 52.7699 cv
57.5187 53.0461 58.3263 52.6865 58.6026 51.9668 cv
58.6217 51.9129 li
59.3167 50.9478 mo
59.4924 50.7738 59.6749 50.6027 59.8708 50.4515 cv
60.0755 50.3106 li
60.7933 50.0452 61.1594 49.2465 60.894 48.5286 cv
60.6277 47.8106 59.8289 47.4445 59.111 47.711 cv
59.0311 47.743 li
58.4045 48.0212 57.8777 48.5098 57.3923 48.9816 cv
56.8472 49.5113 56.8348 50.3818 57.3644 50.927 cv
57.8941 51.4711 58.7648 51.4837 59.31 50.9539 cv
59.3167 50.9478 li
59.5152 50.3946 mo
60.0696 50.951 60.9698 50.9522 61.5252 50.3977 cv
62.0576 49.8654 62.0842 49.0107 61.5839 48.4482 cv
60.9423 47.7241 59.9627 47.3296 59.0311 47.743 cv
58.3306 48.054 58.0153 48.8734 58.3255 49.5727 cv
58.5373 50.0488 58.9973 50.3672 59.5171 50.3949 cv
59.5152 50.3946 li
59.4101 50.2783 mo
59.6228 50.5446 59.8019 50.8369 59.9317 51.1521 cv
60.237 51.8892 61.0809 52.2409 61.8178 51.9367 cv
62.5559 51.6316 62.9068 50.7875 62.6026 50.0495 cv
62.5955 50.0345 li
62.3487 49.4542 62.0021 48.9196 61.5839 48.4482 cv
61.0638 47.8608 60.1653 47.8075 59.5778 48.3286 cv
59.012 48.8305 58.9389 49.6871 59.4101 50.2783 cv
62.7166 52.599 mo
62.9081 51.7545 62.9418 50.8445 62.5965 50.0347 cv
62.5955 50.0345 li
62.2827 49.3005 61.4344 48.9592 60.7004 49.2719 cv
59.9728 49.5824 59.6298 50.4205 59.9317 51.1521 cv
60.0277 51.3853 59.9411 51.7209 59.8871 51.951 cv
59.7069 52.7313 60.1933 53.5109 60.9735 53.6921 cv
61.7548 53.8725 62.5344 53.3861 62.7146 52.6059 cv
62.7166 52.599 li
61.1047 55.0753 mo
61.9331 54.4763 62.4917 53.5924 62.7166 52.599 cv
62.894 51.8173 62.4035 51.0392 61.6215 50.8628 cv
60.8428 50.6858 60.0682 51.1727 59.8871 51.951 cv
59.8145 52.2642 59.6591 52.5387 59.3975 52.7307 cv
58.7515 53.205 58.6123 54.1128 59.0868 54.7576 cv
59.5585 55.4002 60.4599 55.5416 61.1047 55.0753 cv
58.4067 55.5905 mo
59.3351 56.0459 60.332 55.634 61.1047 55.0753 cv
61.754 54.6064 61.9001 53.6996 61.4314 53.0504 cv
60.9615 52.401 60.0557 52.255 59.4063 52.7248 cv
59.3975 52.7307 li
59.201 52.8626 li
59.2013 52.8607 li
58.4089 52.7737 57.6961 53.3442 57.609 54.1366 cv
57.5422 54.741 57.8615 55.3226 58.4067 55.5905 cv
56.9744 54.0387 mo
57.3082 54.6635 57.7563 55.2707 58.4067 55.5905 cv
59.1227 55.942 59.9876 55.646 60.3379 54.9311 cv
60.6629 54.2712 60.4382 53.4719 59.8176 53.0773 cv
59.6713 52.9849 59.594 52.8327 59.5118 52.681 cv
59.1373 51.9803 58.265 51.7156 57.5642 52.0912 cv
56.8636 52.4656 56.599 53.337 56.9744 54.0387 cv
56.9744 54.0387 mo
57.3488 54.7393 58.2212 55.004 58.9219 54.6285 cv
59.6225 54.254 59.8871 53.3827 59.5128 52.6811 cv
59.5118 52.681 li
59.4205 52.4736 li
59.3882 52.3797 59.4084 52.3722 59.4261 52.2505 cv
59.5414 51.4657 58.9993 50.7355 58.2136 50.62 cv
57.4982 50.5148 56.8148 50.959 56.6211 51.6559 cv
56.3956 52.4668 56.5852 53.3109 56.9744 54.0387 cv
59.3916 52.4165 mo
59.3796 52.4623 59.1299 52.6317 59.395 52.4763 cv
60.075 52.074 60.3009 51.1977 59.8997 50.5168 cv
59.5341 49.896 58.7629 49.6442 58.1009 49.93 cv
57.3643 50.2474 56.8352 50.887 56.6211 51.6559 cv
56.4075 52.4209 56.855 53.2126 57.619 53.426 cv
58.3841 53.6386 59.1758 53.1911 59.3892 52.4271 cv
59.3916 52.4165 li
59.2492 52.5513 mo
59.3283 52.5161 59.5387 52.519 59.6494 52.5203 cv
60.1135 52.5255 60.5767 52.6015 61.0315 52.6873 cv
61.5286 52.7806 62.0073 52.4542 62.1015 51.9581 cv
62.1623 51.6343 62.0449 51.3025 61.794 51.0897 cv
60.8123 50.2574 59.4252 49.3555 58.0988 49.9307 cv
57.3736 50.2456 57.0412 51.088 57.3551 51.813 cv
57.67 52.5383 58.5123 52.8708 59.2375 52.5559 cv
59.2492 52.5513 li
.247166 0 .402258 0 cmyk
f
56.3279 56.4265 mo
58.0263 55.7027 59.6917 54.9001 61.3226 54.0345 cv
61.7469 53.8098 61.9084 53.2843 61.6828 52.8599 cv
61.4849 52.4865 61.0459 52.3099 60.6436 52.4426 cv
58.8914 53.0203 57.1609 53.6644 55.4601 54.3818 cv
54.896 54.6206 54.6315 55.2722 54.8702 55.8373 cv
55.1079 56.4023 55.7595 56.6668 56.3246 56.4281 cv
56.3279 56.4265 li
53.6673 57.4185 mo
54.5781 57.1648 55.4604 56.7966 56.3288 56.4266 cv
56.8923 56.1857 57.155 55.5329 56.9139 54.9695 cv
56.6739 54.4071 56.0243 54.144 55.4611 54.3819 cv
54.6861 54.7085 53.8961 55.0403 53.0809 55.2557 cv
52.4829 55.4136 52.1255 56.0269 52.2833 56.625 cv
52.441 57.224 53.0545 57.5804 53.6525 57.4226 cv
53.6673 57.4185 li
51.5082 57.7884 mo
52.2376 57.7313 52.9624 57.6149 53.6673 57.4185 cv
54.2633 57.2523 54.6121 56.6349 54.446 56.0387 cv
54.2823 55.4479 53.6738 55.0992 53.0809 55.2557 cv
52.5089 55.4069 51.9218 55.4946 51.3322 55.5405 cv
50.7109 55.5884 50.2468 56.1306 50.2958 56.7519 cv
50.3437 57.3732 50.8858 57.8373 51.5072 57.7883 cv
51.5082 57.7884 li
48.7762 58.748 mo
49.3302 58.4857 49.8945 58.2378 50.4757 58.0395 cv
50.8077 57.927 51.1567 57.8168 51.5082 57.7884 cv
52.1296 57.7395 52.5928 57.1963 52.5437 56.5759 cv
52.4947 55.9555 51.9524 55.4924 51.3322 55.5405 cv
50.1101 55.635 48.9128 56.1704 47.8125 56.6728 cv
47.2374 56.9344 46.9844 57.6136 47.2462 58.1878 cv
47.5087 58.7631 48.187 59.0159 48.7621 58.7542 cv
48.7762 58.748 li
45.7165 60.0738 mo
46.7652 59.7128 47.7744 59.2208 48.7762 58.748 cv
49.3473 58.4778 49.5916 57.7954 49.3214 57.2243 cv
49.0545 56.6584 48.3813 56.4134 47.8125 56.6728 cv
46.8816 57.0973 45.9426 57.5449 44.9703 57.8692 cv
44.3602 58.0729 44.0314 58.7313 44.2341 59.3411 cv
44.4377 59.9512 45.0969 60.2811 45.7059 60.0773 cv
45.7165 60.0738 li
42.0003 61.7302 mo
42.8024 61.3507 43.6073 60.9724 44.4191 60.6122 cv
44.8458 60.4223 45.2743 60.2265 45.7165 60.0738 cv
46.3242 59.8647 46.6476 59.2027 46.4385 58.5949 cv
46.231 57.9914 45.5759 57.668 44.9703 57.8692 cv
44.4624 58.0387 43.9687 58.2554 43.4774 58.4683 cv
42.6455 58.8288 41.8204 59.2065 40.997 59.5873 cv
40.403 59.8616 40.145 60.5644 40.4193 61.1584 cv
40.6938 61.7513 41.3976 62.0094 41.9906 61.7349 cv
42.0003 61.7302 li
36.5329 63.775 mo
38.4246 63.312 40.2433 62.5634 42.0003 61.7302 cv
42.5908 61.4504 42.8432 60.7449 42.5633 60.1542 cv
42.285 59.5679 41.5857 59.3143 40.997 59.5873 cv
39.3781 60.3354 37.7042 61.016 35.966 61.4302 cv
35.318 61.5846 34.9175 62.2358 35.072 62.8828 cv
35.2275 63.531 35.8776 63.9314 36.5256 63.7771 cv
36.5329 63.775 li
32.2867 65.2794 mo
33.6492 64.6434 35.0712 64.133 36.5329 63.775 cv
37.1796 63.6163 37.5753 62.9636 37.4167 62.317 cv
37.2587 61.6724 36.611 61.2763 35.966 61.4302 cv
34.3474 61.8164 32.7704 62.3724 31.2608 63.0701 cv
30.6507 63.3524 30.3839 64.0762 30.6663 64.6864 cv
30.9486 65.2965 31.6715 65.563 32.2825 65.2809 cv
32.2867 65.2794 li
28.7114 67.4299 mo
29.8068 66.5668 31.0252 65.868 32.2867 65.2794 cv
32.8962 64.995 33.1591 64.2696 32.8746 63.6602 cv
32.5909 63.053 31.8698 62.7886 31.2608 63.0701 cv
29.8252 63.7339 28.4433 64.5278 27.199 65.5058 cv
26.6673 65.9232 26.5742 66.6926 26.9917 67.2243 cv
27.4091 67.756 28.1786 67.8482 28.7103 67.4307 cv
28.7114 67.4299 li
24.7134 70.1692 mo
26.0914 69.3265 27.4422 68.4299 28.7114 67.4299 cv
29.2424 67.0113 29.3345 66.2418 28.9159 65.711 cv
28.4982 65.1812 27.7296 65.0892 27.199 65.5058 cv
26.0021 66.4455 24.7311 67.2869 23.4358 68.0817 cv
22.8589 68.4349 22.6782 69.188 23.0314 69.7649 cv
23.3846 70.3408 24.1376 70.5215 24.7134 70.1692 cv
21.4546 72.7195 mo
22.3849 71.697 23.541 70.8872 24.7134 70.1692 cv
25.2903 69.8161 25.472 69.0631 25.119 68.4862 cv
24.7667 67.9095 24.0127 67.7286 23.4369 68.0808 cv
23.4358 68.0817 li
22.0587 68.9256 20.7233 69.8989 19.6589 71.1238 cv
19.2234 71.6242 19.2767 72.3833 19.7782 72.819 cv
20.2705 73.2474 21.0152 73.2033 21.4546 72.7195 cv
16.7126 79.2901 mo
17.5833 77.9413 18.4735 76.6042 19.4144 75.3039 cv
20.0576 74.4137 20.7217 73.5324 21.4579 72.7169 cv
21.9025 72.2247 21.8634 71.4645 21.3713 71.0199 cv
20.8781 70.5752 20.1189 70.6145 19.6743 71.1066 cv
19.6614 71.1201 li
18.8573 72.0388 18.2057 73.0892 17.6091 74.1506 cv
16.8003 75.591 16.0958 77.0902 15.4339 78.604 cv
15.2736 78.9715 15.4421 79.4005 15.8094 79.5618 cv
16.1369 79.705 16.5188 79.5897 16.7126 79.2901 cv
f
57.9862 55.7699 mo
58.7184 55.4167 59.4464 55.0416 60.1193 54.584 cv
60.5802 54.2703 61.0795 53.893 61.3266 53.3774 cv
61.5197 52.9738 61.3483 52.4889 60.9446 52.2957 cv
60.6655 52.1619 60.3339 52.1999 60.0913 52.3924 cv
59.8063 52.6168 59.4644 52.7814 59.1435 52.9478 cv
58.4792 53.2916 57.7992 53.6074 57.118 53.9167 cv
56.604 54.15 56.3765 54.7569 56.6096 55.2718 cv
56.8438 55.786 57.4507 56.0135 57.9647 55.7803 cv
57.9862 55.7699 li
54.2334 57.2724 mo
55.5144 56.8458 56.7805 56.3626 57.9927 55.7668 cv
57.9937 55.7669 li
58.5007 55.5177 58.71 54.9033 58.4597 54.3962 cv
58.2177 53.9032 57.6283 53.6892 57.1255 53.9136 cv
55.9681 54.429 54.7734 54.8587 53.5686 55.2489 cv
53.0088 55.4298 52.7025 56.0306 52.8835 56.5903 cv
53.0653 57.1501 53.6662 57.4565 54.2249 57.2754 cv
54.2334 57.2724 li
49.4755 59.2181 mo
51.0277 58.4947 52.6077 57.8141 54.2334 57.2724 cv
54.7917 57.0863 55.0932 56.4839 54.9081 55.9256 cv
54.7225 55.3704 54.1253 55.0685 53.5686 55.2489 cv
51.863 55.8013 50.2006 56.4874 48.5638 57.2181 cv
48.0096 57.4653 47.7616 58.1149 48.0087 58.6691 cv
48.2559 59.2232 48.9054 59.4723 49.4594 59.2251 cv
49.4746 59.218 li
49.4755 59.2181 li
45.0364 60.5847 mo
45.6946 60.602 46.352 60.4297 46.9736 60.2305 cv
47.8308 59.9549 48.6604 59.597 49.4755 59.2181 cv
49.4746 59.218 li
50.0248 58.9622 50.2642 58.3086 50.0076 57.7582 cv
49.755 57.2143 49.1125 56.9733 48.5638 57.2181 cv
47.831 57.545 47.0831 57.8561 46.3125 58.0844 cv
45.9457 58.1923 45.5331 58.3196 45.1451 58.2939 cv
44.5127 58.2496 43.965 58.7276 43.9219 59.3592 cv
43.8786 59.9918 44.3555 60.5394 44.9882 60.5826 cv
45.0364 60.5847 li
42.9487 60.847 mo
43.6292 60.6685 44.332 60.5665 45.0364 60.5847 cv
45.6695 60.6008 46.1967 60.1012 46.2128 59.468 cv
46.2295 58.8531 45.7579 58.3356 45.1451 58.2939 cv
44.2076 58.2294 43.2648 58.3409 42.3561 58.5766 cv
41.7293 58.7388 41.3532 59.3799 41.5154 60.0068 cv
41.6785 60.6338 42.3187 61.0098 42.9456 60.8476 cv
42.9488 60.846 li
42.9487 60.847 li
40.7878 61.248 mo
41.5186 61.2101 42.2434 61.0313 42.9487 60.847 cv
42.9488 60.846 li
43.5748 60.6827 43.9499 60.0413 43.7858 59.4142 cv
43.6213 58.7891 42.982 58.4143 42.3561 58.5766 cv
41.8303 58.7135 41.2712 58.8663 40.7235 58.8673 cv
40.0659 58.8692 39.5332 59.4035 39.5352 60.0611 cv
39.5362 60.7186 40.0704 61.2513 40.7281 61.2494 cv
40.7878 61.248 li
38.4373 61.0227 mo
39.2076 61.1552 40.004 61.2891 40.7878 61.248 cv
41.4445 61.2137 41.9492 60.6536 41.9159 59.997 cv
41.8827 59.3625 41.3579 58.8664 40.7235 58.8673 cv
40.1063 58.8684 39.4794 58.7341 38.8762 58.618 cv
38.2132 58.4902 37.5724 58.9239 37.4447 59.5869 cv
37.3158 60.2499 37.7504 60.8907 38.4126 61.0185 cv
38.4372 61.0236 li
38.4373 61.0227 li
36.261 60.7128 mo
36.9902 60.7806 37.716 60.8994 38.4373 61.0227 cv
38.4372 61.0236 li
39.103 61.1376 39.7353 60.6908 39.8493 60.025 cv
39.9622 59.369 39.5295 58.7436 38.8762 58.618 cv
38.0902 58.4663 37.298 58.3238 36.5008 58.2422 cv
35.819 58.1735 35.2105 58.6697 35.1419 59.3515 cv
35.0721 60.0332 35.5694 60.6418 36.2511 60.7116 cv
36.261 60.7128 li
34.7613 60.7625 mo
35.2566 60.6902 35.7609 60.6655 36.261 60.7128 cv
36.9426 60.7755 37.5476 60.2748 37.6114 59.5923 cv
37.6746 58.9138 37.1786 58.3115 36.5008 58.2422 cv
35.8071 58.1719 35.1044 58.1953 34.4137 58.2888 cv
33.7303 58.3812 33.251 59.01 33.3433 59.6934 cv
33.4356 60.3778 34.0645 60.8572 34.7479 60.7648 cv
34.7613 60.7625 li
32.8741 61.2149 mo
33.491 61.0202 34.1201 60.8563 34.7613 60.7625 cv
35.4437 60.663 35.9165 60.0292 35.817 59.3469 cv
35.7179 58.6686 35.0921 58.1968 34.4137 58.2888 cv
33.6411 58.3928 32.8804 58.5761 32.1339 58.7985 cv
31.465 58.9976 31.0839 59.7007 31.283 60.3696 cv
31.4822 61.0385 32.1852 61.4195 32.8542 61.2204 cv
32.8741 61.2149 li
30.0614 61.5471 mo
31.0108 61.613 31.9671 61.5003 32.8741 61.2149 cv
33.5393 61.0052 33.9092 60.2947 33.6995 59.6294 cv
33.4919 58.9716 32.7946 58.6013 32.1339 58.7985 cv
31.5309 58.9778 30.898 59.0384 30.2715 58.9788 cv
29.5632 58.9127 28.9355 59.4327 28.8684 60.141 cv
28.8014 60.8492 29.3224 61.477 30.0306 61.544 cv
30.0616 61.546 li
30.0614 61.5471 li
27.5205 61.1408 mo
28.352 61.355 29.205 61.487 30.0614 61.5471 cv
30.0616 61.546 li
30.771 61.5961 31.3866 61.0605 31.4356 60.3509 cv
31.4843 59.6534 30.9679 59.0444 30.2715 58.9788 cv
29.5752 58.9132 28.8834 58.7888 28.2104 58.5972 cv
27.5102 58.397 26.7805 58.802 26.5804 59.5022 cv
26.3801 60.2024 26.7852 60.9321 27.4854 61.1322 cv
27.5204 61.1418 li
27.5205 61.1408 li
25.7035 61.0951 mo
26.3056 60.9923 26.9272 60.9888 27.5205 61.1408 cv
27.5204 61.1418 li
28.2251 61.3224 28.9445 60.8969 29.1251 60.1922 cv
29.302 59.5002 28.8971 58.7926 28.2104 58.5972 cv
27.2565 58.324 26.2493 58.2929 25.2718 58.4452 cv
24.5391 58.5595 24.0383 59.2461 24.1525 59.9787 cv
24.2669 60.7104 24.9534 61.2122 25.685 61.0978 cv
25.7035 61.0951 li
22.9223 62.0676 mo
23.8061 61.6572 24.7366 61.2589 25.7035 61.0951 cv
26.4344 60.9706 26.9261 60.2778 26.8025 59.547 cv
26.6791 58.8222 25.9972 58.332 25.2718 58.4452 cv
24.0596 58.6337 22.894 59.0955 21.7848 59.6049 cv
21.1035 59.9164 20.805 60.7218 21.1164 61.4032 cv
21.4291 62.0837 22.2343 62.3832 22.9149 62.0706 cv
22.9223 62.0676 li
20.6694 63.1504 mo
21.3985 62.7514 22.1684 62.418 22.9223 62.0676 cv
23.6013 61.7518 23.8959 60.9448 23.5801 60.2659 cv
23.265 59.589 22.4633 59.2931 21.7848 59.6049 cv
20.9738 59.9762 20.1464 60.3324 19.3632 60.7607 cv
18.7027 61.1213 18.46 61.9481 18.8215 62.6086 cv
19.1821 63.2682 20.0099 63.5111 20.6694 63.1504 cv
19.7402 64.1478 mo
19.9528 63.8838 20.1701 63.6214 20.4098 63.3811 cv
20.6694 63.1504 li
21.3289 62.7897 21.5718 61.962 21.2111 61.3025 cv
20.8506 60.642 20.0229 60.3992 19.3633 60.7598 cv
19.3632 60.7607 li
18.6463 61.1524 18.1057 61.8571 17.6212 62.4953 cv
17.1728 63.0868 17.2881 63.9295 17.8795 64.3788 cv
18.46 64.8186 19.2849 64.7162 19.7402 64.1478 cv
17.0736 67.4156 mo
17.978 66.3364 18.8686 65.2463 19.7439 64.1432 cv
20.206 63.5626 20.1082 62.7171 19.5275 62.2551 cv
18.9457 61.7939 18.1003 61.8916 17.6393 62.4724 cv
17.6248 62.4907 li
16.6718 63.7351 16.0027 65.1875 15.6594 66.7161 cv
15.5618 67.1532 15.8363 67.5878 16.2736 67.6855 cv
16.5705 67.7521 16.8784 67.6476 17.0736 67.4156 cv
f
57.9982 55.9277 mo
59.3609 55.3291 60.73 54.7433 62.1167 54.2012 cv
62.4979 54.0517 62.6866 53.6203 62.5371 53.2391 cv
62.4106 52.9142 62.0745 52.7216 61.7298 52.776 cv
60.1766 53.0215 58.673 53.5556 57.2354 54.179 cv
57.2345 54.1789 li
56.7516 54.3888 56.5289 54.951 56.739 55.4338 cv
56.9488 55.9175 57.5101 56.1392 57.9938 55.9302 cv
57.9982 55.9277 li
53.7462 57.6805 mo
55.1808 57.1415 56.5948 56.5444 57.9982 55.9277 cv
58.4803 55.7157 58.6989 55.153 58.4879 54.6711 cv
58.2766 54.1902 57.716 53.9706 57.2345 54.1789 cv
55.8663 54.7727 54.4843 55.3408 53.0758 55.8336 cv
52.5637 56.0126 52.2938 56.5727 52.4728 57.0849 cv
52.6528 57.598 53.213 57.8669 53.725 57.6879 cv
53.7462 57.6805 li
50.4282 59.0707 mo
51.5141 58.5624 52.6231 58.1024 53.7462 57.6805 cv
54.2547 57.49 54.5112 56.9232 54.3207 56.4146 cv
54.132 55.9153 53.5796 55.6566 53.0758 55.8336 cv
51.889 56.2484 50.7188 56.7146 49.5768 57.2438 cv
49.0719 57.4772 48.8523 58.0771 49.0866 58.5821 cv
49.32 59.0872 49.9199 59.3067 50.4249 59.0723 cv
50.4282 59.0707 li
47.5647 60.2674 mo
48.5405 59.9244 49.4914 59.5095 50.4282 59.0707 cv
50.9324 58.8352 51.15 58.2351 50.9135 57.7308 cv
50.6779 57.2275 50.0808 57.0104 49.5768 57.2438 cv
48.6986 57.65 47.8088 58.0373 46.8955 58.3572 cv
46.3676 58.5412 46.0894 59.1184 46.2745 59.6464 cv
46.4585 60.1743 47.0358 60.4523 47.5638 60.2673 cv
47.5647 60.2674 li
44.9156 61.3809 mo
45.782 60.9723 46.6607 60.5845 47.5647 60.2674 cv
48.0916 60.0823 48.3698 59.5051 48.1848 58.9771 cv
47.9996 58.4501 47.4222 58.173 46.8955 58.3572 cv
45.9283 58.6953 44.9838 59.0998 44.0525 59.5273 cv
43.5402 59.7627 43.3148 60.3698 43.55 60.8832 cv
43.7853 61.3965 44.3915 61.6218 44.9049 61.3856 cv
44.9156 61.3809 li
42.5951 63.1124 mo
43.2382 62.3785 44.0352 61.7967 44.9156 61.3809 cv
45.4265 61.1402 45.6442 60.531 45.4036 60.0201 cv
45.1644 59.5133 44.5625 59.2936 44.0525 59.5273 cv
42.909 60.0524 41.8737 60.8012 41.0411 61.7465 cv
40.6631 62.1757 40.7048 62.8294 41.1332 63.2062 cv
41.5623 63.5842 42.216 63.5434 42.5929 63.1142 cv
42.5951 63.1124 li
40.6404 65.2853 mo
41.305 64.5724 41.9532 63.8454 42.5951 63.1124 cv
42.9713 62.682 42.9284 62.0292 42.4991 61.6521 cv
42.0696 61.2771 41.4177 61.3191 41.0411 61.7465 cv
40.4174 62.4546 39.7819 63.153 39.1186 63.8247 cv
38.7093 64.2389 38.713 64.9068 39.127 65.316 cv
39.5421 65.7254 40.2091 65.7208 40.6185 65.3067 cv
40.6404 65.2853 li
38.9277 67.3624 mo
39.4649 66.6441 40.0275 65.9413 40.6404 65.2853 cv
41.0371 64.8585 41.0143 64.1912 40.5875 63.7943 cv
40.1709 63.4048 39.5198 63.4187 39.1186 63.8247 cv
38.4264 64.525 37.7987 65.288 37.2081 66.0759 cv
36.8525 66.5504 36.9482 67.2231 37.4227 67.5788 cv
37.898 67.9354 38.5708 67.8387 38.9265 67.3643 cv
38.9277 67.3624 li
36.4255 70.958 mo
37.2373 69.7448 38.054 68.5323 38.9277 67.3624 cv
39.2832 66.888 39.1856 66.2149 38.7101 65.8592 cv
38.2354 65.5056 37.5637 65.6015 37.2081 66.0759 cv
36.3095 67.2738 35.4706 68.5178 34.6378 69.7615 cv
34.6388 69.7617 li
34.308 70.2554 34.4406 70.9228 34.9344 71.2537 cv
35.4274 71.5835 36.0958 71.4508 36.4255 70.958 cv
33.3818 75.2732 mo
34.4385 73.8647 35.4464 72.4207 36.4255 70.958 cv
36.7563 70.4642 36.6237 69.7957 36.1298 69.466 cv
35.6371 69.1351 34.9686 69.2678 34.6388 69.7617 cv
33.6809 71.193 32.6952 72.6055 31.6618 73.9817 cv
31.3051 74.457 31.4017 75.1309 31.876 75.4874 cv
32.3513 75.8442 33.025 75.7485 33.3818 75.2732 cv
29.2396 80.312 mo
30.7131 78.7122 32.0766 77.0126 33.3818 75.2732 cv
33.7384 74.7979 33.6429 74.1242 33.1675 73.7674 cv
32.6922 73.4108 32.0184 73.5073 31.6618 73.9817 cv
30.3445 75.7377 29.1194 77.5761 28.1208 79.5346 cv
27.9482 79.8722 28.0833 80.2869 28.421 80.4595 cv
28.6964 80.5988 29.0308 80.5391 29.2396 80.312 cv
f
34.4227 72.9845 mo
35.0808 73.3305 35.7227 73.7086 36.3286 74.1396 cv
36.6732 74.3837 37.1493 74.3039 37.3933 73.9603 cv
37.568 73.7156 37.5825 73.3918 37.4313 73.1334 cv
36.9516 72.3103 36.2141 71.6647 35.3884 71.2023 cv
35.3894 71.2025 li
34.9003 70.9297 34.283 71.1032 34.0093 71.5922 cv
33.7366 72.0804 33.9101 72.6976 34.3991 72.9714 cv
34.4227 72.9845 li
cp
32.7936 72.2704 mo
33.3627 72.4314 33.9024 72.7107 34.4227 72.9845 cv
34.9184 73.245 35.5309 73.0537 35.7914 72.558 cv
36.0466 72.0726 35.868 71.4709 35.3894 71.2025 cv
34.7527 70.8461 34.095 70.4972 33.3979 70.2732 cv
32.849 70.0966 32.2616 70.3979 32.0851 70.9459 cv
31.9085 71.4948 32.2097 72.0832 32.7577 72.2597 cv
32.7936 72.2704 li
cp
31.2352 72.4001 mo
31.5778 72.3233 31.9259 72.2593 32.2762 72.24 cv
32.4448 72.2304 32.6292 72.2239 32.7936 72.2704 cv
33.348 72.4275 33.925 72.1046 34.0822 71.5502 cv
34.2345 71.0102 33.9323 70.4449 33.3979 70.2732 cv
32.5606 70.003 31.6217 70.1451 30.7807 70.326 cv
30.2081 70.4498 29.843 71.0138 29.9667 71.5873 cv
30.0895 72.1597 30.6545 72.5249 31.228 72.4012 cv
31.2352 72.4001 li
cp
28.2401 72.6856 mo
29.2458 72.7214 30.2532 72.6184 31.2352 72.4001 cv
31.8073 72.2722 32.1676 71.7057 32.0399 71.1326 cv
31.9135 70.5638 31.3511 70.2029 30.7807 70.326 cv
29.9873 70.497 29.1719 70.5653 28.362 70.5043 cv
27.7599 70.4589 27.235 70.9095 27.1896 71.5116 cv
27.1444 72.1128 27.596 72.6378 28.1971 72.683 cv
28.2401 72.6856 li
cp
26.3763 72.893 mo
26.9709 72.6924 27.6178 72.6638 28.2401 72.6856 cv
28.8432 72.7079 29.3497 72.2357 29.372 71.6327 cv
29.3932 71.0465 28.9472 70.5484 28.362 70.5043 cv
27.4603 70.4364 26.5315 70.477 25.6661 70.7607 cv
25.666 70.7617 li
25.0765 70.9549 24.7557 71.5891 24.9489 72.1786 cv
25.1432 72.7683 25.7773 73.089 26.3669 72.8958 cv
26.3763 72.893 li
cp
23.689 74.0368 mo
24.5678 73.6258 25.455 73.2037 26.3763 72.893 cv
26.9645 72.6945 27.2797 72.0566 27.0811 71.4694 cv
26.8842 70.8854 26.2524 70.5691 25.666 70.7617 cv
24.6595 71.0917 23.6913 71.5476 22.734 71.9969 cv
22.733 71.9968 li
22.1706 72.2611 21.9279 72.9315 22.192 73.4949 cv
22.4563 74.0573 23.1258 74.2999 23.689 74.0368 cv
cp
20.4533 75.4698 mo
21.5453 75.0238 22.6204 74.5363 23.689 74.0368 cv
24.2523 73.7737 24.495 73.1032 24.2319 72.5399 cv
23.9689 71.9756 23.2984 71.7329 22.7351 71.9961 cv
22.733 71.9968 li
21.6963 72.4832 20.6548 72.96 19.5986 73.4026 cv
19.0293 73.6418 18.7604 74.2968 18.9995 74.866 cv
19.2361 75.4319 19.885 75.7011 20.4533 75.4698 cv
cp
17.5989 76.2362 mo
18.5797 76.1126 19.5381 75.8429 20.4533 75.4698 cv
21.0247 75.237 21.2995 74.5838 21.0667 74.0123 cv
20.8329 73.4397 20.1807 73.1651 19.6091 73.3989 cv
19.5986 73.4026 li
18.8759 73.7057 18.1138 73.923 17.3333 74.0099 cv
16.7185 74.0789 16.276 74.6329 16.3438 75.2486 cv
16.4128 75.8635 16.9676 76.307 17.5825 76.2381 cv
17.5989 76.2362 li
cp
15.1906 76.7253 mo
15.9802 76.5054 16.785 76.339 17.5989 76.2362 cv
18.2128 76.159 18.6481 75.5981 18.5699 74.9841 cv
18.493 74.3762 17.943 73.9424 17.3333 74.0099 cv
16.4095 74.1137 15.4933 74.291 14.5945 74.5291 cv
13.9868 74.6907 13.6252 75.3136 13.7869 75.9212 cv
13.9476 76.5277 14.5705 76.8893 15.1782 76.7277 cv
15.1906 76.7253 li
cp
11.8345 78.0591 mo
12.9211 77.5529 14.0321 77.0458 15.1906 76.7253 cv
15.795 76.5572 16.1501 75.9304 15.9821 75.325 cv
15.8156 74.7238 15.1968 74.3698 14.5945 74.5291 cv
13.3072 74.8713 12.0728 75.421 10.8683 75.9806 cv
10.2946 76.2464 10.0444 76.928 10.3113 77.5018 cv
10.578 78.0766 11.2597 78.3258 11.8335 78.059 cv
11.8345 78.0591 li
cp
8.8914 79.4745 mo
9.85327 78.9663 10.8488 78.5179 11.8345 78.0591 cv
12.4084 77.7913 12.6565 77.1104 12.3897 76.5366 cv
12.1229 75.9628 11.4422 75.7137 10.8683 75.9806 cv
9.83563 76.4594 8.78339 76.9258 7.79721 77.4973 cv
7.2567 77.8108 7.07281 78.502 7.38528 79.0424 cv
7.68964 79.5676 8.35472 79.7582 8.8914 79.4745 cv
cp
4.33034 83.6092 mo
5.32147 82.6158 6.32202 81.6276 7.36641 80.6905 cv
7.83951 80.2665 8.33246 79.7744 8.89786 79.4713 cv
9.44711 79.1761 9.65428 78.4919 9.35921 77.9417 cv
9.06413 77.3914 8.38 77.1843 7.82977 77.4794 cv
7.80267 77.494 li
7.0603 77.9186 6.46642 78.6305 5.91707 79.2705 cv
4.9754 80.3651 4.10716 81.5236 3.25439 82.6871 cv
3.02197 83.004 3.09071 83.4484 3.40761 83.6808 cv
3.69048 83.8877 4.08255 83.8576 4.33034 83.6092 cv
cp
f
39.6877 60.4777 mo
40.5069 61.3738 41.2654 62.3256 41.9954 63.2949 cv
42.2563 63.6411 42.7485 63.7106 43.0957 63.4498 cv
43.4061 63.2156 43.4986 62.7879 43.3117 62.4462 cv
42.6867 61.3039 41.9861 60.1922 41.1445 59.1964 cv
40.7979 58.7878 40.1864 58.7362 39.7768 59.0826 cv
39.3682 59.4283 39.3165 60.0407 39.6631 60.4493 cv
39.6877 60.4777 li
cp
37.9544 58.765 mo
38.5514 59.3199 39.1376 59.8875 39.6939 60.4846 cv
40.0588 60.8764 40.673 60.8981 41.0649 60.5332 cv
41.4408 60.1824 41.4787 59.5995 41.1496 59.2032 cv
40.5973 58.5371 40.0076 57.9025 39.4039 57.2822 cv
39.4041 57.2812 li
39.0042 56.8707 38.348 56.8618 37.9365 57.2614 cv
37.526 57.6612 37.5181 58.3176 37.9169 58.7279 cv
37.9544 58.765 li
cp
36.1786 57.3988 mo
36.8248 57.7745 37.4079 58.257 37.9544 58.765 cv
38.374 59.1549 39.0305 59.1306 39.4204 58.711 cv
39.7963 58.3058 39.7895 57.6778 39.4041 57.2812 cv
38.7664 56.6273 38.0742 56.0138 37.2942 55.5331 cv
36.7832 55.2192 36.1134 55.3779 35.7995 55.8889 cv
35.4845 56.4008 35.6432 57.0696 36.1552 57.3847 cv
36.1786 57.3988 li
cp
34.0476 56.628 mo
34.7786 56.7999 35.5247 57.0191 36.1786 57.3988 cv
36.6972 57.7006 37.3622 57.5242 37.664 57.0055 cv
37.9607 56.4952 37.7958 55.8428 37.2942 55.5331 cv
36.4628 55.0216 35.5209 54.7026 34.58 54.4613 cv
33.9836 54.3088 33.3757 54.668 33.2222 55.2643 cv
33.0696 55.8617 33.4288 56.4696 34.0262 56.6222 cv
34.0476 56.628 li
cp
31.1354 55.3088 mo
31.9845 55.9729 33.0046 56.3816 34.0476 56.628 cv
34.6475 56.7689 35.2479 56.3976 35.3888 55.7977 cv
35.5285 55.2067 35.1685 54.6128 34.58 54.4613 cv
33.8567 54.2763 33.1357 53.9958 32.5471 53.5247 cv
32.0573 53.1319 31.3413 53.211 30.9483 53.7018 cv
30.5553 54.1925 30.6345 54.9085 31.1254 55.3005 cv
31.1354 55.3088 li
cp
28.4545 52.8519 mo
29.3103 53.7064 30.181 54.5627 31.1354 55.3088 cv
31.6299 55.6963 32.3449 55.6089 32.7325 55.1134 cv
33.1164 54.6225 33.0343 53.9142 32.5471 53.5247 cv
31.6716 52.823 30.8723 52.0233 30.0824 51.2288 cv
29.6354 50.7779 28.9068 50.7747 28.4568 51.2229 cv
28.006 51.6699 28.0028 52.3985 28.4509 52.8484 cv
28.4545 52.8519 li
cp
25.7428 50.392 mo
26.7035 51.144 27.5916 51.9905 28.4545 52.8519 cv
28.9038 53.3011 29.6319 53.3001 30.08 52.8507 cv
30.528 52.4023 30.5287 51.6775 30.0824 51.2288 cv
29.1623 50.3025 28.2199 49.3925 27.2128 48.562 cv
26.7126 48.1486 25.9723 48.2206 25.5599 48.7209 cv
25.1466 49.2212 25.2185 49.9615 25.7189 50.3738 cv
25.7428 50.392 li
cp
23.9719 49.2291 mo
24.6118 49.5213 25.1904 49.9609 25.7428 50.392 cv
26.2529 50.7915 26.9913 50.7022 27.39 50.191 cv
27.7824 49.6891 27.7042 48.9661 27.2128 48.562 cv
26.5237 47.9942 25.7978 47.4388 24.9895 47.0533 cv
24.3901 46.7674 23.6738 47.0209 23.388 47.6192 cv
23.1021 48.2176 23.3555 48.9349 23.9538 49.2207 cv
23.9719 49.2291 li
cp
22.5075 48.8881 mo
23.008 48.9243 23.5131 49.0187 23.9719 49.2291 cv
24.5757 49.5045 25.2874 49.2394 25.5638 48.6358 cv
25.8363 48.0397 25.5803 47.3352 24.9895 47.0533 cv
24.2686 46.7083 23.4764 46.5346 22.6831 46.4778 cv
22.0169 46.4292 21.4382 46.9293 21.3897 47.5945 cv
21.3411 48.2608 21.8423 48.8396 22.5075 48.8881 cv
cp
19.972 49.3315 mo
20.7747 48.9863 21.6346 48.8239 22.5075 48.8881 cv
23.1729 48.9355 23.7516 48.4354 23.8 47.7701 cv
23.8485 47.1049 23.3485 46.5252 22.6831 46.4778 cv
21.2577 46.3737 19.9129 47.021 19.0506 48.149 cv
18.791 48.4896 18.8553 48.9758 19.1959 49.2355 cv
19.418 49.4053 19.7147 49.4425 19.972 49.3315 cv
cp
f
22.4947 58.3307 mo
22.8596 58.4252 23.2473 58.5467 23.5535 58.7758 cv
23.6934 58.8795 23.8064 59.012 23.8424 59.1861 cv
23.9247 59.5879 24.3188 59.8474 24.7206 59.7651 cv
25.0654 59.6946 25.313 59.3928 25.316 59.0413 cv
25.3195 58.4509 25.0583 57.904 24.6355 57.4996 cv
24.1779 57.0605 23.5781 56.7936 22.9785 56.6115 cv
22.5058 56.4689 22.0076 56.7364 21.8651 57.208 cv
21.7216 57.6795 21.989 58.1788 22.4606 58.3213 cv
22.4947 58.3307 li
cp
19.8328 57.8232 mo
20.7294 57.9539 21.6235 58.1125 22.5025 58.3328 cv
22.9811 58.4529 23.4663 58.1616 23.5855 57.6829 cv
23.7011 57.2239 23.4379 56.7554 22.9862 56.6145 cv
22.051 56.3215 21.0892 56.1169 20.1237 55.9571 cv
19.6096 55.8707 19.1231 56.2183 19.0376 56.7336 cv
18.9521 57.2479 19.2997 57.7343 19.814 57.8198 cv
19.8328 57.8232 li
cp
17.8273 57.8158 mo
18.4612 57.6303 19.1935 57.7297 19.8328 57.8232 cv
20.3485 57.8978 20.8281 57.5402 20.9037 57.0246 cv
20.9773 56.5158 20.6312 56.0407 20.1237 55.9571 cv
19.2039 55.8033 18.2095 55.7033 17.2976 55.9568 cv
16.783 56.1002 16.4824 56.6331 16.625 57.1465 cv
16.7683 57.6611 17.3003 57.9616 17.8147 57.8192 cv
17.8273 57.8158 li
cp
16.3802 58.3572 mo
16.847 58.1381 17.3327 57.9607 17.8273 57.8158 cv
18.3396 57.666 18.6337 57.1292 18.4839 56.6169 cv
18.3356 56.1097 17.8068 55.8157 17.2976 55.9568 cv
16.7005 56.1228 16.1158 56.3328 15.5548 56.5942 cv
15.0677 56.8218 14.856 57.4005 15.0834 57.8885 cv
15.311 58.3756 15.8898 58.5864 16.3769 58.3588 cv
16.3802 58.3572 li
cp
15.1033 59.4237 mo
15.4662 59.0178 15.8799 58.5932 16.3802 58.3572 cv
16.8664 58.1285 17.0751 57.5494 16.8466 57.0622 cv
16.6187 56.5771 16.0408 56.3675 15.5548 56.5942 cv
14.8146 56.9394 14.1936 57.5097 13.6478 58.1068 cv
13.2817 58.5063 13.3094 59.1279 13.709 59.493 cv
14.1095 59.8592 14.73 59.8323 15.0962 59.4319 cv
15.1033 59.4237 li
cp
13.8417 61.1858 mo
14.188 60.5489 14.6214 59.9635 15.1033 59.4237 cv
15.465 59.0196 15.431 58.3992 15.0259 58.0374 cv
14.6256 57.6783 14.0105 57.7099 13.6478 58.1068 cv
13.054 58.7552 12.525 59.4644 12.1028 60.2367 cv
11.8403 60.7161 12.0159 61.3175 12.4961 61.5811 cv
12.9755 61.8435 13.577 61.6669 13.8394 61.1876 cv
13.8417 61.1858 li
cp
12.2874 63.3488 mo
12.8818 62.6874 13.4152 61.9677 13.8417 61.1858 cv
14.1023 60.7052 13.9247 60.1036 13.4442 59.842 cv
12.9656 59.5817 12.3652 59.7574 12.1028 60.2367 cv
11.7493 60.8828 11.3027 61.4766 10.8116 62.0243 cv
10.4465 62.432 10.4805 63.0595 10.8882 63.4246 cv
11.2949 63.7896 11.9223 63.7565 12.2874 63.3488 cv
cp
9.6115 67.0713 mo
10.1354 66.2767 10.6677 65.4873 11.224 64.7151 cv
11.5605 64.2473 11.9023 63.7781 12.2874 63.3488 cv
12.6535 62.9413 12.6193 62.3148 12.2118 61.9487 cv
11.8042 61.5826 11.1777 61.6168 10.8116 62.0243 cv
10.3794 62.507 9.99321 63.0309 9.61497 63.5559 cv
9.04272 64.3502 8.49632 65.1631 7.95648 65.9797 cv
7.95747 65.9799 li
7.65555 66.437 7.78107 67.0511 8.2382 67.353 cv
8.69548 67.6539 9.30957 67.5284 9.6115 67.0713 cv
cp
6.66069 71.2291 mo
7.741 69.9195 8.67802 68.4855 9.6115 67.0713 cv
9.91342 66.6141 9.78691 65.9999 9.32976 65.698 cv
8.87347 65.3972 8.25841 65.5226 7.95747 65.9799 cv
7.05156 67.3523 6.14761 68.733 5.1613 70.0487 cv
4.84575 70.4709 4.93102 71.0687 5.353 71.3852 cv
5.76041 71.6898 6.33681 71.6219 6.66069 71.2291 cv
cp
2.82396 74.696 mo
4.25423 73.7219 5.57259 72.568 6.66556 71.2227 cv
6.99756 70.8138 6.93587 70.213 6.52696 69.881 cv
6.11818 69.548 5.51724 69.6107 5.18423 70.0194 cv
5.16603 70.0433 li
4.17195 71.3489 3.14214 72.6267 2.08955 73.8855 cv
1.89404 74.1194 1.92484 74.4672 2.15875 74.6627 cv
2.34804 74.8212 2.61951 74.835 2.82396 74.696 cv
cp
f
62.1736 69.6516 mo
62.172 69.6516 62.1704 69.6516 62.1688 69.6516 cv
62.1474 69.3806 62.1244 69.1098 62.1008 68.8391 cv
62.1008 68.8391 li
62.0524 68.2892 62.0153 67.7379 61.9917 67.186 cv
62.1242 67.5976 62.2742 68.0037 62.4429 68.402 cv
62.4429 68.402 li
62.6186 68.8162 62.8036 69.2262 62.9984 69.6313 cv
62.7249 69.6448 62.4496 69.6516 62.1736 69.6516 cv
60.1132 69.5255 mo
59.9793 69.509 59.8445 69.4909 59.7104 69.4713 cv
58.7672 69.333 57.8534 69.1189 56.9752 68.8363 cv
57.0892 68.7133 57.2082 68.5958 57.3337 68.4861 cv
57.3337 68.4861 li
57.7015 68.1635 58.13 67.9107 58.5627 67.6843 cv
58.5683 67.6815 58.5739 67.6787 58.5795 67.6758 cv
58.5796 67.6755 li
58.5799 67.6753 58.5803 67.6751 58.5806 67.6749 cv
58.5914 67.6694 58.602 67.6636 58.6124 67.6577 cv
59.0145 67.4477 59.4066 67.2162 59.7791 66.9565 cv
59.944 67.7542 60.0604 68.5628 60.1051 69.3773 cv
60.1054 69.3829 60.1057 69.3884 60.1062 69.394 cv
60.1086 69.4378 60.1109 69.4816 60.1132 69.5255 cv
65.1329 69.388 mo
64.8271 68.817 64.5466 68.233 64.2887 67.6395 cv
64.2864 67.6338 64.2841 67.6282 64.2817 67.6226 cv
64.2785 67.6161 li
63.9689 66.9001 63.727 66.1562 63.5432 65.399 cv
63.5423 65.3948 63.5414 65.3907 63.5404 65.3865 cv
63.5371 65.374 li
63.3051 64.4124 63.3436 63.3859 63.4323 62.4083 cv
63.4323 62.4083 li
63.5417 61.2003 63.843 60.0131 64.3405 58.9066 cv
64.5072 58.5359 64.3416 58.1002 63.9709 57.9334 cv
63.8734 57.8894 63.7707 57.8683 63.6693 57.8683 cv
63.4257 57.8683 63.1895 57.9897 63.0505 58.206 cv
62.9734 58.3258 62.8991 58.4472 62.8276 58.5701 cv
62.72 58.4893 62.5948 58.4313 62.4537 58.4046 cv
62.3968 58.3938 62.3402 58.3887 62.2842 58.3887 cv
62.0274 58.3887 61.7842 58.4969 61.5858 58.6616 cv
61.6185 58.0137 61.6417 57.3655 61.6495 56.7173 cv
62.1872 56.5177 62.6859 56.2165 63.1231 55.8374 cv
63.126 55.835 63.1288 55.8326 63.1316 55.8302 cv
63.1385 55.8241 li
63.1385 55.8241 li
63.1385 55.8241 li
63.5715 55.4461 63.9002 54.9835 64.1111 54.4705 cv
64.0954 54.6001 64.1133 54.7353 64.1699 54.8632 cv
64.2456 55.0332 64.3795 55.1646 64.5414 55.2389 cv
64.6236 55.3266 li
64.7693 55.417 li
64.8584 55.458 64.9543 55.4781 65.0503 55.4781 cv
65.1079 55.4781 65.1656 55.4709 65.2218 55.4565 cv
65.223 55.4564 li
65.3251 55.4304 65.4281 55.4078 65.5311 55.3853 cv
65.6887 55.4351 65.8402 55.5064 65.9846 55.5961 cv
65.9878 55.5982 65.9911 55.6004 65.9945 55.6026 cv
65.9966 55.6039 65.9988 55.6053 66.0009 55.6067 cv
66.0009 55.6073 li
66.0087 55.6123 66.0166 55.6171 66.0245 55.6218 cv
66.5348 55.9452 67.1196 56.1411 67.7032 56.2846 cv
67.7032 56.2846 li
68.4363 56.4638 69.1495 56.7271 69.8512 57.0011 cv
69.8512 57.0011 li
70.7804 57.3638 71.7539 57.6265 72.749 57.7215 cv
72.749 57.7215 li
73.6245 57.8041 74.4932 57.9484 75.3546 58.126 cv
75.3546 58.126 li
76.2244 58.3057 77.1029 58.4429 77.9864 58.5334 cv
77.3748 60.2331 76.5027 61.7935 75.4243 63.173 cv
74.9421 62.7281 74.5194 62.2132 74.1079 61.7058 cv
74.1079 61.7058 li
73.5277 60.9897 72.9056 60.3015 72.2058 59.7002 cv
72.2058 59.7002 li
71.7455 59.3051 71.2963 58.8953 70.8803 58.4534 cv
70.8803 58.4534 li
70.3837 57.9256 69.7954 57.4909 69.1763 57.1165 cv
69.1763 57.1165 li
68.6235 56.7831 67.9849 56.4316 67.323 56.4142 cv
67.3206 56.4141 67.3182 56.414 67.3158 56.414 cv
67.1583 56.4095 67.0006 56.4059 66.842 56.4023 cv
66.8329 56.402 66.8239 56.4018 66.8148 56.4018 cv
66.8084 56.4018 66.802 56.4019 66.7955 56.402 cv
66.6924 56.4044 66.5941 56.4272 66.5045 56.4666 cv
66.3539 56.5303 66.2227 56.6431 66.1371 56.7974 cv
66.06 56.936 66.0311 57.0883 66.0448 57.2352 cv
66.0494 57.2849 66.0589 57.3347 66.0736 57.3841 cv
66.0751 57.3877 li
66.0839 57.4165 66.0945 57.4448 66.1067 57.4724 cv
66.1147 57.4911 66.1234 57.5095 66.1328 57.5275 cv
66.1343 57.531 li
66.2122 57.6777 66.3307 57.7889 66.4686 57.8581 cv
66.6047 57.9309 66.7417 58.0039 66.8786 58.0767 cv
66.8786 58.0767 li
67.2965 58.3 67.692 58.5718 68.0857 58.8342 cv
68.0857 58.8342 li
68.5232 59.1257 68.9442 59.4548 69.296 59.8486 cv
69.3028 59.8569 69.3098 59.865 69.3169 59.8732 cv
69.3169 59.8732 li
69.3255 59.883 69.3343 59.8926 69.3432 59.902 cv
69.79 60.4083 70.2779 60.8775 70.781 61.3273 cv
70.781 61.3273 li
71.3743 61.8566 71.9004 62.4598 72.3939 63.082 cv
72.3939 63.082 li
72.877 63.6895 73.3771 64.2965 73.9445 64.8286 cv
71.5569 67.1695 68.4922 68.784 65.1329 69.388 cv
45.9776 57.4907 mo
45.3287 55.2493 45.1377 52.8358 45.4982 50.3765 cv
46.4865 43.6382 51.3392 38.4212 57.4809 36.6439 cv
57.5216 36.9783 57.5816 37.3098 57.666 37.6358 cv
57.6676 37.6423 57.6692 37.6488 57.6709 37.6554 cv
57.6717 37.6575 li
57.6717 37.6575 li
57.6717 37.6575 li
57.8898 38.4912 58.0998 39.327 58.3055 40.1641 cv
58.3055 40.1641 li
58.5136 41.0114 58.7703 41.8569 59.1576 42.642 cv
59.1607 42.6486 59.1639 42.6553 59.1671 42.6619 cv
59.1696 42.6662 li
59.1696 42.6662 li
59.1696 42.6662 li
59.5229 43.3751 59.7681 44.1397 59.993 44.8977 cv
59.993 44.8977 li
60.1583 45.4539 60.2792 46.0287 60.323 46.6084 cv
60.3079 46.6076 60.2927 46.6069 60.2775 46.6062 cv
59.944 46.4231 59.5741 46.3169 59.1867 46.3169 cv
59.0778 46.3169 58.9675 46.3253 58.8562 46.3428 cv
58.8562 46.3428 li
58.2227 46.4424 57.643 46.7598 57.245 47.2641 cv
57.2447 47.2645 57.2444 47.2649 57.244 47.2653 cv
57.2422 47.2676 li
57.2293 47.2841 57.2165 47.3007 57.204 47.3176 cv
57.204 47.3176 li
56.87 47.7655 56.629 48.281 56.4176 48.7951 cv
56.4176 48.7951 li
56.2882 49.1107 56.1951 49.4391 56.1287 49.7738 cv
55.9124 49.9923 55.7184 50.2335 55.5491 50.4924 cv
55.5491 50.4924 li
54.9364 51.4276 54.97 52.5754 55.6195 53.4819 cv
55.6216 53.4849 55.6236 53.4878 55.6258 53.4907 cv
55.7901 53.7183 55.9912 53.9136 56.2193 54.0672 cv
55.9656 54.1705 55.7125 54.2753 55.4601 54.3818 cv
55.4505 54.3859 55.4409 54.3901 55.4315 54.3944 cv
54.6659 54.7169 53.8857 55.043 53.0809 55.2557 cv
53.0809 55.2557 li
52.5089 55.4069 51.9218 55.4946 51.3322 55.5405 cv
51.3322 55.5405 li
50.1101 55.635 48.9128 56.1704 47.8125 56.6728 cv
47.8125 56.6728 li
47.2066 56.9491 46.5973 57.2351 45.9776 57.4907 cv
78.5894 56.4406 mo
78.5851 56.4403 78.5808 56.44 78.5765 56.4397 cv
78.5729 56.4393 78.5693 56.439 78.5656 56.4387 cv
78.5526 56.4379 li
77.6297 56.37 76.7107 56.241 75.8036 56.0562 cv
75.7969 56.0547 75.7901 56.0532 75.7833 56.0518 cv
75.7803 56.0514 li
74.8496 55.8608 73.9079 55.7169 72.9602 55.6491 cv
72.9557 55.6487 72.9512 55.6482 72.9466 55.6478 cv
72.9196 55.6463 li
72.7709 55.6358 72.6227 55.6207 72.4751 55.6014 cv
73.0263 55.4862 73.571 55.3396 74.1031 55.1571 cv
74.1031 55.1571 li
74.4582 55.0357 74.8072 54.897 75.1512 54.7461 cv
75.4536 54.8225 75.7551 54.9013 76.0559 54.9797 cv
76.0559 54.9797 li
76.9484 55.2129 77.8451 55.4319 78.7468 55.6291 cv
78.7006 55.9024 78.6481 56.1726 78.5894 56.4406 cv
69.1844 54.6774 mo
68.8343 54.5755 68.4811 54.4851 68.1241 54.412 cv
68.1241 54.412 li
67.9264 54.3716 67.7249 54.326 67.5285 54.2656 cv
67.7548 54.1677 67.9829 54.0741 68.211 53.9823 cv
68.211 53.9823 li
68.6442 53.808 69.0829 53.6479 69.5251 53.4976 cv
69.7839 53.5465 70.04 53.6098 70.2919 53.6882 cv
70.2919 53.6882 li
70.6979 53.8141 71.1096 53.9224 71.5249 54.0144 cv
71.4273 54.0402 71.3297 54.0655 71.2319 54.0903 cv
71.2319 54.0903 li
71.0341 54.1402 70.8361 54.1902 70.638 54.2402 cv
70.3996 54.2733 70.1644 54.3247 69.9365 54.4018 cv
69.789 54.4431 69.6413 54.485 69.4936 54.5271 cv
69.4731 54.532 li
69.4731 54.532 li
69.4697 54.533 69.4663 54.534 69.4629 54.535 cv
69.3617 54.5652 69.2685 54.609 69.1844 54.6774 cv
78.9727 53.4517 mo
78.665 53.3876 78.3578 53.3209 78.0513 53.2519 cv
78.3638 53.0797 78.6753 52.9057 78.9853 52.729 cv
78.9863 52.9691 78.9821 53.21 78.9727 53.4517 cv
75.2957 52.595 mo
74.6643 52.4496 74.0296 52.3179 73.3904 52.2197 cv
73.7464 52.0822 74.0997 51.9378 74.4499 51.786 cv
74.4499 51.786 li
75.1421 51.486 75.859 51.164 76.6006 51.0034 cv
76.6006 51.0034 li
76.9789 50.9224 77.3651 50.8774 77.7527 50.8774 cv
77.8019 50.8774 77.851 50.8781 77.9001 50.8796 cv
77.9001 50.8796 li
77.9946 50.8825 78.0891 50.884 78.1837 50.884 cv
78.2348 50.884 78.2859 50.8836 78.337 50.8827 cv
77.5876 51.338 76.8211 51.7657 76.0537 52.1881 cv
76.0537 52.1881 li
75.803 52.3261 75.5506 52.4627 75.2957 52.595 cv
64.3485 52.2891 mo
64.3002 51.7703 64.1973 51.2556 63.9969 50.7763 cv
63.9969 50.7763 li
63.9818 50.7402 63.9662 50.7044 63.9501 50.6688 cv
63.9402 50.4323 63.9185 50.1963 63.888 49.9625 cv
63.8875 49.9578 63.887 49.9532 63.8865 49.9485 cv
63.8833 49.9269 li
63.8075 49.3576 63.6624 48.781 63.3862 48.2742 cv
63.4651 47.4102 63.5559 46.5473 63.6664 45.6869 cv
63.7869 44.7445 63.8957 43.7594 64.1972 42.8525 cv
64.1967 42.8525 li
64.4982 41.9515 64.7753 41.0436 65.0361 40.1294 cv
65.0361 40.1294 li
65.3366 39.0742 65.522 37.9879 65.6194 36.8954 cv
65.6194 36.8954 li
65.6353 36.7174 65.6517 36.5381 65.6701 36.3584 cv
66.5314 36.5416 67.3647 36.7888 68.1659 37.0943 cv
68.1359 37.1403 68.106 37.1864 68.0761 37.2324 cv
68.0761 37.2324 li
67.5852 37.9909 67.0255 38.7032 66.4473 39.3959 cv
66.4473 39.3959 li
65.7532 40.228 65.1487 41.1473 64.7359 42.1517 cv
64.5932 42.4993 64.7586 42.8977 65.1073 43.0405 cv
65.191 43.0749 65.2786 43.0916 65.3652 43.0916 cv
65.5667 43.0916 65.7631 43.0017 65.8957 42.8377 cv
66.5163 42.0667 67.1607 41.3149 67.8178 40.5748 cv
67.8178 40.5748 li
68.469 39.84 69.0976 39.0781 69.6417 38.2591 cv
69.6417 38.2591 li
69.7278 38.1297 69.814 38.0006 69.9005 37.8716 cv
74.2371 40.1195 77.3899 44.1674 78.5242 48.895 cv
78.39 48.9023 78.2557 48.9061 78.1213 48.9061 cv
78.0649 48.9061 78.0085 48.9054 77.9521 48.9041 cv
77.9521 48.9041 li
77.9015 48.9029 77.8508 48.9023 77.8002 48.9023 cv
77.2509 48.9023 76.703 48.9708 76.1688 49.0977 cv
76.1688 49.0977 li
75.3034 49.3037 74.4749 49.6919 73.674 50.0697 cv
73.674 50.0697 li
72.6643 50.5444 71.6217 50.9494 70.5591 51.2929 cv
70.5588 51.293 70.5584 51.2931 70.5581 51.2932 cv
70.538 51.2998 li
70.3447 51.3621 70.1514 51.4256 69.9585 51.4905 cv
69.4334 51.3928 68.8993 51.3425 68.3647 51.3365 cv
68.3647 51.3365 li
68.3442 51.3363 68.3237 51.3362 68.3031 51.3362 cv
67.1993 51.3362 66.1052 51.6484 65.0763 52.0206 cv
65.0763 52.0206 li
64.8338 52.1086 64.5908 52.1976 64.3485 52.2891 cv
62.4776 42.1486 mo
62.4685 42.1067 62.4593 42.0648 62.45 42.0229 cv
62.45 42.0229 li
62.2105 40.9374 61.9566 39.8265 61.8864 38.7136 cv
61.8861 38.6998 61.8856 38.686 61.8848 38.6722 cv
61.8848 38.6722 li
61.8848 38.6722 li
61.8848 38.6722 li
61.8355 37.834 61.8168 36.9937 61.8122 36.1543 cv
61.8122 36.1543 li
61.8119 36.0989 61.8118 36.0434 61.8118 35.988 cv
61.9178 35.986 62.0239 35.985 62.1302 35.985 cv
62.6603 35.985 63.1951 36.0101 63.7324 36.0612 cv
63.712 36.2884 63.695 36.5153 63.6792 36.7411 cv
63.6792 36.7411 li
63.6124 37.7136 63.4654 38.6817 63.2101 39.6217 cv
63.2101 39.6217 li
62.9804 40.4682 62.7376 41.3114 62.4776 42.1486 cv
59.7813 37.0483 mo
59.7751 37.0234 59.769 36.9984 59.7632 36.9734 cv
59.7686 36.977 59.7739 36.9806 59.7793 36.9843 cv
59.7799 37.0056 59.7806 37.027 59.7813 37.0483 cv
.0745098 .0705882 .0666667 .0901961 cmyk
f
56.1287 49.7738 mo
56.1951 49.4391 56.2882 49.1107 56.4176 48.7951 cv
56.4176 48.7951 li
56.629 48.281 56.87 47.7655 57.204 47.3176 cv
57.204 47.3176 li
57.2165 47.3007 57.2293 47.2841 57.2422 47.2676 cv
57.244 47.2653 li
57.2444 47.2649 57.2447 47.2645 57.245 47.2641 cv
57.643 46.7598 58.2227 46.4424 58.8562 46.3428 cv
58.8562 46.3428 li
58.9675 46.3253 59.0778 46.3169 59.1867 46.3169 cv
59.5741 46.3169 59.944 46.4231 60.2775 46.6062 cv
60.2927 46.6069 60.3079 46.6076 60.323 46.6084 cv
60.338 46.8067 60.344 47.0055 60.3396 47.2045 cv
60.1301 47.2851 59.9303 47.3863 59.7408 47.5046 cv
59.4923 47.5243 59.2472 47.5671 59.012 47.6454 cv
59.012 47.6454 li
58.6144 47.7769 58.2979 48.0314 58.0756 48.3572 cv
57.896 48.5055 57.7241 48.6633 57.5576 48.8222 cv
57.4825 48.851 57.4083 48.8826 57.3352 48.9167 cv
57.3352 48.9167 li
56.8829 49.129 56.477 49.4219 56.1287 49.7738 cv
.0745098 .376471 .219608 .0901961 cmyk
f
60.3396 47.2045 mo
60.344 47.0055 60.338 46.8067 60.323 46.6084 cv
60.2792 46.0287 60.1583 45.4539 59.993 44.8977 cv
59.993 44.8977 li
59.7681 44.1397 59.5229 43.3751 59.1696 42.6662 cv
59.1696 42.6662 li
59.1696 42.6662 li
59.1671 42.6619 li
59.1639 42.6553 59.1607 42.6486 59.1576 42.642 cv
58.7703 41.8569 58.5136 41.0114 58.3055 40.1641 cv
58.3055 40.1641 li
58.0998 39.327 57.8898 38.4912 57.6717 37.6575 cv
57.6717 37.6575 li
57.6717 37.6575 li
57.6709 37.6554 li
57.6692 37.6488 57.6676 37.6423 57.666 37.6358 cv
57.5816 37.3098 57.5216 36.9783 57.4809 36.6439 cv
57.8457 36.5383 58.2159 36.4447 58.5892 36.3638 cv
59.0062 36.5076 59.399 36.7273 59.7632 36.9734 cv
59.769 36.9984 59.7751 37.0234 59.7813 37.0483 cv
59.7997 37.6313 59.8259 38.2141 59.8634 38.7958 cv
59.8634 38.7958 li
59.9428 40.0341 60.2409 41.2643 60.5306 42.4662 cv
60.5306 42.4662 li
60.6832 43.0969 60.8252 43.7322 60.9237 44.3751 cv
60.9756 44.7165 61.0323 45.0738 61.0048 45.4201 cv
61.0048 45.4201 li
60.9623 45.9701 60.8985 46.5173 60.8187 47.0626 cv
60.8045 47.0655 60.7904 47.0686 60.7763 47.0718 cv
60.7557 47.0758 60.7351 47.0804 60.7145 47.0855 cv
60.7145 47.0855 li
60.712 47.0862 60.7095 47.0868 60.707 47.0875 cv
60.5815 47.1193 60.459 47.1585 60.3396 47.2045 cv
f
60.8187 47.0626 mo
60.8985 46.5173 60.9623 45.9701 61.0048 45.4201 cv
61.0048 45.4201 li
61.0323 45.0738 60.9756 44.7165 60.9237 44.3751 cv
60.8252 43.7322 60.6832 43.0969 60.5306 42.4662 cv
60.5306 42.4662 li
60.2409 41.2643 59.9428 40.0341 59.8634 38.7958 cv
59.8634 38.7958 li
59.8259 38.2141 59.7997 37.6313 59.7813 37.0483 cv
59.7806 37.027 59.7799 37.0056 59.7793 36.9843 cv
59.8168 37.0097 59.854 37.0355 59.8908 37.0614 cv
60.0253 37.156 60.1796 37.2014 60.3323 37.2014 cv
60.5744 37.2014 60.8126 37.0875 60.9624 36.8749 cv
61.1419 36.6186 61.1466 36.2829 60.9844 36.0241 cv
61.259 36.0053 61.5345 35.9932 61.8118 35.988 cv
61.8118 36.0434 61.8119 36.0989 61.8122 36.1543 cv
61.8122 36.1543 li
61.8168 36.9937 61.8355 37.834 61.8848 38.6722 cv
61.8848 38.6722 li
61.8848 38.6722 li
61.8856 38.686 61.8861 38.6998 61.8864 38.7136 cv
61.9566 39.8265 62.2105 40.9374 62.45 42.0229 cv
62.45 42.0229 li
62.4593 42.0648 62.4685 42.1067 62.4776 42.1486 cv
62.4671 42.1826 62.4565 42.2165 62.4459 42.2505 cv
62.4436 42.257 62.4414 42.2634 62.4392 42.27 cv
62.4356 42.2816 li
62.1091 43.3133 62.0177 44.4288 61.925 45.5007 cv
61.8802 46.0171 61.8431 46.5342 61.8121 47.0518 cv
61.6608 47.0219 61.5055 47.007 61.3486 47.007 cv
61.1731 47.007 60.9955 47.0256 60.8187 47.0626 cv
f
63.3862 48.2742 mo
63.3013 48.1186 63.2041 47.9696 63.0928 47.8294 cv
63.0911 47.8272 63.0894 47.8251 63.0877 47.823 cv
63.0877 47.823 li
63.0858 47.8206 63.0839 47.8182 63.0819 47.8158 cv
62.7472 47.4009 62.2997 47.1482 61.8121 47.0518 cv
61.8431 46.5342 61.8802 46.0171 61.925 45.5007 cv
62.0177 44.4288 62.1091 43.3133 62.4356 42.2816 cv
62.4392 42.27 li
62.4414 42.2634 62.4436 42.257 62.4459 42.2505 cv
62.4565 42.2165 62.4671 42.1826 62.4776 42.1486 cv
62.7376 41.3114 62.9804 40.4682 63.2101 39.6217 cv
63.2101 39.6217 li
63.4654 38.6817 63.6124 37.7136 63.6792 36.7411 cv
63.6792 36.7411 li
63.695 36.5153 63.712 36.2884 63.7324 36.0612 cv
64.019 36.0885 64.3057 36.1231 64.5937 36.1653 cv
64.9569 36.2186 65.3161 36.2831 65.6701 36.3584 cv
65.6517 36.5381 65.6353 36.7174 65.6194 36.8954 cv
65.6194 36.8954 li
65.522 37.9879 65.3366 39.0742 65.0361 40.1294 cv
65.0361 40.1294 li
64.7753 41.0436 64.4982 41.9515 64.1967 42.8525 cv
64.1972 42.8525 li
63.8957 43.7594 63.7869 44.7445 63.6664 45.6869 cv
63.5559 46.5473 63.4651 47.4102 63.3862 48.2742 cv
f
60.3323 37.2014 mo
60.1796 37.2014 60.0253 37.156 59.8908 37.0614 cv
59.854 37.0355 59.8168 37.0097 59.7793 36.9843 cv
59.7739 36.9806 59.7686 36.977 59.7632 36.9734 cv
59.399 36.7273 59.0062 36.5076 58.5892 36.3638 cv
59.3715 36.1943 60.1719 36.0798 60.9844 36.0241 cv
61.1466 36.2829 61.1419 36.6186 60.9624 36.8749 cv
60.8126 37.0875 60.5744 37.2014 60.3323 37.2014 cv
f
65.3652 43.0916 mo
65.2786 43.0916 65.191 43.0749 65.1073 43.0405 cv
64.7586 42.8977 64.5932 42.4993 64.7359 42.1517 cv
65.1487 41.1473 65.7532 40.228 66.4473 39.3959 cv
66.4473 39.3959 li
67.0255 38.7032 67.5852 37.9909 68.0761 37.2324 cv
68.0761 37.2324 li
68.106 37.1864 68.1359 37.1403 68.1659 37.0943 cv
68.7629 37.322 69.3411 37.5816 69.9005 37.8716 cv
69.814 38.0006 69.7278 38.1297 69.6417 38.2591 cv
69.6417 38.2591 li
69.0976 39.0781 68.469 39.84 67.8178 40.5748 cv
67.8178 40.5748 li
67.1607 41.3149 66.5163 42.0667 65.8957 42.8377 cv
65.7631 43.0017 65.5667 43.0916 65.3652 43.0916 cv
f
63.9501 50.6688 mo
63.6882 50.0906 63.2933 49.5798 62.7896 49.192 cv
62.7896 49.192 li
62.7896 49.192 li
62.7877 49.1906 62.7858 49.1892 62.784 49.1877 cv
62.4832 48.9573 62.1455 48.7944 61.7894 48.6922 cv
61.7231 48.6091 61.6545 48.5278 61.5839 48.4482 cv
61.5839 48.4482 li
61.1213 47.9261 60.4827 47.5753 59.8133 47.5753 cv
59.5544 47.5753 59.291 47.6277 59.0311 47.743 cv
59.0311 47.743 li
58.6855 47.8964 58.3703 48.1139 58.0756 48.3572 cv
58.2979 48.0314 58.6144 47.7769 59.012 47.6454 cv
59.012 47.6454 li
59.2472 47.5671 59.4923 47.5243 59.7408 47.5046 cv
59.9303 47.3863 60.1301 47.2851 60.3396 47.2045 cv
60.459 47.1585 60.5815 47.1193 60.707 47.0875 cv
60.7095 47.0868 60.712 47.0862 60.7145 47.0855 cv
60.7145 47.0855 li
60.7351 47.0804 60.7557 47.0758 60.7763 47.0718 cv
60.7904 47.0686 60.8045 47.0655 60.8187 47.0626 cv
60.9955 47.0256 61.1731 47.007 61.3486 47.007 cv
61.5055 47.007 61.6608 47.0219 61.8121 47.0518 cv
62.2997 47.1482 62.7472 47.4009 63.0819 47.8158 cv
63.0839 47.8182 63.0858 47.8206 63.0877 47.823 cv
63.0877 47.823 li
63.0894 47.8251 63.0911 47.8272 63.0928 47.8294 cv
63.2041 47.9696 63.3013 48.1186 63.3862 48.2742 cv
63.6624 48.781 63.8075 49.3576 63.8833 49.9269 cv
63.8865 49.9485 li
63.887 49.9532 63.8875 49.9578 63.888 49.9625 cv
63.9185 50.1963 63.9402 50.4323 63.9501 50.6688 cv
.0745098 .172549 .341176 .0901961 cmyk
f
78.7468 55.6291 mo
77.8451 55.4319 76.9484 55.2129 76.0559 54.9797 cv
76.0559 54.9797 li
75.7551 54.9013 75.4536 54.8225 75.1512 54.7461 cv
75.7677 54.4756 76.3681 54.1661 76.958 53.8474 cv
76.958 53.8474 li
77.323 53.6502 77.6878 53.4522 78.0513 53.2519 cv
78.3578 53.3209 78.665 53.3876 78.9727 53.4517 cv
78.9494 54.0505 78.894 54.6537 78.8051 55.2599 cv
78.7869 55.3834 78.7675 55.5066 78.7468 55.6291 cv
64.2234 54.1572 mo
64.3337 53.7978 64.389 53.4187 64.3849 53.0305 cv
64.3849 53.0305 li
64.3821 52.7847 64.3715 52.5364 64.3485 52.2891 cv
64.5908 52.1976 64.8338 52.1086 65.0763 52.0206 cv
65.0763 52.0206 li
66.1052 51.6484 67.1993 51.3362 68.3031 51.3362 cv
68.3237 51.3362 68.3442 51.3363 68.3647 51.3365 cv
68.3647 51.3365 li
68.8993 51.3425 69.4334 51.3928 69.9585 51.4905 cv
69.1424 51.7651 68.3334 52.0651 67.5468 52.4155 cv
67.5468 52.4155 li
66.842 52.729 66.1388 53.084 65.527 53.5597 cv
65.527 53.5597 li
65.4826 53.594 65.4381 53.6283 65.3937 53.6627 cv
65.1072 53.6849 64.8227 53.755 64.5504 53.8758 cv
64.4108 53.9379 64.2997 54.0374 64.2234 54.1572 cv
71.5249 54.0144 mo
71.1096 53.9224 70.6979 53.8141 70.2919 53.6882 cv
70.2919 53.6882 li
70.04 53.6098 69.7839 53.5465 69.5251 53.4976 cv
70.036 53.324 70.5517 53.1635 71.0688 53.0097 cv
71.0688 53.0097 li
71.8523 52.7766 72.6275 52.5143 73.3904 52.2197 cv
74.0296 52.3179 74.6643 52.4496 75.2957 52.595 cv
74.7164 52.8957 74.1245 53.1743 73.5122 53.3973 cv
73.5087 53.3985 73.5052 53.3996 73.5017 53.4008 cv
73.4879 53.4061 li
72.8427 53.6385 72.1872 53.8389 71.5249 54.0144 cv
f
65.0503 55.4781 mo
64.9543 55.4781 64.8584 55.458 64.7693 55.417 cv
64.6236 55.3266 li
64.5414 55.2389 li
64.6376 55.2831 64.7436 55.3072 64.8532 55.3072 cv
64.8678 55.3072 64.8825 55.3067 64.8973 55.3059 cv
64.932 55.3038 64.9665 55.3028 65.0008 55.3028 cv
65.1837 55.3028 65.3609 55.3316 65.5311 55.3853 cv
65.4281 55.4078 65.3251 55.4304 65.223 55.4564 cv
65.2218 55.4565 li
65.1656 55.4709 65.1079 55.4781 65.0503 55.4781 cv
67.5285 54.2656 mo
67.3323 54.2053 67.1411 54.1303 66.9636 54.031 cv
66.9586 54.0279 li
66.5365 53.7832 66.0659 53.655 65.5939 53.655 cv
65.5272 53.655 65.4604 53.6575 65.3937 53.6627 cv
65.4381 53.6283 65.4826 53.594 65.527 53.5597 cv
65.527 53.5597 li
66.1388 53.084 66.842 52.729 67.5468 52.4155 cv
67.5468 52.4155 li
68.3334 52.0651 69.1424 51.7651 69.9585 51.4905 cv
70.1514 51.4256 70.3447 51.3621 70.538 51.2998 cv
70.5581 51.2932 li
70.5584 51.2931 70.5588 51.293 70.5591 51.2929 cv
71.6217 50.9494 72.6643 50.5444 73.674 50.0697 cv
73.674 50.0697 li
74.4749 49.6919 75.3034 49.3037 76.1688 49.0977 cv
76.1688 49.0977 li
76.703 48.9708 77.2509 48.9023 77.8002 48.9023 cv
77.8508 48.9023 77.9015 48.9029 77.9521 48.9041 cv
77.9521 48.9041 li
78.0085 48.9054 78.0649 48.9061 78.1213 48.9061 cv
78.2557 48.9061 78.39 48.9023 78.5242 48.895 cv
78.6565 49.4466 78.7616 50.0085 78.8377 50.5768 cv
78.753 50.6277 78.6685 50.6791 78.5845 50.731 cv
78.5832 50.7317 78.5818 50.7325 78.5805 50.7333 cv
78.5618 50.745 li
78.487 50.7912 78.4121 50.8371 78.337 50.8827 cv
78.2859 50.8836 78.2348 50.884 78.1837 50.884 cv
78.0891 50.884 77.9946 50.8825 77.9001 50.8796 cv
77.9001 50.8796 li
77.851 50.8781 77.8019 50.8774 77.7527 50.8774 cv
77.3651 50.8774 76.9789 50.9224 76.6006 51.0034 cv
76.6006 51.0034 li
75.859 51.164 75.1421 51.486 74.4499 51.786 cv
74.4499 51.786 li
74.0997 51.9378 73.7464 52.0822 73.3904 52.2197 cv
72.6275 52.5143 71.8523 52.7766 71.0688 53.0097 cv
71.0688 53.0097 li
70.5517 53.1635 70.036 53.324 69.5251 53.4976 cv
69.0829 53.6479 68.6442 53.808 68.211 53.9823 cv
68.211 53.9823 li
67.9829 54.0741 67.7548 54.1677 67.5285 54.2656 cv
f
77.9864 58.5334 mo
77.1029 58.4429 76.2244 58.3057 75.3546 58.126 cv
75.3546 58.126 li
74.4932 57.9484 73.6245 57.8041 72.749 57.7215 cv
72.749 57.7215 li
71.7539 57.6265 70.7804 57.3638 69.8512 57.0011 cv
69.8512 57.0011 li
69.1495 56.7271 68.4363 56.4638 67.7032 56.2846 cv
67.7032 56.2846 li
67.1196 56.1411 66.5348 55.9452 66.0245 55.6218 cv
66.0166 55.6171 66.0087 55.6123 66.0009 55.6073 cv
66.0009 55.6067 li
65.9988 55.6053 65.9966 55.6039 65.9945 55.6026 cv
65.9911 55.6004 65.9878 55.5982 65.9846 55.5961 cv
65.8402 55.5064 65.6887 55.4351 65.5311 55.3853 cv
65.3609 55.3316 65.1837 55.3028 65.0008 55.3028 cv
64.9665 55.3028 64.932 55.3038 64.8973 55.3059 cv
64.8825 55.3067 64.8678 55.3072 64.8532 55.3072 cv
64.7436 55.3072 64.6376 55.2831 64.5414 55.2389 cv
64.3795 55.1646 64.2456 55.0332 64.1699 54.8632 cv
64.1133 54.7353 64.0954 54.6001 64.1111 54.4705 cv
64.1533 54.368 64.1907 54.2635 64.2234 54.1572 cv
64.2997 54.0374 64.4108 53.9379 64.5504 53.8758 cv
64.8227 53.755 65.1072 53.6849 65.3937 53.6627 cv
65.4604 53.6575 65.5272 53.655 65.5939 53.655 cv
66.0659 53.655 66.5365 53.7832 66.9586 54.0279 cv
66.9636 54.031 li
67.1411 54.1303 67.3323 54.2053 67.5285 54.2656 cv
67.7249 54.326 67.9264 54.3716 68.1241 54.412 cv
68.1241 54.412 li
68.4811 54.4851 68.8343 54.5755 69.1844 54.6774 cv
69.1813 54.68 69.1782 54.6826 69.175 54.6852 cv
69.0689 54.7733 68.9884 54.8889 68.9442 55.0204 cv
68.9003 55.1499 68.8923 55.29 68.9215 55.4238 cv
69.0068 55.8085 69.3484 56.0234 69.7132 56.0234 cv
69.7274 56.0234 69.7416 56.0231 69.7559 56.0225 cv
69.9383 56.0023 li
69.9576 56.0009 69.9768 55.9988 69.9962 55.9959 cv
70.5194 55.9182 71.0436 55.8405 71.5669 55.7629 cv
71.5669 55.7629 li
71.8709 55.7179 72.174 55.6644 72.4751 55.6014 cv
72.6227 55.6207 72.7709 55.6358 72.9196 55.6463 cv
72.9466 55.6478 li
72.9512 55.6482 72.9557 55.6487 72.9602 55.6491 cv
73.9079 55.7169 74.8496 55.8608 75.7803 56.0514 cv
75.7833 56.0518 li
75.7901 56.0532 75.7969 56.0547 75.8036 56.0562 cv
76.7107 56.241 77.6297 56.37 78.5526 56.4379 cv
78.5656 56.4387 li
78.5693 56.439 78.5729 56.4393 78.5765 56.4397 cv
78.5808 56.44 78.5851 56.4403 78.5894 56.4406 cv
78.4318 57.1588 78.2298 57.8569 77.9864 58.5334 cv
f
73.9445 64.8286 mo
73.3771 64.2965 72.877 63.6895 72.3939 63.082 cv
72.3939 63.082 li
71.9004 62.4598 71.3743 61.8566 70.781 61.3273 cv
70.781 61.3273 li
70.2779 60.8775 69.79 60.4083 69.3432 59.902 cv
69.3343 59.8926 69.3255 59.883 69.3169 59.8732 cv
69.3169 59.8732 li
69.3098 59.865 69.3028 59.8569 69.296 59.8486 cv
68.9442 59.4548 68.5232 59.1257 68.0857 58.8342 cv
68.0857 58.8342 li
67.692 58.5718 67.2965 58.3 66.8786 58.0767 cv
66.8786 58.0767 li
66.7417 58.0039 66.6047 57.9309 66.4686 57.8581 cv
66.3307 57.7889 66.2122 57.6777 66.1343 57.531 cv
66.1328 57.5275 li
66.1234 57.5095 66.1147 57.4911 66.1067 57.4724 cv
66.0945 57.4448 66.0839 57.4165 66.0751 57.3877 cv
66.0736 57.3841 li
66.0589 57.3347 66.0494 57.2849 66.0448 57.2352 cv
66.0311 57.0883 66.06 56.936 66.1371 56.7974 cv
66.2227 56.6431 66.3539 56.5303 66.5045 56.4666 cv
66.5941 56.4272 66.6924 56.4044 66.7955 56.402 cv
66.802 56.4019 66.8084 56.4018 66.8148 56.4018 cv
66.8239 56.4018 66.8329 56.402 66.842 56.4023 cv
67.0006 56.4059 67.1583 56.4095 67.3158 56.414 cv
67.3182 56.414 67.3206 56.4141 67.323 56.4142 cv
67.9849 56.4316 68.6235 56.7831 69.1763 57.1165 cv
69.1763 57.1165 li
69.7954 57.4909 70.3837 57.9256 70.8803 58.4534 cv
70.8803 58.4534 li
71.2963 58.8953 71.7455 59.3051 72.2058 59.7002 cv
72.2058 59.7002 li
72.9056 60.3015 73.5277 60.9897 74.1079 61.7058 cv
74.1079 61.7058 li
74.5194 62.2132 74.9421 62.7281 75.4243 63.173 cv
74.9669 63.7583 74.4722 64.3112 73.9445 64.8286 cv
f
55.1352 68.122 mo
51.6355 66.5197 48.8357 63.7743 47.1352 60.4239 cv
47.2778 60.3701 47.4209 60.3178 47.5647 60.2674 cv
47.5647 60.2674 li
48.5374 59.9255 49.4854 59.5121 50.4193 59.0749 cv
50.4212 59.074 50.4231 59.0732 50.4249 59.0723 cv
50.4282 59.0707 li
50.4282 59.0707 li
50.4282 59.0707 li
51.5141 58.5624 52.6231 58.1024 53.7462 57.6805 cv
53.7462 57.6805 li
55.1714 57.145 56.5763 56.5522 57.9707 55.9398 cv
57.9784 55.9367 57.9861 55.9335 57.9938 55.9302 cv
57.9982 55.9277 li
57.9982 55.9277 li
57.9982 55.9277 li
58.0337 55.9121 58.0693 55.8965 58.1049 55.8809 cv
58.1411 55.9238 58.179 55.9654 58.2188 56.0055 cv
58.2455 56.0324 58.2729 56.0583 58.3009 56.0833 cv
58.5114 56.4452 58.8534 56.7198 59.258 56.8614 cv
59.4544 56.9298 59.6585 56.9679 59.8651 56.9844 cv
59.7817 58.4489 59.67 59.9117 59.5568 61.3735 cv
59.5568 61.3735 li
59.4816 62.3559 59.4332 63.3419 59.4543 64.3277 cv
59.4588 64.5213 59.4656 64.7154 59.4762 64.9096 cv
59.3486 64.9848 59.2267 65.0699 59.1113 65.1621 cv
59.1031 65.1687 59.095 65.1754 59.0871 65.1822 cv
58.6704 65.5118 58.2152 65.7902 57.7449 66.0382 cv
57.741 66.0401 57.7371 66.0421 57.7332 66.0441 cv
57.7289 66.0466 li
57.7289 66.0466 li
57.7289 66.0466 li
57.1676 66.3413 56.6187 66.6729 56.1306 67.0797 cv
56.1306 67.0797 li
55.7622 67.3871 55.437 67.7459 55.1352 68.122 cv
.0745098 .0705882 .0666667 .0901961 cmyk
f
69.7132 56.0234 mo
69.3484 56.0234 69.0068 55.8085 68.9215 55.4238 cv
68.8923 55.29 68.9003 55.1499 68.9442 55.0204 cv
68.9884 54.8889 69.0689 54.7733 69.175 54.6852 cv
69.1782 54.6826 69.1813 54.68 69.1844 54.6774 cv
69.2685 54.609 69.3617 54.5652 69.4629 54.535 cv
69.4663 54.534 69.4697 54.533 69.4731 54.532 cv
69.4731 54.532 li
69.4731 54.532 li
69.4936 54.5271 li
69.6413 54.485 69.789 54.4431 69.9365 54.4018 cv
70.1644 54.3247 70.3996 54.2733 70.638 54.2402 cv
70.8361 54.1902 71.0341 54.1402 71.2319 54.0903 cv
71.2319 54.0903 li
71.3297 54.0655 71.4273 54.0402 71.5249 54.0144 cv
72.1872 53.8389 72.8427 53.6385 73.4879 53.4061 cv
73.5017 53.4008 li
73.5052 53.3996 73.5087 53.3985 73.5122 53.3973 cv
74.1245 53.1743 74.7164 52.8957 75.2957 52.595 cv
75.5506 52.4627 75.803 52.3261 76.0537 52.1881 cv
76.0537 52.1881 li
76.8211 51.7657 77.5876 51.338 78.337 50.8827 cv
78.4121 50.8371 78.487 50.7912 78.5618 50.745 cv
78.5805 50.7333 li
78.5818 50.7325 78.5832 50.7317 78.5845 50.731 cv
78.6685 50.6791 78.753 50.6277 78.8377 50.5768 cv
78.9323 51.2839 78.9823 52.0022 78.9853 52.729 cv
78.6753 52.9057 78.3638 53.0797 78.0513 53.2519 cv
77.6878 53.4522 77.323 53.6502 76.958 53.8474 cv
76.958 53.8474 li
76.3681 54.1661 75.7677 54.4756 75.1512 54.7461 cv
74.8072 54.897 74.4582 55.0357 74.1031 55.1571 cv
74.1031 55.1571 li
73.571 55.3396 73.0263 55.4862 72.4751 55.6014 cv
72.174 55.6644 71.8709 55.7179 71.5669 55.7629 cv
71.5669 55.7629 li
71.0436 55.8405 70.5194 55.9182 69.9962 55.9959 cv
69.9768 55.9988 69.9576 56.0009 69.9383 56.0023 cv
69.7559 56.0225 li
69.7416 56.0231 69.7274 56.0234 69.7132 56.0234 cv
.0745098 .172549 .341176 .0901961 cmyk
f
59.8651 56.9844 mo
59.6585 56.9679 59.4544 56.9298 59.258 56.8614 cv
58.8534 56.7198 58.5114 56.4452 58.3009 56.0833 cv
58.2729 56.0583 58.2455 56.0324 58.2188 56.0055 cv
58.179 55.9654 58.1411 55.9238 58.1049 55.8809 cv
58.1363 55.8671 58.1675 55.8534 58.199 55.8396 cv
58.515 55.9563 58.8443 56.0143 59.1731 56.0143 cv
59.4275 56.0143 59.6816 55.9797 59.9293 55.9107 cv
59.9168 56.0472 59.9078 56.1837 59.9009 56.319 cv
59.9009 56.319 li
59.8897 56.5409 59.8777 56.7626 59.8651 56.9844 cv
61.6495 56.7173 mo
61.6509 56.6003 61.6519 56.4833 61.6522 56.3663 cv
61.6522 56.3663 li
61.654 55.9623 61.6594 55.5446 61.7506 55.149 cv
61.8147 54.9518 li
61.817 54.9501 61.8195 54.9483 61.8221 54.9464 cv
62.061 54.7735 62.1609 54.4792 62.0978 54.2086 cv
62.1042 54.2061 62.1104 54.2037 62.1167 54.2012 cv
62.4979 54.0517 62.6866 53.6203 62.5371 53.2391 cv
62.5342 53.2316 62.5312 53.2243 62.5281 53.217 cv
62.6057 53.0171 62.6687 52.8106 62.7166 52.599 cv
62.7166 52.599 li
62.9081 51.7545 62.9418 50.8445 62.5965 50.0347 cv
62.5955 50.0345 li
62.3903 49.5522 62.1163 49.1014 61.7894 48.6922 cv
62.1455 48.7944 62.4832 48.9573 62.784 49.1877 cv
62.7858 49.1892 62.7877 49.1906 62.7896 49.192 cv
62.7896 49.192 li
62.7896 49.192 li
63.2933 49.5798 63.6882 50.0906 63.9501 50.6688 cv
63.9662 50.7044 63.9818 50.7402 63.9969 50.7763 cv
63.9969 50.7763 li
64.1973 51.2556 64.3002 51.7703 64.3485 52.2891 cv
64.3715 52.5364 64.3821 52.7847 64.3849 53.0305 cv
64.3849 53.0305 li
64.3849 53.0305 li
64.389 53.4187 64.3337 53.7978 64.2234 54.1572 cv
64.1907 54.2635 64.1533 54.368 64.1111 54.4705 cv
63.9002 54.9835 63.5715 55.4461 63.1385 55.8241 cv
63.1385 55.8241 li
63.1385 55.8241 li
63.1316 55.8302 li
63.1288 55.8326 63.126 55.835 63.1231 55.8374 cv
62.6859 56.2165 62.1872 56.5177 61.6495 56.7173 cv
.298039 .266667 .0666667 .0901961 cmyk
f
60.2606 69.5429 mo
60.2114 69.5373 60.1625 69.5315 60.1132 69.5255 cv
60.1109 69.4816 60.1086 69.4378 60.1062 69.394 cv
60.1057 69.3884 60.1054 69.3829 60.1051 69.3773 cv
60.0604 68.5628 59.944 67.7542 59.7791 66.9565 cv
59.8917 66.878 60.0024 66.7969 60.1112 66.713 cv
60.1231 67.4743 60.1608 68.2351 60.2194 68.9939 cv
60.2194 68.9939 li
60.2336 69.1769 60.2474 69.3598 60.2606 69.5429 cv
59.4762 64.9096 mo
59.4656 64.7154 59.4588 64.5213 59.4543 64.3277 cv
59.4332 63.3419 59.4816 62.3559 59.5568 61.3735 cv
59.5568 61.3735 li
59.67 59.9117 59.7817 58.4489 59.8651 56.9844 cv
59.8777 56.7626 59.8897 56.5409 59.9009 56.319 cv
59.9009 56.319 li
59.9078 56.1837 59.9168 56.0472 59.9293 55.9107 cv
60.1442 55.8508 60.3542 55.7651 60.5553 55.6538 cv
60.5553 55.6538 li
61.1497 55.3252 61.6332 54.8374 61.9747 54.2569 cv
62.0157 54.2408 62.0568 54.2247 62.0978 54.2086 cv
62.1609 54.4792 62.061 54.7735 61.8221 54.9464 cv
61.8195 54.9483 61.817 54.9501 61.8147 54.9518 cv
61.7506 55.149 li
61.6594 55.5446 61.654 55.9623 61.6522 56.3663 cv
61.6522 56.3663 li
61.6519 56.4833 61.6509 56.6003 61.6495 56.7173 cv
61.6417 57.3655 61.6185 58.0137 61.5858 58.6616 cv
61.5685 58.6759 61.5516 58.6906 61.535 58.7058 cv
61.0585 59.1298 60.7922 59.7389 60.6416 60.3469 cv
60.6416 60.3469 li
60.3703 61.4341 60.3043 62.5871 60.2094 63.6992 cv
60.2094 63.6992 li
60.1831 64.0092 60.1621 64.3196 60.1462 64.6302 cv
59.911 64.6888 59.686 64.7859 59.4762 64.9096 cv
f
62.1688 69.6516 mo
61.5379 69.6514 60.9014 69.6158 60.2606 69.5429 cv
60.2474 69.3598 60.2336 69.1769 60.2194 68.9939 cv
60.2194 68.9939 li
60.1608 68.2351 60.1231 67.4743 60.1112 66.713 cv
60.1629 66.6731 60.2142 66.6325 60.265 66.5913 cv
60.2662 66.5903 60.2674 66.5894 60.2685 66.5884 cv
60.4754 66.4216 60.6957 66.292 60.9397 66.292 cv
61.0261 66.292 61.1154 66.3082 61.2083 66.3449 cv
61.299 66.3807 61.3927 66.3977 61.4847 66.3977 cv
61.5755 66.3977 61.6647 66.3812 61.7482 66.35 cv
61.8218 66.6308 61.9028 66.9096 61.9917 67.186 cv
62.0153 67.7379 62.0524 68.2892 62.1008 68.8391 cv
62.1008 68.8391 li
62.1244 69.1098 62.1474 69.3806 62.1688 69.6516 cv
61.4628 64.7484 mo
61.206 64.6321 60.9271 64.5682 60.6409 64.5682 cv
60.617 64.5682 60.593 64.5687 60.569 64.5696 cv
60.4251 64.575 60.2839 64.596 60.1462 64.6302 cv
60.1621 64.3196 60.1831 64.0092 60.2094 63.6992 cv
60.2094 63.6992 li
60.3043 62.5871 60.3703 61.4341 60.6416 60.3469 cv
60.6416 60.3469 li
60.7922 59.7389 61.0585 59.1298 61.535 58.7058 cv
61.5516 58.6906 61.5685 58.6759 61.5858 58.6616 cv
61.7842 58.4969 62.0274 58.3887 62.2842 58.3887 cv
62.3402 58.3887 62.3968 58.3938 62.4537 58.4046 cv
62.5948 58.4313 62.72 58.4893 62.8276 58.5701 cv
62.18 59.6835 61.7625 60.9209 61.5861 62.1975 cv
61.5861 62.1975 li
61.4712 63.0344 61.4013 63.8986 61.4628 64.7484 cv
f
62.9984 69.6313 mo
62.8036 69.2262 62.6186 68.8162 62.4429 68.402 cv
62.4429 68.402 li
62.2742 68.0037 62.1242 67.5976 61.9917 67.186 cv
61.9028 66.9096 61.8218 66.6308 61.7482 66.35 cv
61.9411 66.2781 62.1039 66.1278 62.1854 65.9214 cv
62.3038 65.621 62.217 65.2782 61.9696 65.0698 cv
61.8151 64.9392 61.6444 64.8307 61.4628 64.7484 cv
61.4013 63.8986 61.4712 63.0344 61.5861 62.1975 cv
61.5861 62.1975 li
61.7625 60.9209 62.18 59.6835 62.8276 58.5701 cv
62.8991 58.4472 62.9734 58.3258 63.0505 58.206 cv
63.1895 57.9897 63.4257 57.8683 63.6693 57.8683 cv
63.7707 57.8683 63.8734 57.8894 63.9709 57.9334 cv
64.3416 58.1002 64.5072 58.5359 64.3405 58.9066 cv
63.843 60.0131 63.5417 61.2003 63.4323 62.4083 cv
63.4323 62.4083 li
63.3436 63.3859 63.3051 64.4124 63.5371 65.374 cv
63.5404 65.3865 li
63.5414 65.3907 63.5423 65.3948 63.5432 65.399 cv
63.727 66.1562 63.9689 66.9001 64.2785 67.6161 cv
64.2817 67.6226 li
64.2841 67.6282 64.2864 67.6338 64.2887 67.6395 cv
64.5466 68.233 64.8271 68.817 65.1329 69.388 cv
64.4328 69.5139 63.7207 69.5958 62.9984 69.6313 cv
f
56.9752 68.8363 mo
56.3431 68.633 55.729 68.3939 55.1352 68.122 cv
55.437 67.7459 55.7622 67.3871 56.1306 67.0797 cv
56.1306 67.0797 li
56.6187 66.6729 57.1676 66.3413 57.7289 66.0466 cv
57.7289 66.0466 li
57.7289 66.0466 li
57.7332 66.0441 li
57.7371 66.0421 57.741 66.0401 57.7449 66.0382 cv
58.2152 65.7902 58.6704 65.5118 59.0871 65.1822 cv
59.095 65.1754 59.1031 65.1687 59.1113 65.1621 cv
59.2267 65.0699 59.3486 64.9848 59.4762 64.9096 cv
59.686 64.7859 59.911 64.6888 60.1462 64.6302 cv
60.2839 64.596 60.4251 64.575 60.569 64.5696 cv
60.593 64.5687 60.617 64.5682 60.6409 64.5682 cv
60.9271 64.5682 61.206 64.6321 61.4628 64.7484 cv
61.6444 64.8307 61.8151 64.9392 61.9696 65.0698 cv
62.217 65.2782 62.3038 65.621 62.1854 65.9214 cv
62.1039 66.1278 61.9411 66.2781 61.7482 66.35 cv
61.6647 66.3812 61.5755 66.3977 61.4847 66.3977 cv
61.3927 66.3977 61.299 66.3807 61.2083 66.3449 cv
61.1154 66.3082 61.0261 66.292 60.9397 66.292 cv
60.6957 66.292 60.4754 66.4216 60.2685 66.5884 cv
60.2674 66.5894 60.2662 66.5903 60.265 66.5913 cv
60.2142 66.6325 60.1629 66.6731 60.1112 66.713 cv
60.0024 66.7969 59.8917 66.878 59.7791 66.9565 cv
59.4066 67.2162 59.0145 67.4477 58.6124 67.6577 cv
58.602 67.6636 58.5914 67.6694 58.5806 67.6749 cv
58.5803 67.6751 58.5799 67.6753 58.5796 67.6755 cv
58.5795 67.6758 li
58.5739 67.6787 58.5683 67.6815 58.5627 67.6843 cv
58.13 67.9107 57.7015 68.1635 57.3337 68.4861 cv
57.3337 68.4861 li
57.2082 68.5958 57.0892 68.7133 56.9752 68.8363 cv
f
59.1731 56.0143 mo
58.8443 56.0143 58.515 55.9563 58.199 55.8396 cv
59.4487 55.2921 60.7046 54.7566 61.9747 54.2569 cv
61.6332 54.8374 61.1497 55.3252 60.5553 55.6538 cv
60.5553 55.6538 li
60.3542 55.7651 60.1442 55.8508 59.9293 55.9107 cv
59.6816 55.9797 59.4275 56.0143 59.1731 56.0143 cv
56.2193 54.0672 mo
55.9912 53.9136 55.7901 53.7183 55.6258 53.4907 cv
55.6236 53.4878 55.6216 53.4849 55.6195 53.4819 cv
54.97 52.5754 54.9364 51.4276 55.5491 50.4924 cv
55.5491 50.4924 li
55.7184 50.2335 55.9124 49.9923 56.1287 49.7738 cv
56.477 49.4219 56.8829 49.129 57.3352 48.9167 cv
57.3352 48.9167 li
57.4083 48.8826 57.4825 48.851 57.5576 48.8222 cv
57.7241 48.6633 57.896 48.5055 58.0756 48.3572 cv
58.3703 48.1139 58.6855 47.8964 59.0311 47.743 cv
59.0311 47.743 li
59.291 47.6277 59.5544 47.5753 59.8133 47.5753 cv
60.4827 47.5753 61.1213 47.9261 61.5839 48.4482 cv
61.5839 48.4482 li
61.6545 48.5278 61.7231 48.6091 61.7894 48.6922 cv
62.1163 49.1014 62.3903 49.5522 62.5955 50.0345 cv
62.5955 50.0345 li
62.5965 50.0347 li
62.9418 50.8445 62.9081 51.7545 62.7166 52.599 cv
62.7166 52.599 li
62.6687 52.8106 62.6057 53.0171 62.5281 53.217 cv
62.4106 52.9416 62.14 52.7669 61.8461 52.7669 cv
61.8076 52.7669 61.7688 52.7699 61.7298 52.776 cv
61.7004 52.7807 61.671 52.7854 61.6417 52.7903 cv
61.5228 52.6089 61.3431 52.483 61.1421 52.4288 cv
61.0846 52.3762 61.0185 52.3311 60.9446 52.2957 cv
60.8337 52.2425 60.7145 52.2165 60.5959 52.2165 cv
60.416 52.2165 60.2375 52.2764 60.0913 52.3924 cv
59.8063 52.6168 59.4644 52.7814 59.1435 52.9478 cv
59.1276 52.956 59.1117 52.9642 59.0957 52.9725 cv
58.1289 53.3158 57.1698 53.6803 56.2193 54.0672 cv
.298039 .0705882 .431373 .0901961 cmyk
f
46.1749 58.1248 mo
46.1049 57.9147 46.0394 57.704 45.9776 57.4907 cv
46.5973 57.2351 47.2066 56.9491 47.8125 56.6728 cv
47.8125 56.6728 li
48.9128 56.1704 50.1101 55.635 51.3322 55.5405 cv
51.3322 55.5405 li
51.9218 55.4946 52.5089 55.4069 53.0809 55.2557 cv
53.0809 55.2557 li
53.8857 55.043 54.6659 54.7169 55.4315 54.3944 cv
55.4409 54.3901 55.4505 54.3859 55.4601 54.3818 cv
55.7125 54.2753 55.9656 54.1705 56.2193 54.0672 cv
57.1698 53.6803 58.1289 53.3158 59.0957 52.9725 cv
58.4465 53.3068 57.7829 53.6148 57.118 53.9167 cv
57.1133 53.9188 57.1086 53.921 57.104 53.9232 cv
55.9533 54.4343 54.766 54.8611 53.5686 55.2489 cv
53.5686 55.2489 li
51.863 55.8013 50.2006 56.4874 48.5638 57.2181 cv
48.5638 57.2181 li
47.831 57.545 47.0831 57.8561 46.3125 58.0844 cv
46.2673 58.0977 46.2214 58.1113 46.1749 58.1248 cv
61.3827 52.8358 mo
61.3449 52.6813 61.2623 52.5387 61.1421 52.4288 cv
61.3431 52.483 61.5228 52.6089 61.6417 52.7903 cv
61.5552 52.8046 61.4688 52.8198 61.3827 52.8358 cv
f
46.3279 58.5639 mo
46.275 58.4184 46.2239 58.272 46.1749 58.1248 cv
46.2214 58.1113 46.2673 58.0977 46.3125 58.0844 cv
47.0831 57.8561 47.831 57.545 48.5638 57.2181 cv
48.5638 57.2181 li
50.2006 56.4874 51.863 55.8013 53.5686 55.2489 cv
53.5686 55.2489 li
54.766 54.8611 55.9533 54.4343 57.104 53.9232 cv
57.1086 53.921 57.1133 53.9188 57.118 53.9167 cv
57.7829 53.6148 58.4465 53.3068 59.0957 52.9725 cv
59.1117 52.9642 59.1276 52.956 59.1435 52.9478 cv
59.4644 52.7814 59.8063 52.6168 60.0913 52.3924 cv
60.2375 52.2764 60.416 52.2165 60.5959 52.2165 cv
60.7145 52.2165 60.8337 52.2425 60.9446 52.2957 cv
61.0185 52.3311 61.0846 52.3762 61.1421 52.4288 cv
61.2623 52.5387 61.3449 52.6813 61.3827 52.8358 cv
59.9622 53.0999 58.5848 53.5953 57.2629 54.1671 cv
57.2534 54.1708 57.2439 54.1748 57.2345 54.1789 cv
57.2345 54.1789 li
57.2345 54.1789 li
55.8663 54.7727 54.4843 55.3408 53.0758 55.8336 cv
53.0758 55.8336 li
51.889 56.2484 50.7188 56.7146 49.5768 57.2438 cv
49.5768 57.2438 li
48.6986 57.65 47.8088 58.0373 46.8955 58.3572 cv
46.8955 58.3572 li
46.7054 58.4236 46.5163 58.4926 46.3279 58.5639 cv
f
47.1352 60.4239 mo
46.83 59.8225 46.56 59.201 46.3279 58.5639 cv
46.5163 58.4926 46.7054 58.4236 46.8955 58.3572 cv
46.8955 58.3572 li
47.8088 58.0373 48.6986 57.65 49.5768 57.2438 cv
49.5768 57.2438 li
50.7188 56.7146 51.889 56.2484 53.0758 55.8336 cv
53.0758 55.8336 li
54.4843 55.3408 55.8663 54.7727 57.2345 54.1789 cv
57.2345 54.1789 li
57.2439 54.1748 57.2534 54.1708 57.2629 54.1671 cv
58.5848 53.5953 59.9622 53.0999 61.3827 52.8358 cv
61.4688 52.8198 61.5552 52.8046 61.6417 52.7903 cv
61.671 52.7854 61.7004 52.7807 61.7298 52.776 cv
61.7688 52.7699 61.8076 52.7669 61.8461 52.7669 cv
62.14 52.7669 62.4106 52.9416 62.5281 53.217 cv
62.5312 53.2243 62.5342 53.2316 62.5371 53.2391 cv
62.6866 53.6203 62.4979 54.0517 62.1167 54.2012 cv
62.1104 54.2037 62.1042 54.2061 62.0978 54.2086 cv
62.0568 54.2247 62.0157 54.2408 61.9747 54.2569 cv
60.7046 54.7566 59.4487 55.2921 58.199 55.8396 cv
58.1675 55.8534 58.1363 55.8671 58.1049 55.8809 cv
58.0693 55.8965 58.0337 55.9121 57.9982 55.9277 cv
57.9982 55.9277 li
57.9982 55.9277 li
57.9938 55.9302 li
57.9861 55.9335 57.9784 55.9367 57.9707 55.9398 cv
56.5763 56.5522 55.1714 57.145 53.7462 57.6805 cv
53.7462 57.6805 li
52.6231 58.1024 51.5141 58.5624 50.4282 59.0707 cv
50.4282 59.0707 li
50.4282 59.0707 li
50.4249 59.0723 li
50.4231 59.0732 50.4212 59.074 50.4193 59.0749 cv
49.4854 59.5121 48.5374 59.9255 47.5647 60.2674 cv
47.5647 60.2674 li
47.4209 60.3178 47.2778 60.3701 47.1352 60.4239 cv
f
78.8132 55.2594 mo
77.4649 64.4566 68.9154 70.8199 59.7182 69.4711 cv
50.5205 68.1227 44.1577 59.5738 45.506 50.376 cv
46.8549 41.1789 55.4038 34.8161 64.6016 36.1644 cv
73.7988 37.5127 80.1616 46.0617 78.8132 55.2594 cv
cp
.75021 .679683 .670222 .90164 cmyk
5.197 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
gsave
[.540985 .0697327 -.0697327 .540985 78.8132 55.2594 ]ct
@
grestore newpath
63.0302 18.9003 mo
63.0151 18.3912 62.8326 17.8676 62.4065 17.5596 cv
61.9002 17.1928 61.162 17.2721 60.8079 17.8052 cv
60.7001 17.9688 60.6508 18.1641 60.668 18.3589 cv
60.6497 18.4614 60.6275 18.5634 60.6044 18.6642 cv
60.4537 19.3254 60.8668 19.9846 61.5289 20.1355 cv
62.1901 20.2863 62.8494 19.8722 63.0002 19.211 cv
63.0234 19.1092 63.0329 19.0045 63.0302 18.9003 cv
cp
60.4171 20.2584 mo
60.4171 20.2584 li
60.4062 20.992 60.9919 21.5948 61.7247 21.6046 cv
62.4583 21.6155 63.0612 21.0298 63.0709 20.297 cv
63.0705 20.2375 li
63.0574 19.7921 63.0433 19.3456 63.0302 18.9003 cv
63.0097 18.2221 62.4432 17.6893 61.7651 17.7088 cv
61.2063 17.7265 60.7292 18.1187 60.6044 18.6642 cv
60.4846 19.1872 60.4246 19.7229 60.4171 20.2584 cv
cp
60.4171 20.2584 mo
60.4072 20.8903 60.3307 21.5227 60.255 22.1492 cv
60.1666 22.8899 60.695 23.562 61.4358 23.6505 cv
62.1765 23.7389 62.8486 23.2105 62.937 22.4697 cv
62.9389 22.4548 li
63.0174 21.7208 63.0932 20.9764 63.0705 20.2375 cv
63.048 19.5045 62.4367 18.9287 61.7038 18.9511 cv
60.9942 18.9726 60.4269 19.5488 60.4171 20.2584 cv
cp
60.255 22.1492 mo
60.1712 22.8542 60.0763 23.5821 60.1278 24.2935 cv
60.1816 25.0334 60.8249 25.5892 61.5648 25.5354 cv
62.2762 25.4839 62.8223 24.8848 62.8103 24.1725 cv
62.7993 23.6004 62.877 23.0215 62.9389 22.4548 cv
63.0183 21.7139 62.4831 21.048 61.7413 20.9675 cv
61.0054 20.8878 60.3427 21.4143 60.255 22.1492 cv
cp
60.1278 24.2935 mo
60.1487 24.5775 60.1493 24.8619 60.1258 25.1462 cv
60.0681 25.8748 60.6111 26.5125 61.3397 26.5701 cv
62.0573 26.6273 62.6899 26.0999 62.7611 25.3831 cv
62.8018 24.981 62.8168 24.5756 62.8103 24.1725 cv
62.797 23.4307 62.1846 22.8395 61.4438 22.8529 cv
60.702 22.8662 60.111 23.4776 60.1243 24.2194 cv
60.1278 24.2935 li
cp
60.1258 25.1462 mo
60.0885 25.6153 60.1071 26.1047 60.2999 26.5409 cv
60.5933 27.2059 61.3693 27.5056 62.0333 27.2121 cv
62.6277 26.9499 62.9414 26.2916 62.7702 25.6646 cv
62.7441 25.5695 62.7513 25.4827 62.7611 25.3831 cv
62.8346 24.6565 62.3042 24.0074 61.5766 23.9348 cv
60.8499 23.8623 60.2017 24.3928 60.1282 25.1193 cv
60.1258 25.1462 li
cp
60.2422 26.3863 mo
60.2447 26.5701 li
60.2399 26.6623 60.2311 26.7539 60.2212 26.8464 cv
60.1434 27.5593 60.6586 28.2004 61.3714 28.2792 cv
62.0675 28.3548 62.6992 27.8656 62.7976 27.1725 cv
62.8761 26.626 62.9328 26.0304 62.7167 25.5085 cv
62.4402 24.8376 61.6718 24.5177 61 24.7941 cv
60.3768 25.0526 60.0492 25.7403 60.2422 26.3863 cv
cp
60.2212 26.8464 mo
60.1528 27.4708 60.0843 28.0961 60.0159 28.7205 cv
59.9368 29.4353 60.4518 30.0784 61.1666 30.1574 cv
61.8815 30.2354 62.5246 29.7205 62.6037 29.0057 cv
62.6071 28.9709 li
62.6563 28.3702 62.7126 27.7695 62.7976 27.1725 cv
62.9003 26.4618 62.4075 25.8033 61.6966 25.7016 cv
60.9868 25.6 60.3284 26.0929 60.2268 26.8027 cv
60.2212 26.8464 li
cp
60.0159 28.7205 mo
59.9781 29.0605 59.9597 29.407 59.9943 29.7482 cv
60.0448 30.2326 60.2286 30.7463 60.6935 30.9807 cv
60.8365 31.0526 60.9949 31.0901 61.1543 31.0895 cv
61.7656 31.0876 62.1844 30.584 62.3831 30.0591 cv
62.5146 29.7121 62.5757 29.3399 62.6071 28.9709 cv
62.6662 28.2545 62.1343 27.6254 61.417 27.5662 cv
60.7137 27.5078 60.0921 28.0195 60.0159 28.7205 cv
cp
f
59.9212 22.323 mo
60.8154 21.4562 61.6813 20.4799 62.2057 19.3376 cv
62.4357 18.8358 62.2156 18.2439 61.7139 18.0138 cv
61.3807 17.861 60.9912 17.9025 60.6976 18.1228 cv
59.782 18.8114 58.9165 19.5659 58.0638 20.3301 cv
57.5029 20.8326 57.4565 21.6937 57.9589 22.2545 cv
58.4614 22.8144 59.3224 22.8618 59.8822 22.3593 cv
59.9212 22.323 li
cp
57.2826 22.7683 mo
57.6042 23.1284 58.1011 23.2549 58.5629 23.1612 cv
58.774 23.1188 58.9744 23.0348 59.1597 22.9276 cv
59.4452 22.7617 59.6981 22.5443 59.9315 22.3132 cv
60.4657 21.7832 60.471 20.9208 59.9409 20.3866 cv
59.4344 19.8737 58.6162 19.8458 58.0741 20.3204 cv
57.6294 20.7118 57.0741 21.1715 56.9868 21.7935 cv
56.9373 22.146 57.0456 22.5028 57.2826 22.7683 cv
cp
f
60.862 19.5659 mo
61.5908 20.889 62.3526 22.2224 63.2936 23.4084 cv
63.8055 24.0521 64.7415 24.1597 65.386 23.6489 cv
66.0298 23.137 66.1373 22.201 65.6265 21.5565 cv
65.6004 21.5249 li
64.652 20.3954 63.6245 19.3322 62.5937 18.2788 cv
62.1733 17.8485 61.4845 17.8414 61.0543 18.2618 cv
60.7047 18.604 60.6258 19.1373 60.862 19.5659 cv
cp
63.2876 23.4005 mo
63.5213 23.6989 63.8106 23.958 64.1557 24.1205 cv
64.6559 24.3543 65.2552 24.359 65.7343 24.0678 cv
66.2124 23.7776 66.4872 23.2333 66.4328 22.6778 cv
66.4145 22.4989 66.3642 22.3261 66.299 22.1594 cv
66.1851 21.8694 65.941 21.6515 65.6419 21.5706 cv
65.5942 21.518 li
65.062 20.8908 64.122 20.815 63.4957 21.3483 cv
62.8865 21.8657 62.795 22.7714 63.2876 23.4005 cv
cp
f
60.1719 75.164 mo
60.1719 75.164 li
60.1522 75.9106 60.7406 76.5319 61.4872 76.5515 cv
62.2337 76.5722 62.8552 75.9828 62.8748 75.2362 cv
62.8748 75.2281 li
62.8892 74.5534 62.8735 73.8778 62.8465 73.2029 cv
62.8239 72.6353 62.3446 72.1924 61.7769 72.216 cv
61.4213 72.2296 61.0984 72.427 60.9224 72.736 cv
60.5025 73.4754 60.1947 74.3059 60.1719 75.164 cv
cp
60.1721 75.162 mo
60.1601 75.5839 60.177 76.0076 60.235 76.4264 cv
60.3379 77.1687 61.0233 77.6866 61.7645 77.5845 cv
62.5067 77.4815 63.0256 76.7962 62.9226 76.054 cv
62.9209 76.0437 li
62.8812 75.7734 62.8701 75.4997 62.8751 75.2261 cv
62.8896 74.4799 62.2956 73.8629 61.5494 73.8483 cv
60.8081 73.8344 60.1931 74.4206 60.1721 75.162 cv
cp
60.235 76.4264 mo
60.2597 76.602 60.2335 76.8053 60.2215 76.9843 cv
60.1935 77.4132 60.1463 77.8417 60.0961 78.2698 cv
60.0071 79.0155 60.5408 79.6933 61.2876 79.7815 cv
62.0344 79.8707 62.7112 79.3369 62.7994 78.59 cv
62.8 78.5851 li
62.8562 78.0942 62.9087 77.6009 62.9372 77.1065 cv
62.9574 76.7542 62.9725 76.3942 62.9209 76.0437 cv
62.8118 75.3026 62.1228 74.7893 61.3817 74.8985 cv
60.6449 75.0062 60.1325 75.6883 60.235 76.4264 cv
cp
60.0961 78.2698 mo
59.9946 79.1198 59.8918 79.9726 59.836 80.8275 cv
59.7881 81.5745 60.3543 82.2192 61.1003 82.267 cv
61.8352 82.3153 62.4733 81.7684 62.5387 81.0348 cv
62.6108 80.2173 62.706 79.4008 62.8 78.5851 cv
62.8861 77.839 62.3502 77.1629 61.6039 77.0778 cv
60.8588 76.9918 60.1841 77.5249 60.0961 78.2698 cv
cp
59.836 80.8275 mo
59.7953 81.4635 59.7898 82.101 59.8025 82.7379 cv
59.8166 83.4808 60.43 84.0721 61.1739 84.0581 cv
61.9168 84.0439 62.5081 83.4305 62.4941 82.6866 cv
62.4835 82.1357 62.489 81.5839 62.5385 81.0358 cv
62.6044 80.2901 62.0541 79.6313 61.3084 79.5654 cv
60.5627 79.4995 59.905 80.05 59.8381 80.7955 cv
59.836 80.8275 li
cp
59.8025 82.7379 mo
59.8087 83.0966 59.8654 83.4619 60.0199 83.7883 cv
60.1358 84.0311 60.3064 84.2487 60.5264 84.4041 cv
60.9174 84.6794 61.4441 84.7311 61.8672 84.4913 cv
62.0488 84.3886 62.1992 84.2386 62.3033 84.0575 cv
62.5348 83.6537 62.5028 83.1354 62.4941 82.6866 cv
62.4791 81.9426 61.8655 81.3523 61.1217 81.3663 cv
60.3786 81.3814 59.7883 81.995 59.8025 82.7379 cv
cp
f
56.8629 79.6657 mo
57.0386 80.0473 57.2281 80.4227 57.4188 80.7971 cv
57.7806 81.5102 58.6514 81.7949 59.3645 81.4331 cv
60.0776 81.0713 60.3624 80.1996 60.0006 79.4865 cv
59.9514 79.3984 li
59.472 78.5966 58.5411 77.9422 57.5699 78.186 cv
56.9998 78.3303 56.653 78.9087 56.7973 79.4788 cv
56.8629 79.6657 li
cp
57.4066 80.7744 mo
57.5223 81.0111 57.6282 81.2536 57.7171 81.502 cv
57.9946 82.2748 58.8452 82.6769 59.618 82.3994 cv
60.3907 82.123 60.7929 81.2714 60.5154 80.4986 cv
60.4881 80.4285 li
60.3358 80.062 60.1479 79.7121 59.9383 79.3756 cv
59.5144 78.6978 58.6217 78.49 57.9429 78.9137 cv
57.3147 79.3056 57.0842 80.1077 57.4066 80.7744 cv
cp
57.7171 81.502 mo
57.8648 81.9133 58.0698 82.3017 58.309 82.6673 cv
58.7622 83.3599 59.692 83.5544 60.3847 83.1002 cv
61.0773 82.647 61.2717 81.7183 60.8186 81.0247 cv
60.8119 81.0147 li
60.6887 80.8284 60.5746 80.6342 60.4881 80.4285 cv
60.1724 79.6709 59.3021 79.3127 58.5445 79.6284 cv
57.8135 79.9335 57.4502 80.7568 57.7171 81.502 cv
cp
58.309 82.6673 mo
58.5289 83.0031 58.6582 83.416 58.7892 83.7919 cv
59.0662 84.5838 59.932 85.0009 60.7238 84.7249 cv
61.5157 84.4479 61.9328 83.5821 61.6558 82.7902 cv
61.6402 82.7468 li
61.4113 82.1527 61.1658 81.5463 60.8119 81.0147 cv
60.3532 80.3254 59.4224 80.1389 58.7331 80.5975 cv
58.0472 81.0536 57.8585 81.978 58.309 82.6673 cv
cp
58.7892 83.7919 mo
58.961 84.2819 59.1271 84.7762 59.3308 85.2531 cv
59.6638 86.0331 60.5659 86.3954 61.3449 86.0623 cv
62.1247 85.7303 62.487 84.8282 62.155 84.0483 cv
61.9714 83.6193 61.807 83.1817 61.6402 82.7468 cv
61.3388 81.9639 60.4605 81.5734 59.6777 81.8737 cv
58.9118 82.1682 58.5189 83.018 58.7892 83.7919 cv
cp
59.3308 85.2531 mo
59.5383 85.7397 59.9198 86.1437 60.428 86.3151 cv
61.0261 86.5172 61.6781 86.3553 62.1472 85.9469 cv
62.7843 85.3928 62.8522 84.4276 62.2982 83.7905 cv
62.0813 83.5407 61.7889 83.3689 61.4652 83.299 cv
61.4664 83.2971 li
60.7194 82.8973 59.7887 83.1797 59.3899 83.9268 cv
59.1696 84.337 59.148 84.8253 59.3308 85.2531 cv
cp
62.1472 85.9469 mo
62.6252 85.5316 62.9371 84.9265 63.231 84.3756 cv
63.6236 83.6377 63.3436 82.7204 62.6047 82.3277 cv
61.8734 81.939 60.9654 82.2091 60.5663 82.9351 cv
60.4714 83.1084 60.3736 83.2803 60.2675 83.4461 cv
60.1875 83.5739 60.1055 83.6631 60.0053 83.7752 cv
59.4432 84.4045 59.4972 85.3704 60.1264 85.9334 cv
60.7005 86.446 61.5669 86.4518 62.1472 85.9469 cv
cp
63.231 84.3756 mo
63.569 83.7406 63.9259 83.1151 64.2959 82.4973 cv
64.7226 81.784 64.4907 80.8608 63.7774 80.4341 cv
63.067 80.0088 62.1462 80.2369 61.7181 80.946 cv
61.321 81.6016 60.9352 82.2637 60.5663 82.9351 cv
60.1634 83.6676 60.4308 84.5883 61.1643 84.9914 cv
61.8968 85.3943 62.8176 85.1269 63.2205 84.3944 cv
63.231 84.3756 li
cp
64.2959 82.4973 mo
64.5452 82.0808 64.7862 81.6501 65.0773 81.2611 cv
65.5721 80.5989 65.4369 79.6609 64.7748 79.1652 cv
64.1228 78.6779 63.2004 78.8019 62.6993 79.4431 cv
62.3312 79.9129 62.0258 80.4362 61.7181 80.946 cv
61.2877 81.6568 61.5153 82.5815 62.2261 83.0119 cv
62.937 83.4413 63.8616 83.2147 64.292 82.5039 cv
64.2959 82.4973 li
cp
65.0773 81.2611 mo
65.1615 81.1479 65.2703 81.0551 65.3853 80.9761 cv
66.0621 80.5048 66.2294 79.5746 65.7582 78.8968 cv
65.2879 78.2201 64.3567 78.0526 63.6798 78.524 cv
63.6744 78.5273 li
63.3085 78.7846 62.9747 79.0894 62.6993 79.4431 cv
62.1898 80.0943 62.3055 81.0349 62.9567 81.5443 cv
63.6081 82.0527 64.5485 81.938 65.058 81.2858 cv
65.0773 81.2611 li
cp
65.3854 80.9751 mo
65.7775 80.703 66.0955 80.3165 66.2383 79.858 cv
66.4313 79.2366 66.2642 78.4911 65.6854 78.1322 cv
65.5117 78.0251 65.3128 77.9641 65.1092 77.9561 cv
64.5846 77.9348 64.0889 78.2369 63.6755 78.5264 cv
63.0004 79 62.8359 79.9316 63.3095 80.6067 cv
63.7822 81.2807 64.7107 81.4457 65.3854 80.9751 cv
cp
f
83.9982 53.6167 mo
84.1631 53.2447 83.9963 53.6164 84.0243 53.5555 cv
84.0984 53.3947 84.1216 53.2151 84.0906 53.0408 cv
84.0724 52.9396 84.178 53.419 84.0701 52.9182 cv
83.9387 52.3033 83.3336 51.9127 82.7198 52.0443 cv
82.1058 52.1769 81.7154 52.7809 81.847 53.3948 cv
81.9785 54.0087 82.5835 54.4002 83.1973 54.2686 cv
83.5531 54.1915 83.8505 53.9495 83.9982 53.6167 cv
cp
81.7815 53.214 mo
81.7966 53.5113 81.9281 53.7975 82.1425 54.0036 cv
82.611 54.4522 83.3551 54.4372 83.8046 53.9688 cv
84.2532 53.5003 84.2381 52.7573 83.7697 52.3077 cv
83.3677 51.9222 82.7501 51.8718 82.2909 52.1877 cv
82.0454 52.3557 81.8708 52.6155 81.807 52.9067 cv
81.7851 53.0067 81.7767 53.1105 81.7815 53.214 cv
cp
82.5947 54.2736 mo
82.7381 54.3193 82.8823 54.3661 83.0255 54.4128 cv
83.6944 54.6281 84.4123 54.2609 84.6286 53.5921 cv
84.845 52.9222 84.4777 52.2044 83.8078 51.989 cv
83.6336 51.9323 83.4494 51.9146 83.2682 51.9355 cv
83.1187 51.9536 82.9693 51.9706 82.8197 51.9886 cv
82.1748 52.0638 81.7134 52.6476 81.7896 53.2926 cv
81.8427 53.7482 82.1573 54.1315 82.5947 54.2736 cv
cp
83.0255 54.4128 mo
83.3459 54.5157 83.6882 54.5436 84.0233 54.5485 cv
84.4106 54.5551 84.798 54.5304 85.1835 54.4964 cv
85.9497 54.4268 86.5148 53.7505 86.4452 52.9843 cv
86.3765 52.2183 85.6991 51.6541 84.9341 51.7228 cv
84.8757 51.7294 li
84.3403 51.8005 83.8046 51.8726 83.2682 51.9355 cv
82.5699 52.0179 82.07 52.6502 82.1523 53.3495 cv
82.2105 53.844 82.5513 54.2589 83.0255 54.4128 cv
cp
85.1835 54.4964 mo
85.8701 54.4337 86.5576 54.3651 87.2393 54.2624 cv
88.0198 54.1442 88.5572 53.4169 88.44 52.6365 cv
88.3228 51.8561 87.5956 51.3188 86.8142 51.4358 cv
86.773 51.4426 li
86.1432 51.557 85.5096 51.6458 84.8757 51.7294 cv
84.1136 51.8298 83.5777 52.53 83.6781 53.2921 cv
83.7764 54.0317 84.4409 54.563 85.1835 54.4964 cv
cp
87.2393 54.2624 mo
87.6547 54.2 88.0734 54.1582 88.4938 54.1508 cv
89.2872 54.1362 89.9203 53.4797 89.9057 52.6863 cv
89.8907 51.8949 89.241 51.2647 88.4503 51.2737 cv
87.8868 51.2807 87.3263 51.3425 86.773 51.4426 cv
85.9956 51.5834 85.4803 52.3266 85.6211 53.104 cv
85.7591 53.8638 86.4754 54.3766 87.2393 54.2624 cv
cp
88.4938 54.1508 mo
88.9982 54.1413 89.5023 54.1256 90.0061 54.1048 cv
90.7987 54.0729 91.4162 53.4044 91.3843 52.6118 cv
91.3524 51.8192 90.6839 51.2017 89.8913 51.2336 cv
89.8893 51.2333 li
89.4098 51.2532 88.93 51.2679 88.4503 51.2737 cv
87.6556 51.2831 87.019 51.9351 87.0285 52.7298 cv
87.0381 53.5236 87.69 54.1602 88.4848 54.1507 cv
88.4938 54.1508 li
cp
90.0061 54.1048 mo
90.4733 54.0864 90.9406 54.075 91.4082 54.0768 cv
92.2102 54.0814 92.8633 53.4346 92.8678 52.6326 cv
92.8714 51.8305 92.2247 51.1765 91.4227 51.1719 cv
91.356 51.1734 li
90.8673 51.1941 90.3778 51.2136 89.8893 51.2333 cv
89.0966 51.2662 88.48 51.9349 88.5128 52.7286 cv
88.5459 53.5203 89.2135 54.1367 90.0061 54.1048 cv
cp
91.4082 54.0768 mo
91.7014 54.0783 91.9972 54.0287 92.2659 53.9071 cv
92.8431 53.6458 93.2393 53.0515 93.1644 52.4047 cv
93.1205 52.0259 92.9185 51.6843 92.6094 51.462 cv
92.2421 51.1978 91.7929 51.1551 91.356 51.1734 cv
90.5542 51.2061 89.9316 51.8831 89.9643 52.6848 cv
89.9955 53.4602 90.6313 54.0735 91.4082 54.0768 cv
cp
f
89.2454 49.3021 mo
89.3959 49.2771 li
89.8265 49.2137 90.124 48.8144 90.0605 48.3838 cv
90.0513 48.3302 li
90.0243 48.2037 li
90.0066 48.1137 90.0779 48.5151 90.0164 48.1472 cv
89.9243 47.5949 89.4017 47.222 88.8493 47.3141 cv
88.297 47.4063 87.9232 47.9288 88.0163 48.4812 cv
88.1084 49.0335 88.6301 49.4063 89.1834 49.3143 cv
89.2454 49.3021 li
cp
87.9959 48.2013 mo
87.9959 48.2013 li
87.9207 48.7845 88.333 49.3176 88.9151 49.3926 cv
89.4983 49.4678 90.0313 49.0566 90.1064 48.4734 cv
90.1815 47.8912 89.7703 47.3583 89.1871 47.2831 cv
88.6049 47.208 88.071 47.6191 87.9959 48.2013 cv
cp
88.1289 48.8668 mo
88.2153 49.0181 88.3018 49.1684 88.3882 49.3196 cv
88.7511 49.9532 89.5587 50.1723 90.1924 49.8093 cv
90.8251 49.4453 91.0441 48.6376 90.681 48.005 cv
90.476 47.6479 90.117 47.406 89.7095 47.3524 cv
89.5371 47.3292 89.3636 47.3058 89.1911 47.2836 cv
88.6093 47.2056 88.0744 47.6156 87.9964 48.1974 cv
87.9655 48.4293 88.0119 48.6642 88.1289 48.8668 cv
cp
88.3882 49.3196 mo
88.6565 49.7878 89.0107 50.2075 89.3761 50.6035 cv
89.9704 51.2498 90.9763 51.2917 91.6227 50.6965 cv
92.2689 50.1022 92.3109 49.0963 91.7166 48.4501 cv
91.6138 48.3481 li
91.082 47.8672 90.4331 47.4488 89.7095 47.3524 cv
88.9859 47.2561 88.3205 47.7642 88.2242 48.4879 cv
88.1861 48.7754 88.2441 49.0682 88.3882 49.3196 cv
cp
89.3761 50.6035 mo
89.7652 51.0267 90.1746 51.4334 90.6054 51.8146 cv
91.2794 52.4127 92.3108 52.351 92.9088 51.677 cv
93.5069 51.0029 93.4453 49.9716 92.7702 49.3734 cv
92.7558 49.3604 li
92.3712 49.0275 91.9913 48.6891 91.6138 48.3481 cv
90.9629 47.758 89.9563 47.8077 89.3672 48.4588 cv
88.8158 49.0683 88.8189 49.9983 89.3761 50.6035 cv
cp
90.6054 51.8146 mo
90.9156 52.0905 91.1931 52.4016 91.4429 52.7322 cv
91.9883 53.4529 93.0143 53.5962 93.735 53.0509 cv
94.4566 52.5057 94.599 51.4794 94.0536 50.7588 cv
93.6695 50.2505 93.2374 49.7774 92.7558 49.3604 cv
92.0746 48.7705 91.0437 48.8443 90.4538 49.5254 cv
89.8696 50.2013 89.9366 51.2222 90.6054 51.8146 cv
cp
91.4429 52.7322 mo
91.7212 53.0998 92.0031 53.4709 92.3208 53.8063 cv
92.9387 54.4566 93.9666 54.4843 94.6179 53.8665 cv
95.2405 53.2762 95.2965 52.3024 94.7451 51.6445 cv
94.5048 51.3574 94.2793 51.0571 94.0536 50.7588 cv
93.5093 50.0383 92.4822 49.8948 91.7616 50.4402 cv
91.0409 50.9855 90.8986 52.0117 91.4429 52.7322 cv
cp
91.9613 53.2084 mo
91.9613 53.2084 li
91.9172 54.0981 92.6019 54.8558 93.4915 54.8999 cv
94.0976 54.9307 94.6693 54.6182 94.9719 54.0926 cv
95.4243 53.305 95.3262 52.3375 94.7442 51.6434 cv
94.1683 50.9561 93.1434 50.8663 92.456 51.4432 cv
91.9427 51.8741 91.7465 52.5747 91.9612 53.2094 cv
cp
93.1959 55.8015 mo
93.5467 55.5281 93.8941 55.2503 94.2229 54.9518 cv
94.5037 54.6977 94.781 54.4239 94.9719 54.0926 cv
94.9709 54.0924 li
95.4153 53.3199 95.1481 52.3347 94.3766 51.8904 cv
93.6715 51.4859 92.7758 51.6689 92.286 52.3166 cv
92.1814 52.4554 92.0502 52.5655 91.9168 52.6773 cv
91.6895 52.8689 91.4552 53.0514 91.2182 53.2316 cv
90.506 53.774 90.3678 54.7917 90.9102 55.5038 cv
91.4526 56.216 92.4692 56.3542 93.1824 55.8119 cv
93.1959 55.8015 li
cp
90.2137 57.2773 mo
91.3059 57.041 92.3195 56.4831 93.1959 55.8015 cv
93.902 55.2513 94.0292 54.2332 93.4801 53.5262 cv
92.9342 52.8257 91.9258 52.6936 91.2182 53.2316 cv
90.3225 53.9147 89.5182 54.7809 89.0406 55.8103 cv
88.7975 56.3355 89.0257 56.9588 89.5508 57.203 cv
89.7582 57.2993 89.9908 57.3252 90.2137 57.2773 cv
cp
f
32.3391 60.5713 mo
32.2641 60.6685 li
32.3186 60.6131 li
32.5638 60.3694 li
32.9433 59.9989 32.951 59.3909 32.5805 59.0114 cv
32.4417 58.8685 32.2623 58.7738 32.0673 58.7375 cv
31.8802 58.7033 31.691 58.6537 31.5092 58.6243 cv
30.826 58.512 30.1805 58.9753 30.0692 59.6586 cv
29.9569 60.3419 30.4203 60.9864 31.1035 61.0987 cv
31.5825 61.1766 32.0637 60.9714 32.3391 60.5713 cv
cp
32.3234 59.1285 mo
32.3234 59.1285 li
31.9182 58.5651 31.134 58.4377 30.5706 58.843 cv
30.0549 59.2141 29.8983 59.9129 30.2056 60.4697 cv
30.1784 60.4854 li
30.335 60.7092 li
30.6336 61.0522 31.0727 61.1895 31.5138 61.1546 cv
32.2309 61.0978 32.7657 60.469 32.7089 59.7519 cv
32.6511 59.0346 32.0233 58.5 31.3062 58.5567 cv
31.1842 58.5723 li
30.9408 58.6306 li
30.6943 58.736 li
29.1953 59.5551 32.5538 59.5786 32.5592 59.8334 cv
32.5542 59.622 32.4971 59.416 32.3906 59.2329 cv
cp
31.5138 61.1546 mo
31.8612 61.1268 32.2096 61.0991 32.557 61.0713 cv
33.3017 61.012 33.8566 60.3596 33.7973 59.6149 cv
33.7379 58.8712 33.0857 58.3153 32.3419 58.3757 cv
32.2148 58.3915 li
31.8713 58.4511 31.5278 58.5117 31.1842 58.5723 cv
30.4755 58.6967 30.0022 59.3727 30.1266 60.0815 cv
30.2429 60.7437 30.8434 61.2083 31.5138 61.1546 cv
cp
32.557 61.0713 mo
33.208 61.0191 33.8553 60.917 34.4882 60.7556 cv
35.245 60.5628 35.7022 59.7929 35.5094 59.0361 cv
35.3166 58.2792 34.5467 57.822 33.7897 58.0158 cv
33.7249 58.0337 li
33.2306 58.1847 32.7244 58.302 32.2148 58.3915 cv
31.4792 58.5206 30.9886 59.2216 31.1176 59.9571 cv
31.2388 60.6443 31.8622 61.1269 32.557 61.0713 cv
cp
34.4882 60.7556 mo
35.0386 60.6158 35.6058 60.5407 36.1709 60.4906 cv
36.9748 60.4178 37.5674 59.7077 37.4946 58.9038 cv
37.4228 58.1 36.7127 57.5074 35.9088 57.5802 cv
35.8372 57.5881 li
35.1246 57.6878 34.4145 57.8231 33.7249 58.0337 cv
32.9786 58.2621 32.5582 59.0519 32.7865 59.7992 cv
33.007 60.5213 33.7563 60.9426 34.4882 60.7556 cv
cp
36.1709 60.4906 mo
36.6167 60.4503 37.0735 60.3952 37.5212 60.4106 cv
38.3424 60.4378 39.0302 59.7954 39.0573 58.9752 cv
39.085 58.158 38.4485 57.472 37.632 57.4394 cv
37.0342 57.4147 36.4276 57.5059 35.8372 57.5881 cv
35.0384 57.6999 34.4813 58.4387 34.5931 59.2376 cv
34.7014 60.0088 35.3956 60.56 36.1709 60.4906 cv
cp
37.5212 60.4106 mo
38.0733 60.4293 38.6258 60.312 39.156 60.1726 cv
39.9607 59.9608 40.4419 59.1375 40.2302 58.3319 cv
40.0193 57.5273 39.195 57.047 38.3904 57.2578 cv
38.3118 57.281 li
38.1004 57.3485 37.8489 57.4461 37.6219 57.4391 cv
36.8018 57.411 36.114 58.0533 36.0858 58.8745 cv
36.0587 59.6947 36.701 60.3825 37.5212 60.4106 cv
cp
39.156 60.1726 mo
39.3396 60.1247 39.523 60.0788 39.7083 60.0412 cv
39.9135 60.0061 li
40.7613 59.9763 41.4248 59.2643 41.394 58.4153 cv
41.3643 57.5666 40.6512 56.904 39.8034 56.9338 cv
39.7191 56.9391 li
39.2395 56.9831 38.7683 57.1341 38.3118 57.281 cv
37.5197 57.5358 37.0837 58.384 37.3385 59.1761 cv
37.583 59.9386 38.3816 60.3763 39.156 60.1726 cv
cp
39.9257 60.0057 mo
40.4661 59.9826 40.9818 59.7123 41.2907 59.2641 cv
41.5622 58.8706 41.652 58.37 41.529 57.9084 cv
41.4164 57.4836 41.135 57.1398 40.7787 56.8922 cv
40.3892 56.6212 39.8645 56.6554 39.5129 56.974 cv
39.5132 56.972 li
38.686 57.1628 38.1692 57.9885 38.36 58.8157 cv
38.527 59.538 39.1854 60.0383 39.9257 60.0057 cv
cp
f
35.4041 55.6622 mo
35.5362 55.4665 35.6655 55.2694 35.7865 55.0662 cv
35.9026 54.8694 36.0159 54.6632 36.0603 54.436 cv
36.0924 54.2728 36.087 54.1037 36.0442 53.9429 cv
35.9202 53.4732 35.5067 53.1376 35.0394 53.0481 cv
34.7166 52.9864 34.3804 53.0368 34.0812 53.1676 cv
33.6496 53.356 33.3048 53.6997 33.048 54.0881 cv
32.6151 54.7401 32.7932 55.619 33.4452 56.052 cv
34.0944 56.4835 34.9689 56.3089 35.4041 55.6622 cv
cp
34.2822 57.0834 mo
34.6729 56.6256 35.0663 56.1631 35.4029 55.6641 cv
35.8405 55.0147 35.6696 54.1346 35.0202 53.697 cv
34.3718 53.2595 33.4918 53.4304 33.0533 54.0787 cv
33.0468 54.0899 li
32.7763 54.4987 32.4497 54.874 32.1314 55.2464 cv
31.6243 55.8404 31.6948 56.7328 32.2888 57.2399 cv
32.8829 57.747 33.7752 57.6765 34.2822 57.0834 cv
cp
33.118 58.473 mo
33.4991 58.0039 33.8892 57.543 34.2822 57.0834 cv
34.7893 56.4894 34.7198 55.5972 34.1259 55.0891 cv
33.5319 54.582 32.6395 54.6525 32.1326 55.2455 cv
32.1314 55.2464 li
31.7193 55.7296 31.3096 56.2173 30.9174 56.7172 cv
30.4383 57.329 30.545 58.2139 31.1558 58.6929 cv
31.7611 59.1672 32.6337 59.07 33.118 58.473 cv
cp
31.8704 59.8367 mo
32.3066 59.4019 32.7297 58.9513 33.118 58.473 cv
33.6082 57.8697 33.5157 56.9836 32.9124 56.4935 cv
32.3091 56.0033 31.4232 56.0948 30.9329 56.6991 cv
30.9174 56.7172 li
30.6012 57.1211 30.2501 57.4983 29.8895 57.8632 cv
29.3468 58.4123 29.3517 59.2972 29.9008 59.8399 cv
30.4462 60.38 31.3257 60.3785 31.8704 59.8367 cv
cp
30.6377 60.8816 mo
31.1063 60.6255 31.4956 60.2098 31.8704 59.8367 cv
32.4165 59.292 32.4187 58.407 31.8742 57.8599 cv
31.3287 57.3127 30.4436 57.3115 29.8964 57.856 cv
29.8895 57.8632 li
29.7271 58.0278 29.563 58.1902 29.3926 58.3466 cv
29.2539 58.4679 li
29.261 58.4678 li
28.6005 58.8596 28.3838 59.7119 28.7745 60.3723 cv
29.1573 61.0165 29.9813 61.2417 30.6377 60.8816 cv
cp
28.5417 60.6457 mo
28.5417 60.6457 li
28.761 61.4161 29.5635 61.8623 30.334 61.642 cv
31.0876 61.4276 31.5344 60.6524 31.3419 59.8925 cv
31.3408 59.8934 li
31.4676 59.1364 30.9581 58.4194 30.2011 58.2926 cv
29.8765 58.2376 29.5438 58.2996 29.261 58.4678 cv
28.832 58.722 28.5418 59.1585 28.4615 59.6483 cv
28.4074 59.9821 28.4492 60.3222 28.5417 60.6457 cv
cp
28.5417 60.6457 mo
28.7263 61.2936 29.1389 61.855 29.5959 62.3384 cv
30.1834 62.9586 31.1629 62.9861 31.7841 62.3987 cv
32.4043 61.8111 32.4318 60.8316 31.8443 60.2114 cv
31.7583 60.1277 li
31.5525 59.9409 31.3233 59.7399 31.178 59.4984 cv
30.7642 58.8128 29.8731 58.5921 29.1876 59.0059 cv
28.6268 59.3439 28.3618 60.0155 28.5417 60.6457 cv
cp
29.5959 62.3384 mo
30.1079 62.8793 30.6797 63.3634 31.2649 63.822 cv
31.9655 64.371 32.9784 64.2485 33.5275 63.548 cv
34.0764 62.8484 33.9539 61.8354 33.2534 61.2864 cv
33.1825 61.2339 li
32.6906 60.8892 32.2044 60.5311 31.7583 60.1277 cv
31.1254 59.5541 30.1462 59.6023 29.5725 60.2361 cv
29.0304 60.8358 29.0404 61.7516 29.5959 62.3384 cv
cp
31.2649 63.822 mo
31.5058 64.0103 31.7442 64.2024 31.9733 64.4043 cv
32.0811 64.4988 32.1937 64.595 32.2874 64.7049 cv
32.8824 65.3926 33.9222 65.4682 34.6098 64.8742 cv
35.2974 64.2803 35.374 63.2405 34.7791 62.5518 cv
34.7668 62.5381 li
34.3154 62.0273 33.7384 61.6222 33.1825 61.2339 cv
32.4538 60.7235 31.4488 60.9015 30.9394 61.6303 cv
30.4488 62.3314 30.5918 63.2946 31.2649 63.822 cv
cp
32.2874 64.7049 mo
32.6349 65.1067 33.0311 65.4824 33.5582 65.6249 cv
34.4381 65.8624 35.3432 65.3408 35.5806 64.461 cv
35.7704 63.7554 35.4744 63.0085 34.8513 62.6257 cv
34.7668 62.5381 li
34.165 61.8566 33.1246 61.7931 32.443 62.3949 cv
31.7671 62.9923 31.6979 64.0219 32.2874 64.7049 cv
cp
33.5582 65.6249 mo
34.3143 65.8293 35.1472 65.4769 35.4977 64.7598 cv
35.5934 64.5655 35.6487 64.3548 35.6605 64.1385 cv
35.7067 63.3419 35.1547 62.6265 34.3952 62.4328 cv
33.5118 62.207 32.6142 62.7406 32.3884 63.624 cv
32.1658 64.4987 32.6861 65.3895 33.5582 65.6249 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
